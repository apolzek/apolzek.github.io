<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>apolzek</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2024-06-07T16:36:09+00:00</updated>
 <id></id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>sistemas-observaveis</title>
   <link href="/2024/06/07/sistemas-observaveis.html"/>
   <updated>2024-06-07T00:00:00+00:00</updated>
   <id>/2024/06/07/sistemas-observaveis</id>
   <content type="html">&lt;p&gt;Antes de iniciar, reflita sobre as seguintes questões:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Como saber quando a observabilidade foi alcançada?&lt;/li&gt;
  &lt;li&gt;Para obter observabilidade, é necessário ter monitoramento previamente?&lt;/li&gt;
  &lt;li&gt;Qual é o investimento apropriado para assegurar a observabilidade de um sistema ou produto?&lt;/li&gt;
  &lt;li&gt;Quais questões podem ser respondidas ao se atingir o estágio de observabilidade em um sistema?&lt;/li&gt;
  &lt;li&gt;Os dados relacionados ao negócio também fazem parte da observabilidade?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Talvez ao ouvir o termo “observabilidade”, venha imediatamente à mente uma pilha de ferramentas e belos dashboards. Também pensamos nos pilares como logs, traces e métricas. Mas, afinal, o que isso realmente significa? Eu costumo pensar que é a capacidade de entender como o sistema está funcionando em determinado momento, sem a necessidade de grandes esforços mentais. Envolve ter uma visão abrangente e profunda de um sistema e suas dependências. Afinal, nosso sistema não pode parar, ou pode? A questão é relativa, pois temos diferentes tipos de serviços com variados tamanhos e níveis de complexidade. A verdade é que, nos últimos anos, toda uma indústria tem se movimentado para criar ferramentas avançadas (para não dizer milagrosas) nesse contexto, formando, muitas vezes, uma visão turva sobre o que realmente é essa capacidade de entendimento. Espero conseguir transmitir minha ideia com clareza.&lt;/p&gt;

&lt;p&gt;Eu posso garantir que o conceito vai além de ter boas métricas e ferramentas configuradas. Envolve ajudar o observador a entender o que o sistema deveria fazer e se ele de fato está fazendo isso. Por ser complexo, pode ser abordado de diferentes formas dentro das empresas. O mais comum é trabalhar por níveis, onde o topo da pirâmide se concentra em ver um panorama geral e mais importante relacionado ao negócio. À medida que se desce na pirâmide, tem-se mais dados e começa-se a observar partes com menos relevância de maneira mais detalhada. Esse tipo de abordagem ajuda a manter diferentes times focados em analisar aquilo que é de seu domínio técnico (aplicação, rede, banco de dados, etc.). Isso é apenas uma maneira de escalar essa capacidade em um ambiente organizacional que possui várias frentes e várias pessoas. Naturalmente, você terá diferentes níveis de entendimento. Um dos maiores desafios aqui é fornecer uma plataforma uniforme que atenda os diferentes times de Engenharia.&lt;/p&gt;

&lt;p&gt;Uma boa linha de raciocínio é associar a capacidade de entendimento do sistema a dinheiro (receita). Por que alguém decidiu investir tanto para monitorar um sistema? A primeira resposta que me vem à mente é: porque esse sistema é importante. E aqui não me entenda mal, o sistema pode ser crucial tanto por sua capacidade de gerar receita quanto por seu valor ideológico; isso não importa. O que importa é que todos nós estamos empenhados em garantir uma boa experiência para o usuário final. Em determinados momentos, isso pode ser mais valioso do que o próprio dinheiro. Assim, investimos recursos porque sabemos que os erros inevitavelmente ocorrerão e queremos estar preparados de diversas formas para minimizá-los ou corrigi-los rapidamente. Nós, como usuários finais, somos extremamente exigentes quando se trata de um sistema. Queremos que ele cumpra sua proposta de maneira eficiente.&lt;/p&gt;

&lt;p&gt;Sistemas computacionais tendem a ser complexos por natureza, pois são construídos sobre uma pilha de abstrações que presumimos estar funcionando corretamente. Se você é um programador, engenheiro de software ou algo do tipo, sabe das variadas formas que existem para construir a mesma funcionalidade. Além disso, há as dependências, como sistemas de banco de dados, sistemas de mensageria, caches e outros. Temos também a parte de comunicação, que pode envolver redes de computadores. Para acompanhar a evolução dos sistemas, essas ferramentas também foram naturalmente melhoradas, e algumas até substituídas. Para obter uma compreensão completa, um dos requisitos é ter informações detalhadas sobre essas dependências. Isso permite que você saia do campo da especulação e entre no do determinismo. Aqui, o futuro é considerado fixo e definido com base no estado atual e nas leis naturais que governam o universo. Ou seja, você sabe que se sua API está recebendo um alto número de requisições, mais chamadas laterais podem acontecer, resultando em um alto consumo de banda e maior uso do banco de dados. Nesse sentido, é importante lembrar que, se o sistema foi mal desenhado ou se seus subsistemas carregam débitos técnicos, a observabilidade vai te ajudar a identificar esses problemas rapidamente.&lt;/p&gt;

&lt;p&gt;Quem avisa amigo é. Cuidado para não tratar um problema que é reflexo de um problema maior. O efeito cascata é comum em arquiteturas complexas e chegar a origem do problema pode ser complexo ! Vamos seguido..&lt;/p&gt;

&lt;p&gt;Normalmente o que consguimos ter dos sistemas são logs, traces, métricas e eventos. Existem várias ferramentas no mercado para lidar com esses dados, como Prometheus, Grafana, Elasticsearch, Logstash, Kibana, Splunk, New Relic, Datadog, Jaeger, Zipkin, Dynatrace, Honeycomb, AppDynamics, Sentry, Fluentd, Nagios, Zabbix, VictoriaMetrics, Thanos, OpenTelemetry e Graylog. Esta lista é apenas uma pequena amostra, pois há muitas outras ferramentas disponíveis. Quero destacar três das ferramentas mencionadas: Dynatrace, New Relic e Datadog. Estou destacando essas três para fazer uma breve tangente. Em todos os lugares em que trabalhei, pelo menos uma dessas três empresas estava presente. O mais intrigante é que todos esses locais enfrentaram o mesmo problema: custo em ascensão acelerada. Meu objetivo não é criticar essas empresas muito menos suas soluções de mercado, mas aprender com o modelo de negócio delas e no que ele implica.&lt;/p&gt;

&lt;p&gt;Essas empresas normalmente tem três principais desafios. O primeiro relacionado a própria observabilidade, ou seja, como conseguir extrair dados relevantes de sistemas complexos da forma mais abstraída possível para seus clientes. O segundo é como fornecer visualização rápida, elegante e confiável, lembrando que cada cliente terá necessidade específicas. O terceiro desafio está relacionado ao modelo de negócio mencionado anteriormente e diz respeito a como essas empresas lidam com uma massiva quantidade de dados. Se você deseja crescer, tenha bastante atenção a esse último desafio pois isso implica&lt;/p&gt;
</content>
 </entry>
 

</feed>
