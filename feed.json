{
    "version": "https://jsonfeed.org/version/1",
    "title": "apolzek",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "description": "blog",
    "icon": "/apple-touch-icon.png",
    "favicon": "/favicon.ico",
    "expired": false,
    
"items": [
    
        {
            "id": "/2024/12/01/caixa-de-ferramentas.html",
            "title": "tool/caixa-de-ferramentas",
            "summary": "Minha caixa de ferramentas",
            "content_text": "Plugins asdf  awscli  bat  cfssl  docker-slim  dotnet-core  eksctl  fd  fzf  helm  helm-docs  java  jq  k6  kind  kubectl  kubectx  lazygit  maven  mysql  neovim  nodejs  rust  shellcheck  teller  terraform  tilt  trivy  yamllintOutras ferramentas  visidata  kind  docker  containerd  virtualbox",
            "content_html": "<h3 id=\"plugins-asdf\">Plugins asdf</h3><ul>  <li>awscli</li>  <li>bat</li>  <li>cfssl</li>  <li>docker-slim</li>  <li>dotnet-core</li>  <li>eksctl</li>  <li>fd</li>  <li>fzf</li>  <li>helm</li>  <li>helm-docs</li>  <li>java</li>  <li>jq</li>  <li>k6</li>  <li>kind</li>  <li>kubectl</li>  <li>kubectx</li>  <li>lazygit</li>  <li>maven</li>  <li>mysql</li>  <li>neovim</li>  <li>nodejs</li>  <li>rust</li>  <li>shellcheck</li>  <li>teller</li>  <li>terraform</li>  <li>tilt</li>  <li>trivy</li>  <li>yamllint</li></ul><h3 id=\"outras-ferramentas\">Outras ferramentas</h3><ul>  <li>visidata</li>  <li>kind</li>  <li>docker</li>  <li>containerd</li>  <li>virtualbox</li></ul>",
            "url": "/2024/12/01/caixa-de-ferramentas.html",
            
            
            
            "tags": ["linux","tools","toolbox"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/resumo-livro-sre-google.html",
            "title": "sre/resumo-livro-sre-google",
            "summary": "Falando sobre processos no Linux",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/resumo-livro-sre-google.html",
            
            
            
            "tags": ["processos","processes","process","linux"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/engenharia-de-confiabilidade-no-brasil.html",
            "title": "opiniao/engenharia-de-confiabilidade-no-brasil",
            "summary": "Falando sobre Engenharia de Confiabilidade no mercado Brasileiro",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/engenharia-de-confiabilidade-no-brasil.html",
            
            
            
            "tags": ["sre","confiabilidade","reliability","engineer"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/processos-no-linux.html",
            "title": "linux/processos-no-linux",
            "summary": "Falando sobre processos no Linux",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/processos-no-linux.html",
            
            
            
            "tags": ["processos","processes","process","linux"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/nao-se-apaixone-por-distros.html",
            "title": "linux/nao-se-apaixone-por-distros",
            "summary": "Uma breve reflexão sobre distros Linux",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/nao-se-apaixone-por-distros.html",
            
            
            
            "tags": ["linux","distro"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/easy-cka.html",
            "title": "k8s/easy-cka",
            "summary": "Visão geral sobre a certificação CKA",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/easy-cka.html",
            
            
            
            "tags": ["cka","certification","kubernetes","k8s"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/auto-recuperacao-mental.html",
            "title": "diario/auto-recuperacao-mental",
            "summary": "Como eu resolvo problemas que só existem na minha cabeça",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/auto-recuperacao-mental.html",
            
            
            
            "tags": ["mente","cérebro","brain"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "dev/ruby/basicao",
            "summary": "Basicão sobre a linguagem Ruby",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "dev/python/basicao",
            "summary": "Basicão sobre a linguagem Python",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/factory.html",
            "title": "dev/padroes-de-projeto/factory",
            "summary": "Entendendo padrão de projeto Factory",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/factory.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "dev/java/basicao",
            "summary": "Basicão sobre a linguagem Java",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/slices.html",
            "title": "dev/golang/basicao",
            "summary": "Basicão sobre a linguagem Golang",
            "content_text": "package mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(s)\tfmt.Println(s)}func modifySlice(i []int) {\ti[0] = 3\ti = append(i, 4)\ti[2] = 4}O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.package mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(&amp;s)\tfmt.Println(s)}func modifySlice(i *[]int) {\t// Corrija o slice usando o ponteiro\t(*i)[0] = 3\t*i = append(*i, 4)\t(*i)[2] = 4}",
            "content_html": "<div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div><p>O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span><span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"c\">// Corrija o slice usando o ponteiro</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/slices.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "dev/golang/basicao",
            "summary": "Basicão sobre a linguagem Golang",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/filas.html",
            "title": "dev/estrutura-de-dados/filas",
            "summary": "Entendendo estrutura de dados Fila",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/filas.html",
            
            
            
            "tags": ["fila","queue"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/terraform.html",
            "title": "cheatsheet/terraform",
            "summary": "Cheatsheet terraform",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/terraform.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/kubectl.html",
            "title": "cheatsheet/kubectl",
            "summary": "Cheatsheet kubectl",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/kubectl.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/git.html",
            "title": "cheatsheet/git",
            "summary": "Cheatsheet git",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/git.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/asdf.html",
            "title": "cheatsheet/asdf",
            "summary": "Cheatsheet asdf",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/asdf.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/dominando-o-iam.html",
            "title": "aws/dominando-o-iam",
            "summary": "Dominando de uma vez por todas o AWS IAM",
            "content_text": "A IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:UsuáriosUm usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:aws iam create-user --user-name myuserGruposUm grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuserPolíticasAs políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}FunçõesAs funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.jsonAssume Role Policy DocumentO documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}",
            "content_html": "<p>A IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:</p><h4 id=\"usuários\">Usuários</h4><p>Um usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-user --user-name myuser</code></pre></div></div><h4 id=\"grupos\">Grupos</h4><p>Um grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuser</code></pre></div></div><h4 id=\"políticas\">Políticas</h4><p>As políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}</code></pre></div></div><h4 id=\"funções\">Funções</h4><p>As funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.json</code></pre></div></div><h4 id=\"assume-role-policy-document\">Assume Role Policy Document</h4><p>O documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}</code></pre></div></div>",
            "url": "/2024/12/01/dominando-o-iam.html",
            
            
            
            "tags": ["iam","aws","security"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/08/25/generics.html",
            "title": "dev/golang/generics",
            "summary": "Entendendo Generics no Go",
            "content_text": "GenericsResumindo Generics.. normalmente criamos uma variável de um tipo específico e em algum momento colocamos um valor dentro dela respeitando esse tipo. Quando utilizamos generics fazemos o inverso, onde recebemos um valor sem ter um tipo pré-definido e em algum momento podemos especifica-lo(normalmente no momento de uso).Generics tem tudo haver com Constraints e Interfaces. Antes da versão 1.18(alguma coisa) para fazer o tipo Any era utilizado interface vazia, representado por interface{}.func Print(a ...interface{}) (n int, err error)Para descobrir o tipo, era utilizado o switch:package mainimport \"fmt\"func something(x interface{}) {\tswitch idk := x.(type) {\tcase int:\t\tfmt.Println(\"eh int:\", idk)\tcase string:\t\tfmt.Println(\"eh string:\", idk)\tdefault:\t\tfmt.Println(\"eh invalido\", idk)\t}}func main() {\tsomething(\"brazil\")\tsomething(1337)\tsomething(12.123)}Modelo abaixo está utilizando Genericspackage mainimport \"fmt\"type UserTest1 struct {\tname string\tage  int16}type UserTest2 struct {\tdocumentNumber string\taddress        string}func userTest[T UserTest1 | UserTest2](user T) {\tfmt.Println(user)\tfmt.Println(user)}func identity[T any](arg T) T {\treturn arg}func anyType(arg any) any {\treturn arg}func main() {\tu1 := UserTest1{\t\tname: \"Mario\",\t\tage:  29,\t}\tuserTest(u1)\t// num := 10\t// userTest(num)\tout1 := identity[string](\"test\")\tfmt.Println(out1)\tout2 := identity[int16](1234)\tfmt.Println(out2)\tout3 := anyType(1234)\tfmt.Println(out3)\tout4 := anyType(\"test\")\tfmt.Println(out4)}E para fazer comparações entre variáveis do tipo Any ?? Abaixo está um jeito feio de se fazerfunc main() {\tvar value1 interface{} = 42\tvar value2 interface{} = \"42\"\tif reflect.TypeOf(value1).Kind() == reflect.Int &amp;&amp; reflect.TypeOf(value2).Kind() == reflect.String {\t\tconvertedValue1 := value1.(int)\t\tconvertedValue2 := value2.(string)\t\tif convertedValue1 == 42 &amp;&amp; convertedValue2 == \"42\" {\t\t\tfmt.Println(\"As variáveis são iguais.\")\t\t} else {\t\t\tfmt.Println(\"As variáveis são diferentes.\")\t\t}\t} else {\t\tfmt.Println(\"Tipos incompatíveis para comparação.\")\t}}Abaixo está uma implementação mais elegante. Ele utiliza o comparable.package mainimport \"fmt\"func anyTest[T comparable](arg1 T, arg2 T) {\tfmt.Println(arg1 == arg2)}func main() {\tanyTest(1, 2)}Comparação com &lt; e &gt;. Também possível comparar tipo primitivo de tipo definido(usando ~)package mainimport \"fmt\"func test[T NumberTests](arg1 T, arg2 T) {\tfmt.Println(arg1 &gt;= arg2)}func testInt[T ~int64](arg1 T, arg2 T) {\tfmt.Println(arg1 &gt;= arg2)}type MyNum int64type NumberTests interface {\tint64 | float64 | float32}type NumberIntTests interface {\tint64}func main() {\ttest(3.2, 2.0)\tvar iNum MyNum = 44\ttestInt(iNum, 33)}É possível utilizar na declaração de um tipo também. Onde não é mais necessário definir o tipo no momento da criação. Ex:package mainimport \"fmt\"type User[T any, B any] struct {\tname T\tage  B}func main() {\tuserTest := User[string, int64]{\t\tname: \"joao\",\t\tage:  20,\t}\tfmt.Println(userTest)}Referências  https://gobyexample.com/generics  https://www.youtube.com/watch?v=nD_6L2PBfaE  https://www.youtube.com/watch?v=XcDnQvVCW78",
            "content_html": "<h2 id=\"generics\">Generics</h2><p>Resumindo Generics.. normalmente criamos uma variável de um tipo específico e em algum momento colocamos um valor dentro dela respeitando esse tipo. Quando utilizamos generics fazemos o inverso, onde recebemos um valor sem ter um tipo pré-definido e em algum momento podemos especifica-lo(normalmente no momento de uso).</p><p><strong>Generics</strong> tem tudo haver com <strong>Constraints e Interfaces</strong>. Antes da versão 1.18(alguma coisa) para fazer o tipo Any era utilizado interface vazia, representado por <em>interface{}</em>.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">func</span> <span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">...</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span></code></pre></div></div><p>Para descobrir o tipo, era utilizado o <strong>switch</strong>:</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">something</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">{</span>\t<span class=\"k\">switch</span> <span class=\"n\">idk</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"k\">type</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">case</span> <span class=\"kt\">int</span><span class=\"o\">:</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"eh int:\"</span><span class=\"p\">,</span> <span class=\"n\">idk</span><span class=\"p\">)</span>\t<span class=\"k\">case</span> <span class=\"kt\">string</span><span class=\"o\">:</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"eh string:\"</span><span class=\"p\">,</span> <span class=\"n\">idk</span><span class=\"p\">)</span>\t<span class=\"k\">default</span><span class=\"o\">:</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"eh invalido\"</span><span class=\"p\">,</span> <span class=\"n\">idk</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">something</span><span class=\"p\">(</span><span class=\"s\">\"brazil\"</span><span class=\"p\">)</span>\t<span class=\"n\">something</span><span class=\"p\">(</span><span class=\"m\">1337</span><span class=\"p\">)</span>\t<span class=\"n\">something</span><span class=\"p\">(</span><span class=\"m\">12.123</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>Modelo abaixo está utilizando Generics</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">type</span> <span class=\"n\">UserTest1</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">name</span> <span class=\"kt\">string</span>\t<span class=\"n\">age</span>  <span class=\"kt\">int16</span><span class=\"p\">}</span><span class=\"k\">type</span> <span class=\"n\">UserTest2</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">documentNumber</span> <span class=\"kt\">string</span>\t<span class=\"n\">address</span>        <span class=\"kt\">string</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">userTest</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">UserTest1</span> <span class=\"o\">|</span> <span class=\"n\">UserTest2</span><span class=\"p\">](</span><span class=\"n\">user</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">identity</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">any</span><span class=\"p\">](</span><span class=\"n\">arg</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"n\">T</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">arg</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">anyType</span><span class=\"p\">(</span><span class=\"n\">arg</span> <span class=\"n\">any</span><span class=\"p\">)</span> <span class=\"n\">any</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">arg</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">u1</span> <span class=\"o\">:=</span> <span class=\"n\">UserTest1</span><span class=\"p\">{</span>\t\t<span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"s\">\"Mario\"</span><span class=\"p\">,</span>\t\t<span class=\"n\">age</span><span class=\"o\">:</span>  <span class=\"m\">29</span><span class=\"p\">,</span>\t<span class=\"p\">}</span>\t<span class=\"n\">userTest</span><span class=\"p\">(</span><span class=\"n\">u1</span><span class=\"p\">)</span>\t<span class=\"c\">// num := 10</span>\t<span class=\"c\">// userTest(num)</span>\t<span class=\"n\">out1</span> <span class=\"o\">:=</span> <span class=\"n\">identity</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">](</span><span class=\"s\">\"test\"</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out1</span><span class=\"p\">)</span>\t<span class=\"n\">out2</span> <span class=\"o\">:=</span> <span class=\"n\">identity</span><span class=\"p\">[</span><span class=\"kt\">int16</span><span class=\"p\">](</span><span class=\"m\">1234</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out2</span><span class=\"p\">)</span>\t<span class=\"n\">out3</span> <span class=\"o\">:=</span> <span class=\"n\">anyType</span><span class=\"p\">(</span><span class=\"m\">1234</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out3</span><span class=\"p\">)</span>\t<span class=\"n\">out4</span> <span class=\"o\">:=</span> <span class=\"n\">anyType</span><span class=\"p\">(</span><span class=\"s\">\"test\"</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out4</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>E para fazer comparações entre variáveis do tipo Any ?? Abaixo está um jeito feio de se fazer</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">value1</span> <span class=\"k\">interface</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"m\">42</span>\t<span class=\"k\">var</span> <span class=\"n\">value2</span> <span class=\"k\">interface</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"s\">\"42\"</span>\t<span class=\"k\">if</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">TypeOf</span><span class=\"p\">(</span><span class=\"n\">value1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Kind</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Int</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">TypeOf</span><span class=\"p\">(</span><span class=\"n\">value2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Kind</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">String</span> <span class=\"p\">{</span>\t\t<span class=\"n\">convertedValue1</span> <span class=\"o\">:=</span> <span class=\"n\">value1</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span>\t\t<span class=\"n\">convertedValue2</span> <span class=\"o\">:=</span> <span class=\"n\">value2</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">)</span>\t\t<span class=\"k\">if</span> <span class=\"n\">convertedValue1</span> <span class=\"o\">==</span> <span class=\"m\">42</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">convertedValue2</span> <span class=\"o\">==</span> <span class=\"s\">\"42\"</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"As variáveis são iguais.\"</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"As variáveis são diferentes.\"</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span>\t<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Tipos incompatíveis para comparação.\"</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Abaixo está uma implementação mais elegante. Ele utiliza o <strong>comparable</strong>.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">anyTest</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">comparable</span><span class=\"p\">](</span><span class=\"n\">arg1</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">arg2</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">arg1</span> <span class=\"o\">==</span> <span class=\"n\">arg2</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">anyTest</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>Comparação com &lt; e &gt;. Também possível comparar tipo primitivo de tipo definido(usando <strong>~</strong>)</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">NumberTests</span><span class=\"p\">](</span><span class=\"n\">arg1</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">arg2</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">arg1</span> <span class=\"o\">&gt;=</span> <span class=\"n\">arg2</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">testInt</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"err\">~</span><span class=\"kt\">int64</span><span class=\"p\">](</span><span class=\"n\">arg1</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">arg2</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">arg1</span> <span class=\"o\">&gt;=</span> <span class=\"n\">arg2</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">type</span> <span class=\"n\">MyNum</span> <span class=\"kt\">int64</span><span class=\"k\">type</span> <span class=\"n\">NumberTests</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"kt\">int64</span> <span class=\"o\">|</span> <span class=\"kt\">float64</span> <span class=\"o\">|</span> <span class=\"kt\">float32</span><span class=\"p\">}</span><span class=\"k\">type</span> <span class=\"n\">NumberIntTests</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"kt\">int64</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">test</span><span class=\"p\">(</span><span class=\"m\">3.2</span><span class=\"p\">,</span> <span class=\"m\">2.0</span><span class=\"p\">)</span>\t<span class=\"k\">var</span> <span class=\"n\">iNum</span> <span class=\"n\">MyNum</span> <span class=\"o\">=</span> <span class=\"m\">44</span>\t<span class=\"n\">testInt</span><span class=\"p\">(</span><span class=\"n\">iNum</span><span class=\"p\">,</span> <span class=\"m\">33</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>É possível utilizar na declaração de um tipo também. Onde não é mais necessário definir o tipo no momento da criação. Ex:</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">type</span> <span class=\"n\">User</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">any</span><span class=\"p\">,</span> <span class=\"n\">B</span> <span class=\"n\">any</span><span class=\"p\">]</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">name</span> <span class=\"n\">T</span>\t<span class=\"n\">age</span>  <span class=\"n\">B</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">userTest</span> <span class=\"o\">:=</span> <span class=\"n\">User</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"kt\">int64</span><span class=\"p\">]{</span>\t\t<span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"s\">\"joao\"</span><span class=\"p\">,</span>\t\t<span class=\"n\">age</span><span class=\"o\">:</span>  <span class=\"m\">20</span><span class=\"p\">,</span>\t<span class=\"p\">}</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">userTest</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><h2 id=\"referências\">Referências</h2><ul>  <li>https://gobyexample.com/generics</li>  <li>https://www.youtube.com/watch?v=nD_6L2PBfaE</li>  <li>https://www.youtube.com/watch?v=XcDnQvVCW78</li></ul>",
            "url": "/2023/08/25/generics.html",
            
            
            
            "tags": ["go","generics"],
            
            "date_published": "2023-08-25T00:00:00+00:00",
            "date_modified": "2023-08-25T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/08/12/docker.html",
            "title": "cheatsheet/docker",
            "summary": "Cheatsheet docker",
            "content_text": "Comandos basicos para imagensdocker image builddocker image historydocker image importdocker image inspectdocker image loaddocker image lsdocker image prunedocker image pulldocker image pushdocker image rmdocker image savedocker image tagComandos basicos para containersdocker run -d --name meu-container nginx:latestdocker run --name meu-container -p 80:8080 nginx:latestdocker stop meu-containerdocker start meu-containerdocker logs meu-containerdocker exec -it meu-container bashdocker rm meu-containerComandos basicos para builddocker build -t minha-imagem:latest /caminho/do/Dockerfiledocker rmi minha-imagem:latestComandos para copiar arquivos entre host e containerdocker cp arquivo.txt nome-do-container:/caminho/no/contêiner/docker cp nome-do-container:/caminho/no/contêiner/arquivo.txt arquivo.txtComandos para visualisar e limitar recursosdocker statsdocker run --cpus=2 --memory=1g nome-da-imagemRemover todas as imagens ou containersdocker rmi $(docker images -q)docker rm -f $(docker ps -aq)Comando para limpar containers e itens associados a elesdocker system prune -a --volumes --dry-rundocker system prune -a --volumesConverter imagem para arquivo e depois importar novamentedocker save -o nome_da_imagem.tar nome_da_imagemdocker load -i nome_da_imagem.tar",
            "content_html": "<h2 id=\"comandos-basicos-para-imagens\">Comandos basicos para imagens</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker image builddocker image historydocker image importdocker image inspectdocker image loaddocker image lsdocker image prunedocker image pulldocker image pushdocker image rmdocker image savedocker image tag</code></pre></div></div><h2 id=\"comandos-basicos-para-containers\">Comandos basicos para containers</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker run -d --name meu-container nginx:latestdocker run --name meu-container -p 80:8080 nginx:latestdocker stop meu-containerdocker start meu-containerdocker logs meu-containerdocker exec -it meu-container bashdocker rm meu-container</code></pre></div></div><h2 id=\"comandos-basicos-para-build\">Comandos basicos para build</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker build -t minha-imagem:latest /caminho/do/Dockerfiledocker rmi minha-imagem:latest</code></pre></div></div><h2 id=\"comandos-para-copiar-arquivos-entre-host-e-container\">Comandos para copiar arquivos entre host e container</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker cp arquivo.txt nome-do-container:/caminho/no/contêiner/docker cp nome-do-container:/caminho/no/contêiner/arquivo.txt arquivo.txt</code></pre></div></div><h2 id=\"comandos-para-visualisar-e-limitar-recursos\">Comandos para visualisar e limitar recursos</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker statsdocker run --cpus=2 --memory=1g nome-da-imagem</code></pre></div></div><h2 id=\"remover-todas-as-imagens-ou-containers\">Remover todas as imagens ou containers</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker rmi $(docker images -q)docker rm -f $(docker ps -aq)</code></pre></div></div><h2 id=\"comando-para-limpar-containers-e-itens-associados-a-eles\">Comando para limpar containers e itens associados a eles</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker system prune -a --volumes --dry-rundocker system prune -a --volumes</code></pre></div></div><h2 id=\"converter-imagem-para-arquivo-e-depois-importar-novamente\">Converter imagem para arquivo e depois importar novamente</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker save -o nome_da_imagem.tar nome_da_imagemdocker load -i nome_da_imagem.tar</code></pre></div></div>",
            "url": "/2023/08/12/docker.html",
            
            
            
            
            
            "date_published": "2023-08-12T00:00:00+00:00",
            "date_modified": "2023-08-12T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/07/28/deletar-historico-commits-github.html",
            "title": "dev/git/deletar-historico-commits-github",
            "summary": "Deletar todo histórico de commits no Github",
            "content_text": "Deleting the .git folder may cause problems in your git repository. If you want to delete all your commit history but keep the code in its current state, it is very safe to do it as in the following:1 - Checkoutgit checkout --orphan latest_branch2 - Add all the filesgit add -A3 - Commit the changesgit commit -am \"commit message\"4 - Delete the branchgit branch -D main5 - Rename the current branch to maingit branch -m main6 - Finally, force update your repositorygit push -f origin mainPS: this will not keep your old commit history aroundReference",
            "content_html": "<p>Deleting the .git folder may cause problems in your git repository. If you want to delete all your commit history but keep the code in its current state, it is very safe to do it as in the following:</p><p>1 - Checkout</p><p><code class=\"language-plaintext highlighter-rouge\">git checkout --orphan latest_branch</code></p><p>2 - Add all the files</p><p><code class=\"language-plaintext highlighter-rouge\">git add -A</code></p><p>3 - Commit the changes</p><p><code class=\"language-plaintext highlighter-rouge\">git commit -am \"commit message\"</code></p><p>4 - Delete the branch</p><p><code class=\"language-plaintext highlighter-rouge\">git branch -D main</code></p><p>5 - Rename the current branch to main</p><p><code class=\"language-plaintext highlighter-rouge\">git branch -m main</code></p><p>6 - Finally, force update your repository</p><p><code class=\"language-plaintext highlighter-rouge\">git push -f origin main</code></p><p><em>PS: this will not keep your old commit history around</em></p><p><a href=\"https://stackoverflow.com/questions/13716658/how-to-delete-all-commit-history-in-github\">Reference</a></p>",
            "url": "/2023/07/28/deletar-historico-commits-github.html",
            
            
            
            "tags": ["git","history","github"],
            
            "date_published": "2023-07-28T00:00:00+00:00",
            "date_modified": "2023-07-28T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/07/27/vim.html",
            "title": "cheatsheet/vim",
            "summary": "Cheatsheet vim",
            "content_text": "            Comando      Descrição                  vim file.txt      Criar ou abrir um arquivo(caso exista)              i      Modo de inserção              Insert      Modo de inserção              ESQ      Sair do modo inserção              a      Modo inserção um caractere a frente              I      Modo inserção no inicio da linha              A      Modo inserção no final da linha              o      Modo inserção na próxima linha              O      Modo inserção na linha acima              S      Apagar linha completa e entrar no modo inserção              u      Desfaz ultima alteração(igual crtl + z)              crtl + r      Refaz ultima alteração              :w      Salvar o arquivo              :wq      Salvar e sair do arquivo              :q!      Sair sem salvar              :x      Salvar e sair do arquivo              ZZ      Salvar e sair do arquivo              yy      Copiar a linha toda              p      Colar a linha copiada              y5y      Copiar 5 linhas              dd      Recortar a linha              d3d      Recortar 3 linhas              ESQ + v      Modo visual horizontal              ESQ + V      Modo visual vertical              y + w      Copia uma palavra              y + 3 + w      Copia 3 palavras a frente              x      delete              X      backspace              :w file-new.txt      Salvar arquivo com outro nome(salvar como)              :split another-file.txt      Divide a tela em duas              crtl + w + w      Alternar entre as divisões de tela              :r /etc/hosts      Copiar conteúdo de hosts para arquivo atual              /linux      Procurar a palavra “linux” dentro do arquivo              n      Procura próxima ocorrência da palavra              ?  linux      Buscar palavra “linux” de baixo pra cima              :%s/windows/linux      Troca todas as ocorrências de windows por linux              :%s/windows/linux/g      Troca todas as ocorrências de windows por linux(mais de uma por linha)              e! /etc/hosts      Mudar para outro arquivo descartando alterações atuais              ESQ + :syntax on      Habilita o Highlight(arquivo deve ter extenção)              ESQ + :set nu      Habilitar a numeração das linhas              ESQ + :set nonu      Desabilitar a numeração das linhas              :ab google google.com.br      Criar uma abreviação              :set ai      Auto identação              :set noai      Desabilitar auto identação              :set visualbell      Trocar notificação de som para modo visual              :set ic      Buscar no modo ignore case sensitive              :set bg=light      Background claro              :set tabstop=4      Tamanho do tab em 4 espaços              :set showmatch      Mostrar fechamento de parenteses              :.,$!sort      Ordenação alfabética              :.,$!sort | pr -2t      Ordenação alfabética em duas colunas      ",
            "content_html": "<table>  <thead>    <tr>      <th style=\"text-align: center\">Comando</th>      <th style=\"text-align: center\">Descrição</th>    </tr>  </thead>  <tbody>    <tr>      <td style=\"text-align: center\">vim file.txt</td>      <td style=\"text-align: center\">Criar ou abrir um arquivo(caso exista)</td>    </tr>    <tr>      <td style=\"text-align: center\">i</td>      <td style=\"text-align: center\">Modo de inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">Insert</td>      <td style=\"text-align: center\">Modo de inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ</td>      <td style=\"text-align: center\">Sair do modo inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">a</td>      <td style=\"text-align: center\">Modo inserção um caractere a frente</td>    </tr>    <tr>      <td style=\"text-align: center\">I</td>      <td style=\"text-align: center\">Modo inserção no inicio da linha</td>    </tr>    <tr>      <td style=\"text-align: center\">A</td>      <td style=\"text-align: center\">Modo inserção no final da linha</td>    </tr>    <tr>      <td style=\"text-align: center\">o</td>      <td style=\"text-align: center\">Modo inserção na próxima linha</td>    </tr>    <tr>      <td style=\"text-align: center\">O</td>      <td style=\"text-align: center\">Modo inserção na linha acima</td>    </tr>    <tr>      <td style=\"text-align: center\">S</td>      <td style=\"text-align: center\">Apagar linha completa e entrar no modo inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">u</td>      <td style=\"text-align: center\">Desfaz ultima alteração(igual crtl + z)</td>    </tr>    <tr>      <td style=\"text-align: center\">crtl + r</td>      <td style=\"text-align: center\">Refaz ultima alteração</td>    </tr>    <tr>      <td style=\"text-align: center\">:w</td>      <td style=\"text-align: center\">Salvar o arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">:wq</td>      <td style=\"text-align: center\">Salvar e sair do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">:q!</td>      <td style=\"text-align: center\">Sair sem salvar</td>    </tr>    <tr>      <td style=\"text-align: center\">:x</td>      <td style=\"text-align: center\">Salvar e sair do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">ZZ</td>      <td style=\"text-align: center\">Salvar e sair do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">yy</td>      <td style=\"text-align: center\">Copiar a linha toda</td>    </tr>    <tr>      <td style=\"text-align: center\">p</td>      <td style=\"text-align: center\">Colar a linha copiada</td>    </tr>    <tr>      <td style=\"text-align: center\">y5y</td>      <td style=\"text-align: center\">Copiar 5 linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">dd</td>      <td style=\"text-align: center\">Recortar a linha</td>    </tr>    <tr>      <td style=\"text-align: center\">d3d</td>      <td style=\"text-align: center\">Recortar 3 linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + v</td>      <td style=\"text-align: center\">Modo visual horizontal</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + V</td>      <td style=\"text-align: center\">Modo visual vertical</td>    </tr>    <tr>      <td style=\"text-align: center\">y + w</td>      <td style=\"text-align: center\">Copia uma palavra</td>    </tr>    <tr>      <td style=\"text-align: center\">y + 3 + w</td>      <td style=\"text-align: center\">Copia 3 palavras a frente</td>    </tr>    <tr>      <td style=\"text-align: center\">x</td>      <td style=\"text-align: center\">delete</td>    </tr>    <tr>      <td style=\"text-align: center\">X</td>      <td style=\"text-align: center\">backspace</td>    </tr>    <tr>      <td style=\"text-align: center\">:w file-new.txt</td>      <td style=\"text-align: center\">Salvar arquivo com outro nome(salvar como)</td>    </tr>    <tr>      <td style=\"text-align: center\">:split another-file.txt</td>      <td style=\"text-align: center\">Divide a tela em duas</td>    </tr>    <tr>      <td style=\"text-align: center\">crtl + w + w</td>      <td style=\"text-align: center\">Alternar entre as divisões de tela</td>    </tr>    <tr>      <td style=\"text-align: center\">:r /etc/hosts</td>      <td style=\"text-align: center\">Copiar conteúdo de hosts para arquivo atual</td>    </tr>    <tr>      <td style=\"text-align: center\">/linux</td>      <td style=\"text-align: center\">Procurar a palavra “linux” dentro do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">n</td>      <td style=\"text-align: center\">Procura próxima ocorrência da palavra</td>    </tr>    <tr>      <td style=\"text-align: center\">?  linux</td>      <td style=\"text-align: center\">Buscar palavra “linux” de baixo pra cima</td>    </tr>    <tr>      <td style=\"text-align: center\">:%s/windows/linux</td>      <td style=\"text-align: center\">Troca todas as ocorrências de windows por linux</td>    </tr>    <tr>      <td style=\"text-align: center\">:%s/windows/linux/g</td>      <td style=\"text-align: center\">Troca todas as ocorrências de windows por linux(mais de uma por linha)</td>    </tr>    <tr>      <td style=\"text-align: center\">e! /etc/hosts</td>      <td style=\"text-align: center\">Mudar para outro arquivo descartando alterações atuais</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + :syntax on</td>      <td style=\"text-align: center\">Habilita o Highlight(arquivo deve ter extenção)</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + :set nu</td>      <td style=\"text-align: center\">Habilitar a numeração das linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + :set nonu</td>      <td style=\"text-align: center\">Desabilitar a numeração das linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">:ab google google.com.br</td>      <td style=\"text-align: center\">Criar uma abreviação</td>    </tr>    <tr>      <td style=\"text-align: center\">:set ai</td>      <td style=\"text-align: center\">Auto identação</td>    </tr>    <tr>      <td style=\"text-align: center\">:set noai</td>      <td style=\"text-align: center\">Desabilitar auto identação</td>    </tr>    <tr>      <td style=\"text-align: center\">:set visualbell</td>      <td style=\"text-align: center\">Trocar notificação de som para modo visual</td>    </tr>    <tr>      <td style=\"text-align: center\">:set ic</td>      <td style=\"text-align: center\">Buscar no modo ignore case sensitive</td>    </tr>    <tr>      <td style=\"text-align: center\">:set bg=light</td>      <td style=\"text-align: center\">Background claro</td>    </tr>    <tr>      <td style=\"text-align: center\">:set tabstop=4</td>      <td style=\"text-align: center\">Tamanho do tab em 4 espaços</td>    </tr>    <tr>      <td style=\"text-align: center\">:set showmatch</td>      <td style=\"text-align: center\">Mostrar fechamento de parenteses</td>    </tr>    <tr>      <td style=\"text-align: center\">:.,$!sort</td>      <td style=\"text-align: center\">Ordenação alfabética</td>    </tr>    <tr>      <td style=\"text-align: center\">:.,$!sort | pr -2t</td>      <td style=\"text-align: center\">Ordenação alfabética em duas colunas</td>    </tr>  </tbody></table>",
            "url": "/2023/07/27/vim.html",
            
            
            
            "tags": ["vim","vi","editor","1991"],
            
            "date_published": "2023-07-27T00:00:00+00:00",
            "date_modified": "2023-07-27T00:00:00+00:00",
            
                "author": 
                ""
                
            
        }
    
    ]
}