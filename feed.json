{
    "version": "https://jsonfeed.org/version/1",
    "title": "apolzek",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "description": "blog",
    "icon": "/apple-touch-icon.png",
    "favicon": "/favicon.ico",
    "expired": false,
    
"items": [
    
        {
            "id": "/2024/12/01/it-acronym.html",
            "title": "opinions/it-acronyms",
            "summary": "IT Acronyms",
            "content_text": "IT Acronyms“Por favor, note que neste artigo, evitarei fazer comparações entre os itens mencionados, concentrando-me em analisá-los individualmente.”SOLID:Sigla:S: Single Responsibility PrincipleO: Open/Closed PrincipleL: Liskov Substitution PrincipleI: Interface Segregation PrincipleD: Dependency Inversion PrincipleEstes são princípios de design de software que visam criar código mais fácil de entender, manter e estender.YAGNI:Sigla:Y: You Ain’t Gonna Need ItPrincípio que sugere que você não deve adicionar funcionalidades ou complexidades ao seu código até que realmente precise delas. Evita o excesso de engenharia.BDD:B: Behavior-Driven DevelopmentD: DevelopmentMetodologia de desenvolvimento que se concentra no comportamento esperado do software, envolvendo colaboração entre desenvolvedores, testadores e partes interessadas.OOD:Sigla:O: Object-Oriented DesignD: DevelopmentRefere-se ao processo de usar princípios de design orientado a objetos durante o desenvolvimento de software para criar sistemas mais flexíveis e reutilizáveis.ACID:Sigla:A: AtomicityC: ConsistencyI: IsolationD: DurabilityPrincípios de transação em banco de dados que garantem a integridade dos dados mesmo em face de falhas.ORM:Sigla:O: Object-Relational MappingTécnica de programação que converte dados entre tipos de sistemas incompatíveis em linguagens de programação orientadas a objetos.MVC:Sigla:M: ModelV: ViewC: ControllerPadrão de arquitetura de software que separa a lógica de apresentação dos dados de um aplicativo.KISS:TDD:",
            "content_html": "<h2 id=\"it-acronyms\">IT Acronyms</h2><p>“Por favor, note que neste artigo, evitarei fazer comparações entre os itens mencionados, concentrando-me em analisá-los individualmente.”</p><h4 id=\"solid\">SOLID:</h4><p><strong>Sigla</strong>:</p><p>S: Single Responsibility PrincipleO: Open/Closed PrincipleL: Liskov Substitution PrincipleI: Interface Segregation PrincipleD: Dependency Inversion Principle</p><p>Estes são princípios de design de software que visam criar código mais fácil de entender, manter e estender.</p><h4 id=\"yagni\">YAGNI:</h4><p><strong>Sigla</strong>:</p><p>Y: You Ain’t Gonna Need ItPrincípio que sugere que você não deve adicionar funcionalidades ou complexidades ao seu código até que realmente precise delas. Evita o excesso de engenharia.BDD:B: Behavior-Driven DevelopmentD: Development</p><p>Metodologia de desenvolvimento que se concentra no comportamento esperado do software, envolvendo colaboração entre desenvolvedores, testadores e partes interessadas.</p><h4 id=\"ood\">OOD:</h4><p><strong>Sigla</strong>:</p><p>O: Object-Oriented DesignD: Development</p><p>Refere-se ao processo de usar princípios de design orientado a objetos durante o desenvolvimento de software para criar sistemas mais flexíveis e reutilizáveis.</p><h4 id=\"acid\">ACID:</h4><p><strong>Sigla</strong>:</p><p>A: AtomicityC: ConsistencyI: IsolationD: Durability</p><p>Princípios de transação em banco de dados que garantem a integridade dos dados mesmo em face de falhas.</p><h4 id=\"orm\">ORM:</h4><p><strong>Sigla</strong>:</p><p>O: Object-Relational Mapping</p><p>Técnica de programação que converte dados entre tipos de sistemas incompatíveis em linguagens de programação orientadas a objetos.</p><h4 id=\"mvc\">MVC:</h4><p><strong>Sigla</strong>:</p><p>M: ModelV: ViewC: Controller</p><p>Padrão de arquitetura de software que separa a lógica de apresentação dos dados de um aplicativo.</p><h4 id=\"kiss\">KISS:</h4><h4 id=\"tdd\">TDD:</h4>",
            "url": "/2024/12/01/it-acronym.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/linux-processes.html",
            "title": "operating-system/processes",
            "summary": "Processes",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/linux-processes.html",
            
            
            
            "tags": ["linux","processes"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/linux-network.html",
            "title": "operating-system/linux-network",
            "summary": "Linux Network",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/linux-network.html",
            
            
            
            "tags": ["linux","processes"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/rust/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "development/ruby/basicao",
            "summary": "Overview",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            "tags": ["ruby","overview"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/python/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/lua/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/javascript/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/java/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            "tags": ["java","overview"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/slices.html",
            "title": "development/golang/slices",
            "summary": "Slices",
            "content_text": "Slicespackage mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(s)\tfmt.Println(s)}func modifySlice(i []int) {\ti[0] = 3\ti = append(i, 4)\ti[2] = 4}O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.package mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(&amp;s)\tfmt.Println(s)}func modifySlice(i *[]int) {\t// Corrija o slice usando o ponteiro\t(*i)[0] = 3\t*i = append(*i, 4)\t(*i)[2] = 4}",
            "content_html": "<h2 id=\"slices\">Slices</h2><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div><p>O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span><span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"c\">// Corrija o slice usando o ponteiro</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/slices.html",
            
            
            
            "tags": ["go","slices"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/grpc.html",
            "title": "development/golang/grpc",
            "summary": "gRPC",
            "content_text": "gRPCgRPC, which stands for Google Remote Procedure Call, is a type of communication protocol. It utilizes HTTP/2 and can be viewed as an RPC framework.gRPC uses Protocol Buffers (protobuf), a data serialization format developed by Google. It serves as the message format for communication between clients and servers in gRPC. Protocol Buffers offer an efficient and compact way to represent structured data, which can be easily serialized and deserialized across various programming languages.gRPC Communication Types      Unary: More akin to REST. The client sends a single request, and the server responds with a single response.        Server Streaming: The client sends a request, and the server can send back multiple responses.        Client Streaming: The client sends multiple requests to the server, and the server responds only once (e.g., for uploading).        Bidirectional Streaming: Both client and server continuously send requests and responses back and forth.  Referenceshttps://github.com/grpc/grpc-go/tree/master/examples/route_guidehttps://google.github.io/proto-lens/installing-protoc.html",
            "content_html": "<h2 id=\"grpc\">gRPC</h2><p>gRPC, which stands for Google Remote Procedure Call, is a type of communication protocol. It utilizes HTTP/2 and can be viewed as an RPC framework.</p><p>gRPC uses Protocol Buffers (protobuf), a data serialization format developed by Google. It serves as the message format for communication between clients and servers in gRPC. Protocol Buffers offer an efficient and compact way to represent structured data, which can be easily serialized and deserialized across various programming languages.</p><h3 id=\"grpc-communication-types\">gRPC Communication Types</h3><ul>  <li>    <p><strong>Unary:</strong> More akin to REST. The client sends a single request, and the server responds with a single response.</p>  </li>  <li>    <p><strong>Server Streaming:</strong> The client sends a request, and the server can send back multiple responses.</p>  </li>  <li>    <p><strong>Client Streaming:</strong> The client sends multiple requests to the server, and the server responds only once (e.g., for uploading).</p>  </li>  <li>    <p><strong>Bidirectional Streaming:</strong> Both client and server continuously send requests and responses back and forth.</p>  </li></ul><h3 id=\"references\">References</h3><p>https://github.com/grpc/grpc-go/tree/master/examples/route_guidehttps://google.github.io/proto-lens/installing-protoc.html</p>",
            "url": "/2024/12/01/grpc.html",
            
            
            
            "tags": ["go","gRPC"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/frameworks.html",
            "title": "development/golang/frameworks",
            "summary": "Frameworks",
            "content_text": "FrameworksGoFrGinhttps://medium.com/@chaithra.shetty/introducing-gofr-the-go-framework-541252fabc42",
            "content_html": "<h2 id=\"frameworks\">Frameworks</h2><p>GoFrGin</p><p>https://medium.com/@chaithra.shetty/introducing-gofr-the-go-framework-541252fabc42</p>",
            "url": "/2024/12/01/frameworks.html",
            
            
            
            "tags": ["go","frameworks"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/observer.html",
            "title": "development/padroes-de-projeto/observer",
            "summary": "Observer",
            "content_text": "Observerpackage mainimport (\t\"fmt\")// Observer define a interface para os observadorestype Observer interface {\tUpdate(temp float64)}// Subject define a interface para o objeto observáveltype Subject interface {\tRegisterObserver(o Observer)\tRemoveObserver(o Observer)\tNotifyObservers()}// WeatherStation é o objeto observáveltype WeatherStation struct {\ttemperature float64\tobservers   []Observer}// NewWeatherStation cria uma nova instância de WeatherStationfunc NewWeatherStation() *WeatherStation {\treturn &amp;WeatherStation{}}// RegisterObserver registra um novo observadorfunc (w *WeatherStation) RegisterObserver(o Observer) {\tw.observers = append(w.observers, o)}// RemoveObserver remove um observador existentefunc (w *WeatherStation) RemoveObserver(o Observer) {\tfor i, observer := range w.observers {\t\tif observer == o {\t\t\tw.observers = append(w.observers[:i], w.observers[i+1:]...)\t\t\tbreak\t\t}\t}}// NotifyObservers notifica todos os observadores sobre a mudança na temperaturafunc (w *WeatherStation) NotifyObservers() {\tfor _, observer := range w.observers {\t\tobserver.Update(w.temperature)\t}}// SetTemperature define a temperatura e notifica os observadores sobre a mudançafunc (w *WeatherStation) SetTemperature(temp float64) {\tw.temperature = temp\tw.NotifyObservers()}// PhoneDisplay é um exemplo de observador que exibe a temperatura em um telefonetype PhoneDisplay struct{}// Update atualiza a temperatura exibida no telefonefunc (p *PhoneDisplay) Update(temp float64) {\tfmt.Printf(\"Temperatura atualizada no telefone: %.2f°C\\n\", temp)}// TabletDisplay é um exemplo de observador que exibe a temperatura em um tablettype TabletDisplay struct{}// Update atualiza a temperatura exibida no tabletfunc (t *TabletDisplay) Update(temp float64) {\tfmt.Printf(\"Temperatura atualizada no tablet: %.2f°C\\n\", temp)}func main() {\t// Criação de uma estação meteorológica e um visor de telefone\tweatherStation := NewWeatherStation()\tphoneDisplay := &amp;PhoneDisplay{}\ttabletDisplay := &amp;TabletDisplay{}\tweatherStation.RegisterObserver(phoneDisplay)\tweatherStation.RegisterObserver(tabletDisplay)\tweatherStation.SetTemperature(25.5)\tweatherStation.SetTemperature(30.0)\t// Remova o visor do telefone da lista de observadores\tweatherStation.RemoveObserver(phoneDisplay)\t// Agora, mesmo que a temperatura mude, o visor do telefone não será mais atualizado\tweatherStation.SetTemperature(28.0)}",
            "content_html": "<h2 id=\"observer\">Observer</h2><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>\t<span class=\"s\">\"fmt\"</span><span class=\"p\">)</span><span class=\"c\">// Observer define a interface para os observadores</span><span class=\"k\">type</span> <span class=\"n\">Observer</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// Subject define a interface para o objeto observável</span><span class=\"k\">type</span> <span class=\"n\">Subject</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span>\t<span class=\"n\">RemoveObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span>\t<span class=\"n\">NotifyObservers</span><span class=\"p\">()</span><span class=\"p\">}</span><span class=\"c\">// WeatherStation é o objeto observável</span><span class=\"k\">type</span> <span class=\"n\">WeatherStation</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">temperature</span> <span class=\"kt\">float64</span>\t<span class=\"n\">observers</span>   <span class=\"p\">[]</span><span class=\"n\">Observer</span><span class=\"p\">}</span><span class=\"c\">// NewWeatherStation cria uma nova instância de WeatherStation</span><span class=\"k\">func</span> <span class=\"n\">NewWeatherStation</span><span class=\"p\">()</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">WeatherStation</span><span class=\"p\">{}</span><span class=\"p\">}</span><span class=\"c\">// RegisterObserver registra um novo observador</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// RemoveObserver remove um observador existente</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">RemoveObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">observer</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"p\">{</span>\t\t<span class=\"k\">if</span> <span class=\"n\">observer</span> <span class=\"o\">==</span> <span class=\"n\">o</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"p\">]</span><span class=\"o\">...</span><span class=\"p\">)</span>\t\t\t<span class=\"k\">break</span>\t\t<span class=\"p\">}</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"c\">// NotifyObservers notifica todos os observadores sobre a mudança na temperatura</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">NotifyObservers</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">observer</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"p\">{</span>\t\t<span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">temperature</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"c\">// SetTemperature define a temperatura e notifica os observadores sobre a mudança</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">temperature</span> <span class=\"o\">=</span> <span class=\"n\">temp</span>\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">NotifyObservers</span><span class=\"p\">()</span><span class=\"p\">}</span><span class=\"c\">// PhoneDisplay é um exemplo de observador que exibe a temperatura em um telefone</span><span class=\"k\">type</span> <span class=\"n\">PhoneDisplay</span> <span class=\"k\">struct</span><span class=\"p\">{}</span><span class=\"c\">// Update atualiza a temperatura exibida no telefone</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span><span class=\"n\">PhoneDisplay</span><span class=\"p\">)</span> <span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Temperatura atualizada no telefone: %.2f°C</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// TabletDisplay é um exemplo de observador que exibe a temperatura em um tablet</span><span class=\"k\">type</span> <span class=\"n\">TabletDisplay</span> <span class=\"k\">struct</span><span class=\"p\">{}</span><span class=\"c\">// Update atualiza a temperatura exibida no tablet</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">TabletDisplay</span><span class=\"p\">)</span> <span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Temperatura atualizada no tablet: %.2f°C</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"c\">// Criação de uma estação meteorológica e um visor de telefone</span>\t<span class=\"n\">weatherStation</span> <span class=\"o\">:=</span> <span class=\"n\">NewWeatherStation</span><span class=\"p\">()</span>\t<span class=\"n\">phoneDisplay</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">PhoneDisplay</span><span class=\"p\">{}</span>\t<span class=\"n\">tabletDisplay</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">TabletDisplay</span><span class=\"p\">{}</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">phoneDisplay</span><span class=\"p\">)</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">tabletDisplay</span><span class=\"p\">)</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"m\">25.5</span><span class=\"p\">)</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"m\">30.0</span><span class=\"p\">)</span>\t<span class=\"c\">// Remova o visor do telefone da lista de observadores</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">RemoveObserver</span><span class=\"p\">(</span><span class=\"n\">phoneDisplay</span><span class=\"p\">)</span>\t<span class=\"c\">// Agora, mesmo que a temperatura mude, o visor do telefone não será mais atualizado</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"m\">28.0</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/observer.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/factory.html",
            "title": "development/padroes-de-projeto/factory",
            "summary": "Factory",
            "content_text": "Factorypackage mainimport \"fmt\"// Product é a interface que define o comportamento dos produtostype Product interface {\tUse()}// ConcreteProductA é uma implementação de Producttype ConcreteProductA struct{}// Use implementa o método Use de Productfunc (p *ConcreteProductA) Use() {\tfmt.Println(\"Usando o produto A\")}// ConcreteProductB é outra implementação de Producttype ConcreteProductB struct{}// Use implementa o método Use de Productfunc (p *ConcreteProductB) Use() {\tfmt.Println(\"Usando o produto B\")}// Factory é a interface que define o método de criação de produtostype Factory interface {\tCreateProduct() Product}// ConcreteFactoryA é uma implementação de Factory que cria ConcreteProductAtype ConcreteFactoryA struct{}// CreateProduct implementa o método CreateProduct de Factoryfunc (f *ConcreteFactoryA) CreateProduct() Product {\treturn &amp;ConcreteProductA{}}// ConcreteFactoryB é outra implementação de Factory que cria ConcreteProductBtype ConcreteFactoryB struct{}// CreateProduct implementa o método CreateProduct de Factoryfunc (f *ConcreteFactoryB) CreateProduct() Product {\treturn &amp;ConcreteProductB{}}func main() {\t// Cria uma fábrica para criar produtos do tipo A\tfactoryA := &amp;ConcreteFactoryA{}\t// Usa a fábrica para criar um produto do tipo A\tproductA := factoryA.CreateProduct()\t// Usa o produto do tipo A\tproductA.Use()\t// Cria uma fábrica para criar produtos do tipo B\tfactoryB := &amp;ConcreteFactoryB{}\t// Usa a fábrica para criar um produto do tipo B\tproductB := factoryB.CreateProduct()\t// Usa o produto do tipo B\tproductB.Use()}package mainimport (\t\"database/sql\"\t\"fmt\"\t\"log\"\t_ \"github.com/go-sql-driver/mysql\" // Driver MySQL\t_ \"github.com/lib/pq\"              // Driver PostgreSQL)// Database é a interface que define o comportamento dos diferentes tipos de conexões de banco de dadostype Database interface {\tConnect() (*sql.DB, error)}// MySQLDatabase é uma implementação de Database para MySQLtype MySQLDatabase struct {\tConnectionString string}// Connect implementa o método Connect de Database para MySQLfunc (db *MySQLDatabase) Connect() (*sql.DB, error) {\treturn sql.Open(\"mysql\", db.ConnectionString)}// PostgreSQLDatabase é uma implementação de Database para PostgreSQLtype PostgreSQLDatabase struct {\tConnectionString string}// Connect implementa o método Connect de Database para PostgreSQLfunc (db *PostgreSQLDatabase) Connect() (*sql.DB, error) {\treturn sql.Open(\"postgres\", db.ConnectionString)}// DatabaseFactory é uma fábrica para criar diferentes tipos de conexões de banco de dadostype DatabaseFactory struct{}// CreateDatabase cria uma conexão de banco de dados com base no tipo especificadofunc (f *DatabaseFactory) CreateDatabase(databaseType string, connectionString string) (Database, error) {\tswitch databaseType {\tcase \"mysql\":\t\treturn &amp;MySQLDatabase{ConnectionString: connectionString}, nil\tcase \"postgres\":\t\treturn &amp;PostgreSQLDatabase{ConnectionString: connectionString}, nil\tdefault:\t\treturn nil, fmt.Errorf(\"tipo de banco de dados não suportado: %s\", databaseType)\t}}func main() {\t// Cria uma fábrica de banco de dados\tfactory := &amp;DatabaseFactory{}\t// Cria uma conexão de banco de dados MySQL\tmysqlDB, err := factory.CreateDatabase(\"mysql\", \"user:password@tcp(localhost:3306)/database\")\tif err != nil {\t\tlog.Fatalf(\"Erro ao criar conexão MySQL: %v\", err)\t}\tdefer mysqlDB.Close()\tfmt.Println(\"Conexão MySQL estabelecida com sucesso\")\t// Cria uma conexão de banco de dados PostgreSQL\tpostgresDB, err := factory.CreateDatabase(\"postgres\", \"user=postgres password=password dbname=database sslmode=disable\")\tif err != nil {\t\tlog.Fatalf(\"Erro ao criar conexão PostgreSQL: %v\", err)\t}\tdefer postgresDB.Close()\tfmt.Println(\"Conexão PostgreSQL estabelecida com sucesso\")}",
            "content_html": "<h2 id=\"factory\">Factory</h2><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>package mainimport <span class=\"s2\">\"fmt\"</span>// Product é a interface que define o comportamento dos produtos<span class=\"nb\">type </span>Product interface <span class=\"o\">{</span>\tUse<span class=\"o\">()</span><span class=\"o\">}</span>// ConcreteProductA é uma implementação de Product<span class=\"nb\">type </span>ConcreteProductA struct<span class=\"o\">{}</span>// Use implementa o método Use de Productfunc <span class=\"o\">(</span>p <span class=\"k\">*</span>ConcreteProductA<span class=\"o\">)</span> Use<span class=\"o\">()</span> <span class=\"o\">{</span>\tfmt.Println<span class=\"o\">(</span><span class=\"s2\">\"Usando o produto A\"</span><span class=\"o\">)</span><span class=\"o\">}</span>// ConcreteProductB é outra implementação de Product<span class=\"nb\">type </span>ConcreteProductB struct<span class=\"o\">{}</span>// Use implementa o método Use de Productfunc <span class=\"o\">(</span>p <span class=\"k\">*</span>ConcreteProductB<span class=\"o\">)</span> Use<span class=\"o\">()</span> <span class=\"o\">{</span>\tfmt.Println<span class=\"o\">(</span><span class=\"s2\">\"Usando o produto B\"</span><span class=\"o\">)</span><span class=\"o\">}</span>// Factory é a interface que define o método de criação de produtos<span class=\"nb\">type </span>Factory interface <span class=\"o\">{</span>\tCreateProduct<span class=\"o\">()</span> Product<span class=\"o\">}</span>// ConcreteFactoryA é uma implementação de Factory que cria ConcreteProductA<span class=\"nb\">type </span>ConcreteFactoryA struct<span class=\"o\">{}</span>// CreateProduct implementa o método CreateProduct de Factoryfunc <span class=\"o\">(</span>f <span class=\"k\">*</span>ConcreteFactoryA<span class=\"o\">)</span> CreateProduct<span class=\"o\">()</span> Product <span class=\"o\">{</span>\t<span class=\"k\">return</span> &amp;ConcreteProductA<span class=\"o\">{}</span><span class=\"o\">}</span>// ConcreteFactoryB é outra implementação de Factory que cria ConcreteProductB<span class=\"nb\">type </span>ConcreteFactoryB struct<span class=\"o\">{}</span>// CreateProduct implementa o método CreateProduct de Factoryfunc <span class=\"o\">(</span>f <span class=\"k\">*</span>ConcreteFactoryB<span class=\"o\">)</span> CreateProduct<span class=\"o\">()</span> Product <span class=\"o\">{</span>\t<span class=\"k\">return</span> &amp;ConcreteProductB<span class=\"o\">{}</span><span class=\"o\">}</span>func main<span class=\"o\">()</span> <span class=\"o\">{</span>\t// Cria uma fábrica para criar produtos <span class=\"k\">do </span>tipo A\tfactoryA :<span class=\"o\">=</span> &amp;ConcreteFactoryA<span class=\"o\">{}</span>\t// Usa a fábrica para criar um produto <span class=\"k\">do </span>tipo A\tproductA :<span class=\"o\">=</span> factoryA.CreateProduct<span class=\"o\">()</span>\t// Usa o produto <span class=\"k\">do </span>tipo A\tproductA.Use<span class=\"o\">()</span>\t// Cria uma fábrica para criar produtos <span class=\"k\">do </span>tipo B\tfactoryB :<span class=\"o\">=</span> &amp;ConcreteFactoryB<span class=\"o\">{}</span>\t// Usa a fábrica para criar um produto <span class=\"k\">do </span>tipo B\tproductB :<span class=\"o\">=</span> factoryB.CreateProduct<span class=\"o\">()</span>\t// Usa o produto <span class=\"k\">do </span>tipo B\tproductB.Use<span class=\"o\">()</span><span class=\"o\">}</span></code></pre></div></div><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>\t<span class=\"s\">\"database/sql\"</span>\t<span class=\"s\">\"fmt\"</span>\t<span class=\"s\">\"log\"</span>\t<span class=\"n\">_</span> <span class=\"s\">\"github.com/go-sql-driver/mysql\"</span> <span class=\"c\">// Driver MySQL</span>\t<span class=\"n\">_</span> <span class=\"s\">\"github.com/lib/pq\"</span>              <span class=\"c\">// Driver PostgreSQL</span><span class=\"p\">)</span><span class=\"c\">// Database é a interface que define o comportamento dos diferentes tipos de conexões de banco de dados</span><span class=\"k\">type</span> <span class=\"n\">Database</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"n\">Connect</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// MySQLDatabase é uma implementação de Database para MySQL</span><span class=\"k\">type</span> <span class=\"n\">MySQLDatabase</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">ConnectionString</span> <span class=\"kt\">string</span><span class=\"p\">}</span><span class=\"c\">// Connect implementa o método Connect de Database para MySQL</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">db</span> <span class=\"o\">*</span><span class=\"n\">MySQLDatabase</span><span class=\"p\">)</span> <span class=\"n\">Connect</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"s\">\"mysql\"</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ConnectionString</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// PostgreSQLDatabase é uma implementação de Database para PostgreSQL</span><span class=\"k\">type</span> <span class=\"n\">PostgreSQLDatabase</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">ConnectionString</span> <span class=\"kt\">string</span><span class=\"p\">}</span><span class=\"c\">// Connect implementa o método Connect de Database para PostgreSQL</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">db</span> <span class=\"o\">*</span><span class=\"n\">PostgreSQLDatabase</span><span class=\"p\">)</span> <span class=\"n\">Connect</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"s\">\"postgres\"</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ConnectionString</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// DatabaseFactory é uma fábrica para criar diferentes tipos de conexões de banco de dados</span><span class=\"k\">type</span> <span class=\"n\">DatabaseFactory</span> <span class=\"k\">struct</span><span class=\"p\">{}</span><span class=\"c\">// CreateDatabase cria uma conexão de banco de dados com base no tipo especificado</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">f</span> <span class=\"o\">*</span><span class=\"n\">DatabaseFactory</span><span class=\"p\">)</span> <span class=\"n\">CreateDatabase</span><span class=\"p\">(</span><span class=\"n\">databaseType</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">connectionString</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">switch</span> <span class=\"n\">databaseType</span> <span class=\"p\">{</span>\t<span class=\"k\">case</span> <span class=\"s\">\"mysql\"</span><span class=\"o\">:</span>\t\t<span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">MySQLDatabase</span><span class=\"p\">{</span><span class=\"n\">ConnectionString</span><span class=\"o\">:</span> <span class=\"n\">connectionString</span><span class=\"p\">},</span> <span class=\"no\">nil</span>\t<span class=\"k\">case</span> <span class=\"s\">\"postgres\"</span><span class=\"o\">:</span>\t\t<span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">PostgreSQLDatabase</span><span class=\"p\">{</span><span class=\"n\">ConnectionString</span><span class=\"o\">:</span> <span class=\"n\">connectionString</span><span class=\"p\">},</span> <span class=\"no\">nil</span>\t<span class=\"k\">default</span><span class=\"o\">:</span>\t\t<span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Errorf</span><span class=\"p\">(</span><span class=\"s\">\"tipo de banco de dados não suportado: %s\"</span><span class=\"p\">,</span> <span class=\"n\">databaseType</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"c\">// Cria uma fábrica de banco de dados</span>\t<span class=\"n\">factory</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">DatabaseFactory</span><span class=\"p\">{}</span>\t<span class=\"c\">// Cria uma conexão de banco de dados MySQL</span>\t<span class=\"n\">mysqlDB</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">CreateDatabase</span><span class=\"p\">(</span><span class=\"s\">\"mysql\"</span><span class=\"p\">,</span> <span class=\"s\">\"user:password@tcp(localhost:3306)/database\"</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalf</span><span class=\"p\">(</span><span class=\"s\">\"Erro ao criar conexão MySQL: %v\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\t<span class=\"p\">}</span>\t<span class=\"k\">defer</span> <span class=\"n\">mysqlDB</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Conexão MySQL estabelecida com sucesso\"</span><span class=\"p\">)</span>\t<span class=\"c\">// Cria uma conexão de banco de dados PostgreSQL</span>\t<span class=\"n\">postgresDB</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">CreateDatabase</span><span class=\"p\">(</span><span class=\"s\">\"postgres\"</span><span class=\"p\">,</span> <span class=\"s\">\"user=postgres password=password dbname=database sslmode=disable\"</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalf</span><span class=\"p\">(</span><span class=\"s\">\"Erro ao criar conexão PostgreSQL: %v\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\t<span class=\"p\">}</span>\t<span class=\"k\">defer</span> <span class=\"n\">postgresDB</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Conexão PostgreSQL estabelecida com sucesso\"</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/factory.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/pilha.html",
            "title": "development/estrutura-de-dados/pilha",
            "summary": "Pilha",
            "content_text": "Pilha",
            "content_html": "<h2 id=\"pilha\">Pilha</h2>",
            "url": "/2024/12/01/pilha.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/fila.html",
            "title": "development/estrutura-de-dados/fila",
            "summary": "Fila",
            "content_text": "Fila",
            "content_html": "<h2 id=\"fila\">Fila</h2>",
            "url": "/2024/12/01/fila.html",
            
            
            
            "tags": ["fila","queue"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/redis.html",
            "title": "data/redis",
            "summary": "Redis",
            "content_text": "Redis",
            "content_html": "<h2 id=\"redis\">Redis</h2>",
            "url": "/2024/12/01/redis.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/rabbitmq.html",
            "title": "data/rabbitmq",
            "summary": "RabbitMQ",
            "content_text": "RabbitMQ",
            "content_html": "<h2 id=\"rabbitmq\">RabbitMQ</h2>",
            "url": "/2024/12/01/rabbitmq.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/postgres.html",
            "title": "data/postgres",
            "summary": "Postgres",
            "content_text": "Postgres",
            "content_html": "<h2 id=\"postgres\">Postgres</h2>",
            "url": "/2024/12/01/postgres.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/kafka.html",
            "title": "data/kafka",
            "summary": "Kafka",
            "content_text": "Kafka",
            "content_html": "<h2 id=\"kafka\">Kafka</h2>",
            "url": "/2024/12/01/kafka.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/kafka-connect.html",
            "title": "data/kafka-connect",
            "summary": "Kafka Connect",
            "content_text": "Kafka Connect",
            "content_html": "<h2 id=\"kafka-connect\">Kafka Connect</h2>",
            "url": "/2024/12/01/kafka-connect.html",
            
            
            
            "tags": ["kafka","kafka-connect"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/11/24/reverse-ssh-tunneling.html",
            "title": "development/golang/reverse-ssh-tunneling",
            "summary": "Reverse SSH Tunneling",
            "content_text": "Reverse SSH Tunnelingpackage mainimport (\t\"fmt\"\t\"io\"\t\"io/ioutil\"\t\"log\"\t\"net\"\t\"golang.org/x/crypto/ssh\")type Endpoint struct {\tHost string\tPort int}func (endpoint *Endpoint) String() string {\treturn fmt.Sprintf(\"%s:%d\", endpoint.Host, endpoint.Port)}func handleClient(client net.Conn, remote net.Conn) {\tdefer client.Close()\tchDone := make(chan bool)\t// Start remote -&gt; local data transfer\tgo func() {\t\t_, err := io.Copy(client, remote)\t\tif err != nil {\t\t\tlog.Printf(\"error while copy remote-&gt;local: %s\", err)\t\t}\t\tchDone &lt;- true\t}()\t// Start local -&gt; remote data transfer\tgo func() {\t\t_, err := io.Copy(remote, client)\t\tif err != nil {\t\t\tlog.Println(fmt.Sprintf(\"error while copy local-&gt;remote: %s\", err))\t\t}\t\tchDone &lt;- true\t}()\t&lt;-chDone}func publicKeyFile(file string) ssh.AuthMethod {\tbuffer, err := ioutil.ReadFile(file)\tif err != nil {\t\tlog.Fatalln(fmt.Sprintf(\"Cannot read SSH public key file %s\", file))\t\treturn nil\t}\tkey, err := ssh.ParsePrivateKey(buffer)\tif err != nil {\t\tlog.Fatalln(fmt.Sprintf(\"Cannot parse SSH public key file %s\", file))\t\treturn nil\t}\treturn ssh.PublicKeys(key)}// local service to be forwardedvar localEndpoint = Endpoint{\tHost: \"localhost\",\tPort: 8000,}// remote SSH servervar serverEndpoint = Endpoint{\tHost: \"192.168.100.19\",\tPort: 22,}// remote forwarding port (on remote SSH server network)var remoteEndpoint = Endpoint{\tHost: \"localhost\",\tPort: 9000,}func main() {\t// refer to https://godoc.org/golang.org/x/crypto/ssh for other authentication types\tsshConfig := &amp;ssh.ClientConfig{\t\t// SSH connection username\t\tUser: \"&lt;your-user&gt;\",\t\tAuth: []ssh.AuthMethod{\t\t\t// put here your private key path\t\t\t//publicKeyFile(\"/home/apolzek/.ssh/id_ed25519\"),\t\t\tssh.Password(\"&lt;your-password&gt;\"),\t\t},\t\tHostKeyCallback: ssh.InsecureIgnoreHostKey(),\t}\t// Connect to SSH remote server using serverEndpoint\tserverConn, err := ssh.Dial(\"tcp\", serverEndpoint.String(), sshConfig)\tif err != nil {\t\tlog.Fatalln(fmt.Printf(\"Dial INTO remote server error: %s\", err))\t}\t// Listen on remote server port\tlistener, err := serverConn.Listen(\"tcp\", remoteEndpoint.String())\tif err != nil {\t\tlog.Fatalln(fmt.Printf(\"Listen open port ON remote server error: %s\", err))\t}\tdefer listener.Close()\t// handle incoming connections on reverse forwarded tunnel\tfor {\t\t// Open a (local) connection to localEndpoint whose content will be forwarded so serverEndpoint\t\tlocal, err := net.Dial(\"tcp\", localEndpoint.String())\t\tif err != nil {\t\t\tlog.Fatalln(fmt.Printf(\"Dial INTO local service error: %s\", err))\t\t}\t\tclient, err := listener.Accept()\t\tif err != nil {\t\t\tlog.Fatalln(err)\t\t}\t\thandleClient(client, local)\t}}",
            "content_html": "<h2 id=\"reverse-ssh-tunneling\">Reverse SSH Tunneling</h2><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>\t<span class=\"s\">\"fmt\"</span>\t<span class=\"s\">\"io\"</span>\t<span class=\"s\">\"io/ioutil\"</span>\t<span class=\"s\">\"log\"</span>\t<span class=\"s\">\"net\"</span>\t<span class=\"s\">\"golang.org/x/crypto/ssh\"</span><span class=\"p\">)</span><span class=\"k\">type</span> <span class=\"n\">Endpoint</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">Host</span> <span class=\"kt\">string</span>\t<span class=\"n\">Port</span> <span class=\"kt\">int</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">endpoint</span> <span class=\"o\">*</span><span class=\"n\">Endpoint</span><span class=\"p\">)</span> <span class=\"n\">String</span><span class=\"p\">()</span> <span class=\"kt\">string</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"%s:%d\"</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">.</span><span class=\"n\">Host</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">handleClient</span><span class=\"p\">(</span><span class=\"n\">client</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">,</span> <span class=\"n\">remote</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">defer</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"n\">chDone</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">bool</span><span class=\"p\">)</span>\t<span class=\"c\">// Start remote -&gt; local data transfer</span>\t<span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t\t<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">remote</span><span class=\"p\">)</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"error while copy remote-&gt;local: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">chDone</span> <span class=\"o\">&lt;-</span> <span class=\"no\">true</span>\t<span class=\"p\">}()</span>\t<span class=\"c\">// Start local -&gt; remote data transfer</span>\t<span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t\t<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">(</span><span class=\"n\">remote</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">)</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"error while copy local-&gt;remote: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">chDone</span> <span class=\"o\">&lt;-</span> <span class=\"no\">true</span>\t<span class=\"p\">}()</span>\t<span class=\"o\">&lt;-</span><span class=\"n\">chDone</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">publicKeyFile</span><span class=\"p\">(</span><span class=\"n\">file</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">AuthMethod</span> <span class=\"p\">{</span>\t<span class=\"n\">buffer</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadFile</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"Cannot read SSH public key file %s\"</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">))</span>\t\t<span class=\"k\">return</span> <span class=\"no\">nil</span>\t<span class=\"p\">}</span>\t<span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">ParsePrivateKey</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"Cannot parse SSH public key file %s\"</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">))</span>\t\t<span class=\"k\">return</span> <span class=\"no\">nil</span>\t<span class=\"p\">}</span>\t<span class=\"k\">return</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">PublicKeys</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// local service to be forwarded</span><span class=\"k\">var</span> <span class=\"n\">localEndpoint</span> <span class=\"o\">=</span> <span class=\"n\">Endpoint</span><span class=\"p\">{</span>\t<span class=\"n\">Host</span><span class=\"o\">:</span> <span class=\"s\">\"localhost\"</span><span class=\"p\">,</span>\t<span class=\"n\">Port</span><span class=\"o\">:</span> <span class=\"m\">8000</span><span class=\"p\">,</span><span class=\"p\">}</span><span class=\"c\">// remote SSH server</span><span class=\"k\">var</span> <span class=\"n\">serverEndpoint</span> <span class=\"o\">=</span> <span class=\"n\">Endpoint</span><span class=\"p\">{</span>\t<span class=\"n\">Host</span><span class=\"o\">:</span> <span class=\"s\">\"192.168.100.19\"</span><span class=\"p\">,</span>\t<span class=\"n\">Port</span><span class=\"o\">:</span> <span class=\"m\">22</span><span class=\"p\">,</span><span class=\"p\">}</span><span class=\"c\">// remote forwarding port (on remote SSH server network)</span><span class=\"k\">var</span> <span class=\"n\">remoteEndpoint</span> <span class=\"o\">=</span> <span class=\"n\">Endpoint</span><span class=\"p\">{</span>\t<span class=\"n\">Host</span><span class=\"o\">:</span> <span class=\"s\">\"localhost\"</span><span class=\"p\">,</span>\t<span class=\"n\">Port</span><span class=\"o\">:</span> <span class=\"m\">9000</span><span class=\"p\">,</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"c\">// refer to https://godoc.org/golang.org/x/crypto/ssh for other authentication types</span>\t<span class=\"n\">sshConfig</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">ClientConfig</span><span class=\"p\">{</span>\t\t<span class=\"c\">// SSH connection username</span>\t\t<span class=\"n\">User</span><span class=\"o\">:</span> <span class=\"s\">\"&lt;your-user&gt;\"</span><span class=\"p\">,</span>\t\t<span class=\"n\">Auth</span><span class=\"o\">:</span> <span class=\"p\">[]</span><span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">AuthMethod</span><span class=\"p\">{</span>\t\t\t<span class=\"c\">// put here your private key path</span>\t\t\t<span class=\"c\">//publicKeyFile(\"/home/apolzek/.ssh/id_ed25519\"),</span>\t\t\t<span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">Password</span><span class=\"p\">(</span><span class=\"s\">\"&lt;your-password&gt;\"</span><span class=\"p\">),</span>\t\t<span class=\"p\">},</span>\t\t<span class=\"n\">HostKeyCallback</span><span class=\"o\">:</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">InsecureIgnoreHostKey</span><span class=\"p\">(),</span>\t<span class=\"p\">}</span>\t<span class=\"c\">// Connect to SSH remote server using serverEndpoint</span>\t<span class=\"n\">serverConn</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">Dial</span><span class=\"p\">(</span><span class=\"s\">\"tcp\"</span><span class=\"p\">,</span> <span class=\"n\">serverEndpoint</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(),</span> <span class=\"n\">sshConfig</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Dial INTO remote server error: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t<span class=\"p\">}</span>\t<span class=\"c\">// Listen on remote server port</span>\t<span class=\"n\">listener</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">serverConn</span><span class=\"o\">.</span><span class=\"n\">Listen</span><span class=\"p\">(</span><span class=\"s\">\"tcp\"</span><span class=\"p\">,</span> <span class=\"n\">remoteEndpoint</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Listen open port ON remote server error: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t<span class=\"p\">}</span>\t<span class=\"k\">defer</span> <span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"c\">// handle incoming connections on reverse forwarded tunnel</span>\t<span class=\"k\">for</span> <span class=\"p\">{</span>\t\t<span class=\"c\">// Open a (local) connection to localEndpoint whose content will be forwarded so serverEndpoint</span>\t\t<span class=\"n\">local</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Dial</span><span class=\"p\">(</span><span class=\"s\">\"tcp\"</span><span class=\"p\">,</span> <span class=\"n\">localEndpoint</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Dial INTO local service error: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">Accept</span><span class=\"p\">()</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">handleClient</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">local</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/11/24/reverse-ssh-tunneling.html",
            
            
            
            "tags": ["go","golang"],
            
            "date_published": "2024-11-24T00:00:00+00:00",
            "date_modified": "2024-11-24T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/10/25/eks.html",
            "title": "cloud/aws/eks",
            "summary": "EKS",
            "content_text": "EKS",
            "content_html": "<h1 id=\"eks\">EKS</h1>",
            "url": "/2024/10/25/eks.html",
            
            
            
            "tags": ["eks","aws","kubernetes"],
            
            "date_published": "2024-10-25T00:00:00+00:00",
            "date_modified": "2024-10-25T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/08/01/self-assessment-1.html",
            "title": "opinions/self-assessment-1",
            "summary": "self-assessment-1",
            "content_text": "",
            "content_html": "",
            "url": "/2024/08/01/self-assessment-1.html",
            
            
            
            
            
            "date_published": "2024-08-01T00:00:00+00:00",
            "date_modified": "2024-08-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/24/roadmap.html",
            "title": "development/golang/roadmap",
            "summary": "roadmap",
            "content_text": "RoadmapIntrodução a linguagem  Sobre a linguagem e seu histórico  Motivações  Instalação  Configuração do ambiente no VSCodeDesenvolvimento de APIs  Retomando conceitos de HTTP Server e Mux  Criando Endpoints  Apresentando principais frameworks e roteadores  Trabalhando com “chi”  Middlewares  Autenticação e tokens JWT  Documentando API com SwaggerFoundation  Primeiros passos  Trabalhando com tipagem forte  Arrays, Slices, Maps  Laços de repetição, condicionais  Ponteiros  Funções, Structs, Métodos, Interfaces e Generics  Trabalhando com packages  Módulos  Módulos privados  Instalação de pacotes  Compilando projetos Go  WorkspacesConcorrência e Multithreading  Entendendo conceitos de concorrência e paralelismo  Como Go aborda concorrência e schedulers  Iniciando com Go Routines  Contadores atômicos  Trabalhando com Channels e buffers  Utilizando recurso de Select  Wait Groups  Mutex  Previnindo race conditions  Desenvolvimento de workers utilizando channels  Load BalancerPacotes importantes  Manipulação de arquivos  Chamadas HTTP  Trabalhando com objetos Json  Defer  Desenvolvendo um sistema Busca CEP  Trabalhando com HTTP  Criando servidores HTTP  Entendendo Multiplexers  Servidor de arquivos  Trabalhando com templates dinâmicos  Aprofundando em HTTP utilizando ContextImplementações  gRPC  GraphQL  Upload de arquivos na AWS S3  Command line com cobra CLI  Unit of Work  Dependency Injection com Google Wire  Manipulação de eventos (Event Dispatcher, Handlers, etc)  Integração com RabbitMQ  Gerenciamento de configuração com ViperGo e Clean Architecture  Iniciando com Clean Architecture  Pontos importantes sobre arquitetura  Keep options opened  Use Cases  Limites arquiteturais  Input vs Output  DTOs  Entities  Desenvolvendo camada de domínio  Criando Use Cases  Criando adaptador para banco de dados  Criando adaptador para o RabbitMQ  Servindo endpoints HTTP  Consumindo mensagens com RabbitMQ  Criando CLI para iniciar a aplicação  Documentando aplicação  Go DocPacote Context  Entendendo o conceito de um context  Armazenando e recuperando valores  Background, Timeout, Deadline e Cancelations  Context na práticaTestes automatizados  Iniciando com testes no Go  Formas de asserção  Pacotes úteis  Trabalhando com Mocks  Fuzzes e testes de mutação  Testes em batch  Benchmarking  Criando suite de testes com Testify  Testes End-to-endBancos de dados  Entendendo como Go trabalha com banco de dados  Estabelecendo conexão e realizando primeiras operações  Boas práticas de segurança  Realizando operações utilizando Context  Go puro vs ORM  Trabalhando com GORM  Migrations  SQLC: Geração automática de QueriesDeploy  Entendendo processo de compilação  Gerando imagem Docker com multistage building  Criando manifestos Kubernetes  Realizando deploy no KubernetesMarketing pessoal  Imagem pessoal  Autoridade  Redes sociais  Networking  Seus projetos e sua marca pessoalTrabalho em equipe  Dificuldades enfrentadas pelo trabalho em equipe  Como melhorar a formação de equipes  Comunicação assertiva  Perfil ComportamentalEmpreendedorismo  Empreendedorismo social  Empreendedorismo corporativo (intraempreendedorismo)  Empreendedorismo digital  Empreendedorismo Serial",
            "content_html": "<h2 id=\"roadmap\">Roadmap</h2><h3 id=\"introdução-a-linguagem\">Introdução a linguagem</h3><ul>  <li>Sobre a linguagem e seu histórico</li>  <li>Motivações</li>  <li>Instalação</li>  <li>Configuração do ambiente no VSCode</li></ul><h3 id=\"desenvolvimento-de-apis\">Desenvolvimento de APIs</h3><ul>  <li>Retomando conceitos de HTTP Server e Mux</li>  <li>Criando Endpoints</li>  <li>Apresentando principais frameworks e roteadores</li>  <li>Trabalhando com “chi”</li>  <li>Middlewares</li>  <li>Autenticação e tokens JWT</li>  <li>Documentando API com Swagger</li></ul><h3 id=\"foundation\">Foundation</h3><ul>  <li>Primeiros passos</li>  <li>Trabalhando com tipagem forte</li>  <li>Arrays, Slices, Maps</li>  <li>Laços de repetição, condicionais</li>  <li>Ponteiros</li>  <li>Funções, Structs, Métodos, Interfaces e Generics</li>  <li>Trabalhando com packages</li>  <li>Módulos</li>  <li>Módulos privados</li>  <li>Instalação de pacotes</li>  <li>Compilando projetos Go</li>  <li>Workspaces</li></ul><h3 id=\"concorrência-e-multithreading\">Concorrência e Multithreading</h3><ul>  <li>Entendendo conceitos de concorrência e paralelismo</li>  <li>Como Go aborda concorrência e schedulers</li>  <li>Iniciando com Go Routines</li>  <li>Contadores atômicos</li>  <li>Trabalhando com Channels e buffers</li>  <li>Utilizando recurso de Select</li>  <li>Wait Groups</li>  <li>Mutex</li>  <li>Previnindo race conditions</li>  <li>Desenvolvimento de workers utilizando channels</li>  <li>Load Balancer</li></ul><h3 id=\"pacotes-importantes\">Pacotes importantes</h3><ul>  <li>Manipulação de arquivos</li>  <li>Chamadas HTTP</li>  <li>Trabalhando com objetos Json</li>  <li>Defer</li>  <li>Desenvolvendo um sistema Busca CEP</li>  <li>Trabalhando com HTTP</li>  <li>Criando servidores HTTP</li>  <li>Entendendo Multiplexers</li>  <li>Servidor de arquivos</li>  <li>Trabalhando com templates dinâmicos</li>  <li>Aprofundando em HTTP utilizando Context</li></ul><h3 id=\"implementações\">Implementações</h3><ul>  <li>gRPC</li>  <li>GraphQL</li>  <li>Upload de arquivos na AWS S3</li>  <li>Command line com cobra CLI</li>  <li>Unit of Work</li>  <li>Dependency Injection com Google Wire</li>  <li>Manipulação de eventos (Event Dispatcher, Handlers, etc)</li>  <li>Integração com RabbitMQ</li>  <li>Gerenciamento de configuração com Viper</li></ul><h3 id=\"go-e-clean-architecture\">Go e Clean Architecture</h3><ul>  <li>Iniciando com Clean Architecture</li>  <li>Pontos importantes sobre arquitetura</li>  <li>Keep options opened</li>  <li>Use Cases</li>  <li>Limites arquiteturais</li>  <li>Input vs Output</li>  <li>DTOs</li>  <li>Entities</li>  <li>Desenvolvendo camada de domínio</li>  <li>Criando Use Cases</li>  <li>Criando adaptador para banco de dados</li>  <li>Criando adaptador para o RabbitMQ</li>  <li>Servindo endpoints HTTP</li>  <li>Consumindo mensagens com RabbitMQ</li>  <li>Criando CLI para iniciar a aplicação</li>  <li>Documentando aplicação</li>  <li>Go Doc</li></ul><h3 id=\"pacote-context\">Pacote Context</h3><ul>  <li>Entendendo o conceito de um context</li>  <li>Armazenando e recuperando valores</li>  <li>Background, Timeout, Deadline e Cancelations</li>  <li>Context na prática</li></ul><h3 id=\"testes-automatizados\">Testes automatizados</h3><ul>  <li>Iniciando com testes no Go</li>  <li>Formas de asserção</li>  <li>Pacotes úteis</li>  <li>Trabalhando com Mocks</li>  <li>Fuzzes e testes de mutação</li>  <li>Testes em batch</li>  <li>Benchmarking</li>  <li>Criando suite de testes com Testify</li>  <li>Testes End-to-end</li></ul><h3 id=\"bancos-de-dados\">Bancos de dados</h3><ul>  <li>Entendendo como Go trabalha com banco de dados</li>  <li>Estabelecendo conexão e realizando primeiras operações</li>  <li>Boas práticas de segurança</li>  <li>Realizando operações utilizando Context</li>  <li>Go puro vs ORM</li>  <li>Trabalhando com GORM</li>  <li>Migrations</li>  <li>SQLC: Geração automática de Queries</li></ul><h3 id=\"deploy\">Deploy</h3><ul>  <li>Entendendo processo de compilação</li>  <li>Gerando imagem Docker com multistage building</li>  <li>Criando manifestos Kubernetes</li>  <li>Realizando deploy no Kubernetes</li></ul><h3 id=\"marketing-pessoal\">Marketing pessoal</h3><ul>  <li>Imagem pessoal</li>  <li>Autoridade</li>  <li>Redes sociais</li>  <li>Networking</li>  <li>Seus projetos e sua marca pessoal</li></ul><h3 id=\"trabalho-em-equipe\">Trabalho em equipe</h3><ul>  <li>Dificuldades enfrentadas pelo trabalho em equipe</li>  <li>Como melhorar a formação de equipes</li>  <li>Comunicação assertiva</li>  <li>Perfil Comportamental</li></ul><h3 id=\"empreendedorismo\">Empreendedorismo</h3><ul>  <li>Empreendedorismo social</li>  <li>Empreendedorismo corporativo (intraempreendedorismo)</li>  <li>Empreendedorismo digital</li>  <li>Empreendedorismo Serial</li></ul>",
            "url": "/2024/02/24/roadmap.html",
            
            
            
            "tags": ["go","roadmap"],
            
            "date_published": "2024-02-24T00:00:00+00:00",
            "date_modified": "2024-02-24T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/20/alias.html",
            "title": "cheatsheet/alias",
            "summary": "Cheatsheet alias",
            "content_text": "Cheatsheet alias",
            "content_html": "<h2 id=\"cheatsheet-alias\">Cheatsheet alias</h2>",
            "url": "/2024/02/20/alias.html",
            
            
            
            "tags": ["alias","linux"],
            
            "date_published": "2024-02-20T00:00:00+00:00",
            "date_modified": "2024-02-20T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/20/tcpdump.html",
            "title": "cheatsheet/tcpdump",
            "summary": "Cheatsheet tcpdump",
            "content_text": "Cheatsheet tcpdump",
            "content_html": "<h2 id=\"cheatsheet-tcpdump\">Cheatsheet tcpdump</h2>",
            "url": "/2024/02/20/tcpdump.html",
            
            
            
            "tags": ["tcpdump","linux"],
            
            "date_published": "2024-02-20T00:00:00+00:00",
            "date_modified": "2024-02-20T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/20/regex.html",
            "title": "cheatsheet/regex",
            "summary": "Cheatsheet regex",
            "content_text": "Cheatsheet regex",
            "content_html": "<h2 id=\"cheatsheet-regex\">Cheatsheet regex</h2>",
            "url": "/2024/02/20/regex.html",
            
            
            
            "tags": ["regex","linux"],
            
            "date_published": "2024-02-20T00:00:00+00:00",
            "date_modified": "2024-02-20T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/20/openssh.html",
            "title": "cheatsheet/openssh",
            "summary": "Cheatsheet openssh",
            "content_text": "Cheatsheet openssh",
            "content_html": "<h2 id=\"cheatsheet-openssh\">Cheatsheet openssh</h2>",
            "url": "/2024/02/20/openssh.html",
            
            
            
            "tags": ["openssh","linux"],
            
            "date_published": "2024-02-20T00:00:00+00:00",
            "date_modified": "2024-02-20T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/20/nfs.html",
            "title": "cheatsheet/nfs",
            "summary": "Cheatsheet nfs",
            "content_text": "Cheatsheet nfs",
            "content_html": "<h2 id=\"cheatsheet-nfs\">Cheatsheet nfs</h2>",
            "url": "/2024/02/20/nfs.html",
            
            
            
            "tags": ["nfs","linux"],
            
            "date_published": "2024-02-20T00:00:00+00:00",
            "date_modified": "2024-02-20T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/20/certificates.html",
            "title": "cheatsheet/certificates",
            "summary": "Cheatsheet certificates",
            "content_text": "Cheatsheet certificateshttps://github.com/Hakky54/certificate-rippercrip print --url=https://stackoverflow.com/crip export pkcs12 -u=https://github.comcrip print -u=https://github.com -f=pemcrip print -f=pem \\-u=https://youtube.com \\-u=https://github.com \\-u=https://stackoverflow.com \\-u=https://facebook.com",
            "content_html": "<h2 id=\"cheatsheet-certificates\">Cheatsheet certificates</h2><p>https://github.com/Hakky54/certificate-ripper</p><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>crip print <span class=\"nt\">--url</span><span class=\"o\">=</span>https://stackoverflow.com/crip <span class=\"nb\">export </span>pkcs12 <span class=\"nt\">-u</span><span class=\"o\">=</span>https://github.comcrip print <span class=\"nt\">-u</span><span class=\"o\">=</span>https://github.com <span class=\"nt\">-f</span><span class=\"o\">=</span>pemcrip print <span class=\"nt\">-f</span><span class=\"o\">=</span>pem <span class=\"se\">\\</span><span class=\"nt\">-u</span><span class=\"o\">=</span>https://youtube.com <span class=\"se\">\\</span><span class=\"nt\">-u</span><span class=\"o\">=</span>https://github.com <span class=\"se\">\\</span><span class=\"nt\">-u</span><span class=\"o\">=</span>https://stackoverflow.com <span class=\"se\">\\</span><span class=\"nt\">-u</span><span class=\"o\">=</span>https://facebook.com</code></pre></div></div>",
            "url": "/2024/02/20/certificates.html",
            
            
            
            "tags": ["certificates","linux"],
            
            "date_published": "2024-02-20T00:00:00+00:00",
            "date_modified": "2024-02-20T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/20/awscli.html",
            "title": "cheatsheet/awscli",
            "summary": "Cheatsheet awscli",
            "content_text": "Cheatsheet awscli",
            "content_html": "<h2 id=\"cheatsheet-awscli\">Cheatsheet awscli</h2>",
            "url": "/2024/02/20/awscli.html",
            
            
            
            "tags": ["awscli","linux"],
            
            "date_published": "2024-02-20T00:00:00+00:00",
            "date_modified": "2024-02-20T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/iam.html",
            "title": "aws/iam",
            "summary": "IAM",
            "content_text": "IAMA IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:UsuáriosUm usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:aws iam create-user --user-name myuserGruposUm grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuserPolíticasAs políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}FunçõesAs funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.jsonAssume Role Policy DocumentO documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}",
            "content_html": "<h2 id=\"iam\">IAM</h2><p>A IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:</p><h4 id=\"usuários\">Usuários</h4><p>Um usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-user --user-name myuser</code></pre></div></div><h4 id=\"grupos\">Grupos</h4><p>Um grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuser</code></pre></div></div><h4 id=\"políticas\">Políticas</h4><p>As políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}</code></pre></div></div><h4 id=\"funções\">Funções</h4><p>As funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.json</code></pre></div></div><h4 id=\"assume-role-policy-document\">Assume Role Policy Document</h4><p>O documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}</code></pre></div></div>",
            "url": "/2024/02/19/iam.html",
            
            
            
            "tags": ["iam","aws","security"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/powershell.html",
            "title": "cheatsheet/powershell",
            "summary": "Cheatsheet powershell",
            "content_text": "Cheatsheet powershell# Imprimir uma mensagem na telaWrite-Output \"Hello, World!\"# Declarar variáveis$idade = 30$nome = \"João\"$salario = 2500.50$ativo = $true# Comentários de linha única&lt;#Comentáriosde váriaslinhas#&gt;# Operadores aritméticos$soma = 5 + 3$subtracao = 10 - 4$multiplicacao = 2 * 6$divisao = 15 / 3$exponenciacao = 2 ** 3$resto_divisao = 10 % 3# Estruturas condicionaisif ($idade -ge 18) {    Write-Output \"Você é maior de idade\"} else {    Write-Output \"Você é menor de idade\"}# Estruturas de repetição - Loop forfor ($i = 0; $i -lt 5; $i++) {    Write-Output $i}# Estruturas de repetição - Loop while$contador = 0while ($contador -lt 5) {    Write-Output $contador    $contador++}# Listas$cores = @('vermelho', 'verde', 'azul')$primeira_cor = $cores[0]$cores += 'amarelo'$tamanho_lista = $cores.Count# Dicionários$pessoa = @{    'nome' = 'Maria'    'idade' = 25}$idade_da_pessoa = $pessoa['idade']$pessoa['profissao'] = 'engenheira'# Funçõesfunction Saudacao {    param (        [string]$nome    )    Write-Output \"Olá, $nome\"}Saudacao \"Ana\"# Trabalhar com arquivos$conteudo = Get-Content arquivo.txt# Manipulação de strings$mensagem = \"Olá, Mundo!\"$tamanho = $mensagem.Length$maiusculas = $mensagem.ToUpper()$minusculas = $mensagem.ToLower()$palavras = $mensagem -split ','# Tratamento de exceçõestry {    $resultado = 10 / 0} catch {    Write-Output \"Não é possível dividir por zero\"}# Trabalhar com datas e horas$agora = Get-Date$ano_atual = $agora.Year$mes_atual = $agora.Month# Compreensão de lista$numeros = @(1, 2, 3, 4, 5)$dobro = $numeros | ForEach-Object { $_ * 2 }# Definir uma classeclass Pessoa {    [string]$nome    [int]$idade    Pessoa([string]$nome, [int]$idade) {        $this.nome = $nome        $this.idade = $idade    }    [void] Saudacao() {        Write-Output \"Olá, $($this.nome)\"    }}# Instanciar um objeto da classe Pessoa$p1 = [Pessoa]::new(\"Carlos\", 30)$p1.Saudacao()HTTP Server",
            "content_html": "<h2 id=\"cheatsheet-powershell\">Cheatsheet powershell</h2><div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Imprimir uma mensagem na tela</span><span class=\"w\"></span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Hello, World!\"</span><span class=\"w\"></span><span class=\"c\"># Declarar variáveis</span><span class=\"w\"></span><span class=\"nv\">$idade</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"w\"></span><span class=\"nv\">$nome</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"João\"</span><span class=\"w\"></span><span class=\"nv\">$salario</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2500.50</span><span class=\"w\"></span><span class=\"nv\">$ativo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">$true</span><span class=\"w\"></span><span class=\"c\"># Comentários de linha única</span><span class=\"w\"></span><span class=\"cm\">&lt;#Comentáriosde váriaslinhas#&gt;</span><span class=\"w\"></span><span class=\"c\"># Operadores aritméticos</span><span class=\"w\"></span><span class=\"nv\">$soma</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span><span class=\"nv\">$subtracao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"></span><span class=\"nv\">$multiplicacao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"></span><span class=\"nv\">$divisao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"n\">/</span><span class=\"w\"> </span><span class=\"nx\">3</span><span class=\"w\"></span><span class=\"nv\">$exponenciacao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">**</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span><span class=\"nv\">$resto_divisao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span><span class=\"c\"># Estruturas condicionais</span><span class=\"w\"></span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$idade</span><span class=\"w\"> </span><span class=\"o\">-ge</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Você é maior de idade\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"kr\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Você é menor de idade\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Estruturas de repetição - Loop for</span><span class=\"w\"></span><span class=\"kr\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nv\">$i</span><span class=\"w\"> </span><span class=\"o\">-lt</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nv\">$i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"nv\">$i</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Estruturas de repetição - Loop while</span><span class=\"w\"></span><span class=\"nv\">$contador</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span><span class=\"kr\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$contador</span><span class=\"w\"> </span><span class=\"o\">-lt</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"nv\">$contador</span><span class=\"w\">    </span><span class=\"nv\">$contador</span><span class=\"o\">++</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Listas</span><span class=\"w\"></span><span class=\"nv\">$cores</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">@(</span><span class=\"s1\">'vermelho'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">'verde'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">'azul'</span><span class=\"p\">)</span><span class=\"w\"></span><span class=\"nv\">$primeira_cor</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$cores</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span><span class=\"nv\">$cores</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"s1\">'amarelo'</span><span class=\"w\"></span><span class=\"nv\">$tamanho_lista</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$cores</span><span class=\"o\">.</span><span class=\"nf\">Count</span><span class=\"w\"></span><span class=\"c\"># Dicionários</span><span class=\"w\"></span><span class=\"nv\">$pessoa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">@{</span><span class=\"w\">    </span><span class=\"s1\">'nome'</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'Maria'</span><span class=\"w\">    </span><span class=\"s1\">'idade'</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"nv\">$idade_da_pessoa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$pessoa</span><span class=\"p\">[</span><span class=\"s1\">'idade'</span><span class=\"p\">]</span><span class=\"w\"></span><span class=\"nv\">$pessoa</span><span class=\"p\">[</span><span class=\"s1\">'profissao'</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'engenheira'</span><span class=\"w\"></span><span class=\"c\"># Funções</span><span class=\"w\"></span><span class=\"kr\">function</span><span class=\"w\"> </span><span class=\"nf\">Saudacao</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"kr\">param</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"w\">        </span><span class=\"p\">[</span><span class=\"n\">string</span><span class=\"p\">]</span><span class=\"nv\">$nome</span><span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Olá, </span><span class=\"nv\">$nome</span><span class=\"s2\">\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"n\">Saudacao</span><span class=\"w\"> </span><span class=\"s2\">\"Ana\"</span><span class=\"w\"></span><span class=\"c\"># Trabalhar com arquivos</span><span class=\"w\"></span><span class=\"nv\">$conteudo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Get-Content</span><span class=\"w\"> </span><span class=\"nx\">arquivo.txt</span><span class=\"w\"></span><span class=\"c\"># Manipulação de strings</span><span class=\"w\"></span><span class=\"nv\">$mensagem</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"Olá, Mundo!\"</span><span class=\"w\"></span><span class=\"nv\">$tamanho</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"o\">.</span><span class=\"nf\">Length</span><span class=\"w\"></span><span class=\"nv\">$maiusculas</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"o\">.</span><span class=\"nf\">ToUpper</span><span class=\"p\">()</span><span class=\"w\"></span><span class=\"nv\">$minusculas</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"o\">.</span><span class=\"nf\">ToLower</span><span class=\"p\">()</span><span class=\"w\"></span><span class=\"nv\">$palavras</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"w\"> </span><span class=\"o\">-split</span><span class=\"w\"> </span><span class=\"s1\">','</span><span class=\"w\"></span><span class=\"c\"># Tratamento de exceções</span><span class=\"w\"></span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nv\">$resultado</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"n\">/</span><span class=\"w\"> </span><span class=\"nx\">0</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"kr\">catch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Não é possível dividir por zero\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Trabalhar com datas e horas</span><span class=\"w\"></span><span class=\"nv\">$agora</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Get-Date</span><span class=\"w\"></span><span class=\"nv\">$ano_atual</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$agora</span><span class=\"o\">.</span><span class=\"nf\">Year</span><span class=\"w\"></span><span class=\"nv\">$mes_atual</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$agora</span><span class=\"o\">.</span><span class=\"nf\">Month</span><span class=\"w\"></span><span class=\"c\"># Compreensão de lista</span><span class=\"w\"></span><span class=\"nv\">$numeros</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">@(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\"></span><span class=\"nv\">$dobro</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$numeros</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">ForEach-Object</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"bp\">$_</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Definir uma classe</span><span class=\"w\"></span><span class=\"kr\">class</span><span class=\"w\"> </span><span class=\"nc\">Pessoa</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">string</span><span class=\"p\">]</span><span class=\"nv\">$nome</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">int</span><span class=\"p\">]</span><span class=\"nv\">$idade</span><span class=\"w\">    </span><span class=\"n\">Pessoa</span><span class=\"p\">([</span><span class=\"n\">string</span><span class=\"p\">]</span><span class=\"nv\">$nome</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">int</span><span class=\"p\">]</span><span class=\"nv\">$idade</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"bp\">$this</span><span class=\"o\">.</span><span class=\"nf\">nome</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$nome</span><span class=\"w\">        </span><span class=\"bp\">$this</span><span class=\"o\">.</span><span class=\"nf\">idade</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$idade</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">void</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">Saudacao</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Olá, </span><span class=\"si\">$(</span><span class=\"bp\">$this</span><span class=\"o\">.</span><span class=\"nf\">nome</span><span class=\"si\">)</span><span class=\"s2\">\"</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Instanciar um objeto da classe Pessoa</span><span class=\"w\"></span><span class=\"nv\">$p1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Pessoa</span><span class=\"p\">]::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s2\">\"Carlos\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"p\">)</span><span class=\"w\"></span><span class=\"nv\">$p1</span><span class=\"o\">.</span><span class=\"nf\">Saudacao</span><span class=\"p\">()</span><span class=\"w\"></span></code></pre></div></div><h3 id=\"http-server\">HTTP Server</h3>",
            "url": "/2024/02/19/powershell.html",
            
            
            
            "tags": ["powershell","linux"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/lpi2.html",
            "title": "cheatsheet/git",
            "summary": "Cheatsheet git",
            "content_text": "Cheatsheet git",
            "content_html": "<h2 id=\"cheatsheet-git\">Cheatsheet git</h2>",
            "url": "/2024/02/19/lpi2.html",
            
            
            
            "tags": ["git","linux"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/lpi1.html",
            "title": "cheatsheet/lpi1",
            "summary": "Cheatsheet lpi1",
            "content_text": "Cheatsheet lpi1",
            "content_html": "<h2 id=\"cheatsheet-lpi1\">Cheatsheet lpi1</h2>",
            "url": "/2024/02/19/lpi1.html",
            
            
            
            "tags": ["lpi1","linux"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        }
    
    ]
}