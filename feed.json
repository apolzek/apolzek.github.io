{
    "version": "https://jsonfeed.org/version/1",
    "title": "apolzek",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "description": "blog",
    "icon": "/apple-touch-icon.png",
    "favicon": "/favicon.ico",
    "expired": false,
    
"items": [
    
        {
            "id": "/2024/06/22/futuro-do-brasil.html",
            "title": "futuro-do-brasil",
            "summary": "Futuro do Brasil",
            "content_text": "",
            "content_html": "",
            "url": "/2024/06/22/futuro-do-brasil.html",
            
            
            
            "tags": ["política","brasil"],
            
            "date_published": "2024-06-22T00:00:00+00:00",
            "date_modified": "2024-06-22T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/06/07/sistemas-observaveis.html",
            "title": "sistemas-observaveis",
            "summary": "Sistemas Observáveis",
            "content_text": "Antes de iniciar, reflita sobre as seguintes questões:1) Como saber quando a observabilidade foi alcançada?2) Para obter observabilidade, é necessário ter monitoramento previamente?3) Qual é o investimento apropriado para assegurar a observabilidade de um sistema ou produto?4) Quais questões podem ser respondidas ao se atingir o estágio de observabilidade em um sistema?5) Os dados relacionados ao negócio também fazem parte da observabilidade?Talvez ao ouvir o termo “observabilidade”, venha imediatamente à mente uma pilha de ferramentas e belos dashboards. Também pensamos nos pilares como logs, traces e métricas. Mas, afinal, o que isso realmente significa? Eu costumo pensar que é a capacidade de entender como o sistema está funcionando em determinado momento, sem a necessidade de grandes esforços mentais. Envolve ter uma visão abrangente e profunda de um sistema e suas dependências. Afinal, nosso sistema não pode parar, ou pode? A questão é relativa, pois temos diferentes tipos de serviços com variados tamanhos e níveis de complexidade. A verdade é que, nos últimos anos, toda uma indústria tem se movimentado para criar ferramentas avançadas nesse contexto, e eu espero mostrar por quê.Eu posso garantir que o conceito de observabilidade vai além de ter boas métricas e ferramentas configuradas. Envolve ajudar o observador a entender o que o sistema deveria fazer e se ele de fato está fazendo isso. Por ser complexo, pode ser abordado de diferentes formas dentro das empresas. O mais comum é trabalhar por níveis, onde o topo da pirâmide se concentra em ver um panorama geral e mais importante relacionado ao negócio. À medida que se desce na pirâmide, tem-se mais dados e começa-se a observar partes com menos relevância de maneira mais detalhada. Esse tipo de abordagem ajuda a manter diferentes times focados em analisar aquilo que é de seu domínio técnico (aplicação, rede, banco de dados, etc.). Isso é apenas uma maneira de escalar times em ambientes organizacionais que possuem várias frentes e várias pessoas. Naturalmente, você terá diferentes níveis de entendimento. Um dos maiores desafios aqui é fornecer uma plataforma uniforme que atenda os diferentes times de Engenharia.Uma boa linha de raciocínio é associar observabilidade a dinheiro (receita). Por que alguém decidiu investir tanto para ter visibilidade de um sistema? A primeira resposta que me vem à mente é: porque esse sistema é importante. E aqui não me entenda mal, o sistema pode ser importante tanto por sua capacidade de gerar receita quanto por seu valor ideológico; isso não importa. O que importa é que todos nós estamos empenhados em garantir uma boa experiência para o usuário final. Em determinados momentos, isso pode ser mais valioso do que o próprio dinheiro. Assim, investimos recursos porque sabemos que os erros inevitavelmente ocorrerão e queremos estar preparados de diversas formas para minimizá-los ou corrigi-los rapidamente. Nós, como usuários finais, somos extremamente exigentes quando se trata de um sistema. Queremos que ele cumpra sua proposta de maneira eficiente.Sistemas computacionais tendem a ser complexos por natureza, pois são construídos sobre uma pilha de abstrações que presumimos estar funcionando corretamente. Se você é um programador, engenheiro de software ou algo do tipo, sabe das variadas formas que existem de construir a mesma funcionalidade. Além disso, há as dependências, como sistemas de banco de dados, sistemas de mensageria, caches e outros. Temos também a parte de comunicação, que pode envolver redes de computadores usando diferentes protocolos(pilhas). Para acompanhar a evolução dos sistemas, essas ferramentas também foram naturalmente melhoradas, e algumas até substituídas. Para obter uma compreensão completa, um dos requisitos é ter informações detalhadas sobre essas dependências. Isso permite que você saia do campo da especulação e entre no do determinismo. Aqui, o futuro é considerado fixo e definido com base no estado atual e nas leis naturais que governam o universo. Ou seja, você sabe que se sua API está recebendo um alto número de requisições, mais chamadas laterais podem acontecer, resultando em um alto consumo de banda e maior uso do banco de dados. Nesse sentido, é importante lembrar que, se o sistema foi mal desenhado ou se seus subsistemas carregam débitos técnicos, a observabilidade vai te ajudar a identificar esses problemas rapidamente.Quem avisa amigo é. Cuidado para não tratar um problema que é reflexo de um problema maior. O efeito cascata é comum em arquiteturas complexas e chegar a origem do problema pode ser difícil ! Vamos seguido..Normalmente o que consguimos ter dos sistemas são logs, traces, métricas e eventos. Existem várias ferramentas no mercado para lidar com esses dados, como Prometheus, Grafana, Elasticsearch, Logstash, Kibana, Splunk, New Relic, Datadog, Jaeger, Zipkin, Dynatrace, Honeycomb, AppDynamics, Sentry, Fluentd, Nagios, Zabbix, VictoriaMetrics, Thanos, OpenTelemetry e Graylog. Esta lista é apenas uma pequena amostra, pois há muitas outras ferramentas disponíveis. Quero destacar três das ferramentas mencionadas: Dynatrace, New Relic e Datadog. Estou destacando essas três para fazer uma breve tangente. Em todos os lugares em que trabalhei, pelo menos uma dessas três empresas estava presente. O mais intrigante é que todos esses locais enfrentaram o mesmo problema: custo em ascensão acelerada. Meu objetivo não é criticar essas empresas muito menos suas soluções de mercado, mas aprender com o modelo de negócio delas e no que ele implica.Essas empresas normalmente enfrentam três desafios principais. O primeiro está relacionado à própria observabilidade, ou seja, como extrair dados relevantes de sistemas complexos da forma mais abstrata possível para seus clientes. O segundo é como fornecer visualizações rápidas, elegantes e confiáveis, lembrando que cada cliente terá necessidades específicas. O terceiro desafio está relacionado ao modelo de negócio mencionado anteriormente e diz respeito a como essas empresas lidam com grande quantidade de dados extraídos. A verdade é que crescer é natural e, se você não tiver um bom planejamento, vai precisar de uma boa quantia de dinheiro. Seja porque sua volumetria aumentou, novos sistemas surgiram ou sua configuração de verbosidade não está das melhores, você deve estar preparado para pagar o preço no final. Aqui entra a primeira grande decisão de um projeto de observabilidade: pagar mais caro e delegar ou tentar economizar abraçando a complexidade técnica? Eu não posso responder essa pergunta e você sabe muito bem disso.Saindo do quesito money, um movimento que tenho percebido nos últimos anos é a de atentar a observabilidade no inicio dos projetos, assim como aconteceu com a segurança, depois de mais de um século de batalha, ataques hackers, perdas financeiras e muita conscientização. As pessoas sabem que precisam ter visibilidade de seus sistemas(bem como eles precisam estar seguros) e hoje grandes projetos de software (open source ou não) possuem bons logs e pelo menos um /metrics. Estamos caminhando para facilitar com que isso aconteça sem grandes dores. Mas novamente, não se esqueça, esteja preparado para lidar com o crescimento.Agora, se você participa de um projeto e produto e está querendo deixá-lo observável, aí vai uma dica. Comece com as perguntas, o que você quer responder ? Quantos clientes tenho ativos no momento? Qual foi meu faturamento nas últimas 12 horas? Qual a porcentagem de requisições HTTP que estão falhando? Estou transacionando?.. Seu percurso será uma montanha-russa de sucessos e fracassos, porque no final nenhuma ferramenta tem a capacidade de superar sua visão de um sistema computacional. Chegou a hora de pensar!Pensar em quais tecnologias usar, como lidar com o crescimento de dados, quais tipos de métricas são importantes, como lidar com uma possível mudança na stack, como manter essas tecnologias atualizadas, qual volume esperado, qual o orçamento disponível, quais dados devem estar presentes nos dashboards, o que não pode parar, se devo monitorar meu monitoramento, devo separar dados de negócio de dados de sistema.. e por ai vai!Reflita, talvez, a parte CORE do seu sistema está funcionando normalmente, mas seu serviço de autenticação está fora. Seu usuário não consegue fazer o login e isso basta; você está fora, perdendo a cada minuto uma cota de SLA. Nesse caso, espero que algum alarme seja disparado. Caso contrário, você vai depender da boa vontade de algum engenheiro de confiabilidade abrir o dashboard, ou até antes disso, com uma onda de reclamações no seu canal de atendimento.O cenário hipotético acima ressalta a importância fundamental de um engenheiro competente. As mentes hábeis selecionarão as ferramentas adequadas, que se assemelham a uma terra fértil para o plantio. Estas auxiliarão na geração, captura e armazenamento de dados sobre os sistemas. Posteriormente, o mesmo engenheiro hábil os correlacionará de modo a representarem aspectos significativos do negócio. A agregação desses dados, apresentada de forma simplificada, proporciona uma visão compreensível mesmo para aqueles que não compartilham da mesma visão holística. Em síntese, alguém pensará de antemão para que os subsequentes não precisem fazê-lo. Trata-se de um projeto de melhoria contínua que jamais se encerra. O reflexo disso é a obtenção de alertas eficazes, que conduzem a respostas ágeis diante de incidentes. Repita esse fluxo várias vezes até porque Observabilidade está mais para um processo contínuo do que um estado final.Definir padrões, fazer previsões de armazenamento, selecionar e manter ferramentas, estabelecer métricas relevantes, configurar rastreamento distribuído, compreender as dependências do sistema, lidar com sistemas assíncronos e diferentes tecnologias são apenas alguns dos desafios complexos enfrentados.",
            "content_html": "<p>Antes de iniciar, reflita sobre as seguintes questões:</p><p>1) Como saber quando a observabilidade foi alcançada?2) Para obter observabilidade, é necessário ter monitoramento previamente?3) Qual é o investimento apropriado para assegurar a observabilidade de um sistema ou produto?4) Quais questões podem ser respondidas ao se atingir o estágio de observabilidade em um sistema?5) Os dados relacionados ao negócio também fazem parte da observabilidade?</p><p>Talvez ao ouvir o termo “observabilidade”, venha imediatamente à mente uma pilha de ferramentas e belos dashboards. Também pensamos nos pilares como logs, traces e métricas. Mas, afinal, o que isso realmente significa? Eu costumo pensar que <em>é a capacidade de entender como o sistema está funcionando em determinado momento, sem a necessidade de grandes esforços mentais</em>. Envolve ter uma visão abrangente <strong>e</strong> profunda de um sistema e suas dependências. Afinal, nosso sistema não pode parar, ou pode? A questão é relativa, pois temos diferentes tipos de serviços com variados tamanhos e níveis de complexidade. A verdade é que, nos últimos anos, toda uma indústria tem se movimentado para criar ferramentas avançadas nesse contexto, e eu espero mostrar por quê.</p><p>Eu posso garantir que o conceito de observabilidade vai além de ter boas métricas e ferramentas configuradas. Envolve ajudar o observador a entender o que o sistema deveria fazer e se ele de fato está fazendo isso. Por ser complexo, pode ser abordado de diferentes formas dentro das empresas. O mais comum é trabalhar por níveis, onde o topo da pirâmide se concentra em ver um panorama geral e mais importante relacionado ao negócio. À medida que se desce na pirâmide, tem-se mais dados e começa-se a observar partes com menos relevância de maneira mais detalhada. Esse tipo de abordagem ajuda a manter diferentes times focados em analisar aquilo que é de seu domínio técnico (aplicação, rede, banco de dados, etc.). Isso é apenas uma maneira de escalar times em ambientes organizacionais que possuem várias frentes e várias pessoas. Naturalmente, você terá diferentes níveis de entendimento. Um dos maiores desafios aqui é fornecer uma plataforma uniforme que atenda os diferentes times de Engenharia.</p><p>Uma boa linha de raciocínio é associar observabilidade a dinheiro (receita). Por que alguém decidiu investir tanto para ter visibilidade de um sistema? A primeira resposta que me vem à mente é: porque esse sistema é importante. E aqui não me entenda mal, o sistema pode ser importante tanto por sua capacidade de gerar receita quanto por seu valor ideológico; isso não importa. O que importa é que todos nós estamos empenhados em garantir uma boa experiência para o usuário final. Em determinados momentos, isso pode ser mais valioso do que o próprio dinheiro. Assim, investimos recursos porque sabemos que os erros inevitavelmente ocorrerão e queremos estar preparados de diversas formas para minimizá-los ou corrigi-los rapidamente. Nós, como usuários finais, somos extremamente exigentes quando se trata de um sistema. Queremos que ele cumpra sua proposta de maneira eficiente.</p><p>Sistemas computacionais tendem a ser complexos por natureza, pois são construídos sobre uma pilha de abstrações que presumimos estar funcionando corretamente. Se você é um programador, engenheiro de software ou algo do tipo, sabe das variadas formas que existem de construir a mesma funcionalidade. Além disso, há as dependências, como sistemas de banco de dados, sistemas de mensageria, caches e outros. Temos também a parte de comunicação, que pode envolver redes de computadores usando diferentes protocolos(pilhas). Para acompanhar a evolução dos sistemas, essas ferramentas também foram naturalmente melhoradas, e algumas até substituídas. Para obter uma compreensão completa, um dos requisitos é ter informações detalhadas sobre essas dependências. Isso permite que você saia do campo da especulação e entre no do determinismo. Aqui, o futuro é considerado fixo e definido com base no estado atual e nas leis naturais que governam o universo. Ou seja, você sabe que se sua API está recebendo um alto número de requisições, mais chamadas laterais podem acontecer, resultando em um alto consumo de banda e maior uso do banco de dados. Nesse sentido, é importante lembrar que, se o sistema foi mal desenhado ou se seus subsistemas carregam débitos técnicos, a observabilidade vai te ajudar a identificar esses problemas rapidamente.</p><p>Quem avisa amigo é. Cuidado para não tratar um problema que é reflexo de um problema maior. O efeito cascata é comum em arquiteturas complexas e chegar a origem do problema pode ser difícil ! Vamos seguido..</p><p>Normalmente o que consguimos ter dos sistemas são logs, traces, métricas e eventos. Existem várias ferramentas no mercado para lidar com esses dados, como Prometheus, Grafana, Elasticsearch, Logstash, Kibana, Splunk, New Relic, Datadog, Jaeger, Zipkin, Dynatrace, Honeycomb, AppDynamics, Sentry, Fluentd, Nagios, Zabbix, VictoriaMetrics, Thanos, OpenTelemetry e Graylog. Esta lista é apenas uma pequena amostra, pois há muitas outras ferramentas disponíveis. Quero destacar três das ferramentas mencionadas: Dynatrace, New Relic e Datadog. Estou destacando essas três para fazer uma breve tangente. Em todos os lugares em que trabalhei, pelo menos uma dessas três empresas estava presente. O mais intrigante é que todos esses locais enfrentaram o mesmo problema: <strong>custo em ascensão acelerada</strong>. Meu objetivo não é criticar essas empresas muito menos suas soluções de mercado, mas aprender com o modelo de negócio delas e no que ele implica.</p><p>Essas empresas normalmente enfrentam três desafios principais. O primeiro está relacionado à própria observabilidade, ou seja, como extrair dados relevantes de sistemas complexos da forma mais abstrata possível para seus clientes. O segundo é como fornecer visualizações rápidas, elegantes e confiáveis, lembrando que cada cliente terá necessidades específicas. O terceiro desafio está relacionado ao modelo de negócio mencionado anteriormente e diz respeito a como essas empresas lidam com <strong>grande quantidade de dados</strong> extraídos. A verdade é que crescer é natural e, se você não tiver um bom planejamento, vai precisar de uma boa quantia de dinheiro. Seja porque sua volumetria aumentou, novos sistemas surgiram ou sua configuração de verbosidade não está das melhores, você deve estar preparado para pagar o preço no final. Aqui entra a primeira grande decisão de um projeto de observabilidade: <em>pagar mais caro e delegar ou tentar economizar abraçando a complexidade técnica?</em> Eu não posso responder essa pergunta e você sabe muito bem disso.</p><p>Saindo do quesito <em>money</em>, um movimento que tenho percebido nos últimos anos é a de atentar a observabilidade no inicio dos projetos, assim como aconteceu com a segurança, depois de mais de um século de batalha, ataques hackers, perdas financeiras e muita conscientização. As pessoas sabem que precisam ter visibilidade de seus sistemas(bem como eles precisam estar seguros) e hoje grandes projetos de software (open source ou não) possuem bons logs e pelo menos um <em>/metrics</em>. Estamos caminhando para facilitar com que isso aconteça sem grandes dores. Mas novamente, não se esqueça, esteja preparado para lidar com o crescimento.</p><p>Agora, se você participa de um projeto e produto e está querendo deixá-lo observável, aí vai uma dica. Comece com as perguntas, o que você quer responder ? Quantos clientes tenho ativos no momento? Qual foi meu faturamento nas últimas 12 horas? Qual a porcentagem de requisições HTTP que estão falhando? Estou transacionando?.. Seu percurso será uma montanha-russa de sucessos e fracassos, porque no final nenhuma ferramenta tem a capacidade de superar sua visão de um sistema computacional. Chegou a hora de pensar!</p><p>Pensar em quais tecnologias usar, como lidar com o crescimento de dados, quais tipos de métricas são importantes, como lidar com uma possível mudança na stack, como manter essas tecnologias atualizadas, qual volume esperado, qual o orçamento disponível, quais dados devem estar presentes nos dashboards, o que não pode parar, se devo monitorar meu monitoramento, devo separar dados de negócio de dados de sistema.. e por ai vai!</p><p>Reflita, talvez, a parte CORE do seu sistema está funcionando normalmente, mas seu serviço de autenticação está fora. Seu usuário não consegue fazer o login e isso basta; você está fora, perdendo a cada minuto uma cota de <strong>SLA</strong>. Nesse caso, espero que algum alarme seja disparado. Caso contrário, você vai depender da boa vontade de algum engenheiro de confiabilidade abrir o dashboard, ou até antes disso, com uma onda de reclamações no seu canal de atendimento.</p><p>O cenário hipotético acima ressalta a importância fundamental de um engenheiro competente. As mentes hábeis selecionarão as ferramentas adequadas, que se assemelham a uma terra fértil para o plantio. Estas auxiliarão na geração, captura e armazenamento de dados sobre os sistemas. Posteriormente, o mesmo engenheiro hábil os correlacionará de modo a representarem aspectos significativos do negócio. A agregação desses dados, apresentada de forma simplificada, proporciona uma visão compreensível mesmo para aqueles que não compartilham da mesma visão holística. Em síntese, alguém pensará de antemão para que os subsequentes não precisem fazê-lo. Trata-se de um projeto de melhoria contínua que jamais se encerra. O reflexo disso é a obtenção de alertas eficazes, que conduzem a respostas ágeis diante de incidentes. Repita esse fluxo várias vezes até porque Observabilidade está mais para um processo contínuo do que um estado final.</p><p>Definir padrões, fazer previsões de armazenamento, selecionar e manter ferramentas, estabelecer métricas relevantes, configurar rastreamento distribuído, compreender as dependências do sistema, lidar com sistemas assíncronos e diferentes tecnologias são apenas alguns dos desafios complexos enfrentados.</p>",
            "url": "/2024/06/07/sistemas-observaveis.html",
            
            
            
            "tags": ["observabilidade","monitoramento"],
            
            "date_published": "2024-06-07T00:00:00+00:00",
            "date_modified": "2024-06-07T00:00:00+00:00",
            
                "author": 
                ""
                
            
        }
    
    ]
}