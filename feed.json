{
    "version": "https://jsonfeed.org/version/1",
    "title": "apolzek",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "description": "blog",
    "icon": "/apple-touch-icon.png",
    "favicon": "/favicon.ico",
    "expired": false,
    
"items": [
    
        {
            "id": "/2024/12/01/easy-cka.html",
            "title": "k8s/easy-cka",
            "summary": "Visão geral sobre a certificação CKA",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/easy-cka.html",
            
            
            
            "tags": ["cka","certification","kubernetes","k8s"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/sre-brasil-x-sre-na-gringa.html",
            "title": "opinions/sre-brasil-x-sre-na-gringa",
            "summary": null,
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/sre-brasil-x-sre-na-gringa.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/processos-no-linux.html",
            "title": "linux/processos-no-linux",
            "summary": "Falando sobre processos no Linux",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/processos-no-linux.html",
            
            
            
            "tags": ["processos","processes","process","linux"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "dev/ruby/basicao",
            "summary": "Basicão sobre a linguagem Ruby",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "dev/python/basicao",
            "summary": "Basicão sobre a linguagem Python",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "dev/java/basicao",
            "summary": "Basicão sobre a linguagem Java",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/slices.html",
            "title": "development/golang/basicao",
            "summary": "Basicão sobre a linguagem Golang",
            "content_text": "package mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(s)\tfmt.Println(s)}func modifySlice(i []int) {\ti[0] = 3\ti = append(i, 4)\ti[2] = 4}O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.package mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(&amp;s)\tfmt.Println(s)}func modifySlice(i *[]int) {\t// Corrija o slice usando o ponteiro\t(*i)[0] = 3\t*i = append(*i, 4)\t(*i)[2] = 4}",
            "content_html": "<div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div><p>O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span><span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"c\">// Corrija o slice usando o ponteiro</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/slices.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/resumao.html",
            "title": "development/golang/resumao",
            "summary": "Resumão sobre a linguagem Golang",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/resumao.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/eu-sou-o-crud.html",
            "title": "development/golang/eu-sou-o-crud",
            "summary": "Alguns exemplos de CRUDs",
            "content_text": "https://github.com/apolzek/rinha-backend-2023-gohttps://github.com/apolzek/score-dayhttps://github.com/apolzek/go-backend-clean-architecturehttps://github.com/apolzek/mvc-golang-with-ginhttps://github.com/apolzek/golang-APIhttps://github.com/apolzek/go-crud-livehttps://github.com/apolzek/go-microservice-examplehttps://github.com/apolzek/golang-mongodb-apihttps://github.com/apolzek/fiber-mongo-apihttps://github.com/apolzek/UserCRUDApp-GolangCRUDs em Golang            repositories      topics      link                  Dado 1      Dado 2      Dado 3              Dado 4      Dado 5      Dado 6              Dado 7      Dado 8      Dado 9      ",
            "content_html": "<p>https://github.com/apolzek/rinha-backend-2023-gohttps://github.com/apolzek/score-dayhttps://github.com/apolzek/go-backend-clean-architecturehttps://github.com/apolzek/mvc-golang-with-ginhttps://github.com/apolzek/golang-APIhttps://github.com/apolzek/go-crud-livehttps://github.com/apolzek/go-microservice-examplehttps://github.com/apolzek/golang-mongodb-apihttps://github.com/apolzek/fiber-mongo-apihttps://github.com/apolzek/UserCRUDApp-Golang</p><h2 id=\"cruds-em-golang\">CRUDs em Golang</h2><table>  <thead>    <tr>      <th>repositories</th>      <th>topics</th>      <th>link</th>    </tr>  </thead>  <tbody>    <tr>      <td>Dado 1</td>      <td>Dado 2</td>      <td>Dado 3</td>    </tr>    <tr>      <td>Dado 4</td>      <td>Dado 5</td>      <td>Dado 6</td>    </tr>    <tr>      <td>Dado 7</td>      <td>Dado 8</td>      <td>Dado 9</td>    </tr>  </tbody></table>",
            "url": "/2024/12/01/eu-sou-o-crud.html",
            
            
            
            "tags": ["go","dev"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/context.html",
            "title": "development/golang/context",
            "summary": "Golang context",
            "content_text": "ContextEm Go (ou Golang), o contexto (context) é uma poderosa ferramenta que permite controlar a execução de operações concorrentes e paralelas. Ele é comumente usado para lidar com prazos, cancelamento de operações e valores associados com uma determinada goroutine (uma unidade leve de execução em Go). O contexto é especialmente útil em situações onde várias goroutines estão sendo executadas e você precisa coordenar ou gerenciar seu comportamento. Contextos basicamente utilizam channels por debaixo dos panos, nos quais, os processos que os utilizam precisam ficar ouvindo os sinais que recebem deste contexto em questao.Onde usar ?  Context de tracing  Context do request  Context em query SQL3 tipos de contexto em Go  Deadlines: tempo maximo para o codigo terminar de ser executado(definir o ponto final)          WithDeadline: passa o horario final para terminar      WithTimeout: daqui a quanto tempo vai terminar        Cancellation Signals: todos que estiverem escutando o contexto sao cancelados          WithCancel        Request-scoped values          WithValue: definir e mapear valores(em memoria)      Emplos completos com código Go para ilustrar o uso do contexto em diferentes situações:1. Controlando Prazos (Timeouts):package mainimport (    \"context\"    \"fmt\"    \"time\")func main() {    ctx, cancel := context.WithTimeout(context.Background(), time.Second*2)    defer cancel()    select {    case &lt;-time.After(time.Second * 3):        fmt.Println(\"Operação demorou muito!\")    case &lt;-ctx.Done():        fmt.Println(\"Operação cancelada devido ao prazo expirado.\")    }}2. Cancelamento de Operações:\\package mainimport (    \"context\"    \"fmt\"    \"time\")func worker(ctx context.Context) {    for {        select {        case &lt;-ctx.Done():            fmt.Println(\"Goroutine cancelada.\")            return        default:            fmt.Println(\"Trabalhando...\")            time.Sleep(time.Second)        }    }}func main() {    ctx, cancel := context.WithCancel(context.Background())    go worker(ctx)    // Aguarde por algum tempo e então cancele a operação    time.Sleep(time.Second * 3)    cancel()    // Aguarde um pouco para ver a saída    time.Sleep(time.Second)}3. Comunicação de Valores entre Goroutines:package mainimport (    \"context\"    \"fmt\"    \"sync\")type key stringfunc worker(ctx context.Context, wg *sync.WaitGroup) {    defer wg.Done()    // Recupera o valor associado à chave do contexto    userID := ctx.Value(key(\"userID\")).(string)    fmt.Println(\"Goroutine recebeu UserID:\", userID)}func main() {    // Crie um contexto com um valor associado à chave \"userID\"    ctx := context.WithValue(context.Background(), key(\"userID\"), \"12345\")    var wg sync.WaitGroup    // Inicie duas goroutines que compartilham o mesmo contexto    for i := 0; i &lt; 2; i++ {        wg.Add(1)        go worker(ctx, &amp;wg)    }    // Aguarde até que todas as goroutines terminem    wg.Wait()}",
            "content_html": "<h2 id=\"context\">Context</h2><p>Em Go (ou Golang), o contexto (context) é uma poderosa ferramenta que permite controlar a execução de operações concorrentes e paralelas. Ele é comumente usado para lidar com prazos, cancelamento de operações e valores associados com uma determinada goroutine (uma unidade leve de execução em Go). O contexto é especialmente útil em situações onde várias goroutines estão sendo executadas e você precisa coordenar ou gerenciar seu comportamento. Contextos basicamente utilizam channels por debaixo dos panos, nos quais, os processos que os utilizam precisam ficar ouvindo os sinais que recebem deste contexto em questao.</p><h3 id=\"onde-usar-\">Onde usar ?</h3><ul>  <li>Context de tracing</li>  <li>Context do request</li>  <li>Context em query SQL</li></ul><h3 id=\"3-tipos-de-contexto-em-go\">3 tipos de contexto em Go</h3><ul>  <li>Deadlines: tempo maximo para o codigo terminar de ser executado(definir o ponto final)    <ul>      <li>WithDeadline: passa o horario final para terminar</li>      <li>WithTimeout: daqui a quanto tempo vai terminar</li>    </ul>  </li>  <li>Cancellation Signals: todos que estiverem escutando o contexto sao cancelados    <ul>      <li>WithCancel</li>    </ul>  </li>  <li>Request-scoped values    <ul>      <li>WithValue: definir e mapear valores(em memoria)</li>    </ul>  </li></ul><p>Emplos completos com código Go para ilustrar o uso do contexto em diferentes situações:</p><h3 id=\"1-controlando-prazos-timeouts\">1. Controlando Prazos (Timeouts):</h3><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>    <span class=\"s\">\"context\"</span>    <span class=\"s\">\"fmt\"</span>    <span class=\"s\">\"time\"</span><span class=\"p\">)</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>    <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">cancel</span> <span class=\"o\">:=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WithTimeout</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"o\">*</span><span class=\"m\">2</span><span class=\"p\">)</span>    <span class=\"k\">defer</span> <span class=\"n\">cancel</span><span class=\"p\">()</span>    <span class=\"k\">select</span> <span class=\"p\">{</span>    <span class=\"k\">case</span> <span class=\"o\">&lt;-</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">After</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span> <span class=\"o\">*</span> <span class=\"m\">3</span><span class=\"p\">)</span><span class=\"o\">:</span>        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Operação demorou muito!\"</span><span class=\"p\">)</span>    <span class=\"k\">case</span> <span class=\"o\">&lt;-</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span><span class=\"o\">:</span>        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Operação cancelada devido ao prazo expirado.\"</span><span class=\"p\">)</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><h3 id=\"2-cancelamento-de-operações\">2. Cancelamento de Operações:\\</h3><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>    <span class=\"s\">\"context\"</span>    <span class=\"s\">\"fmt\"</span>    <span class=\"s\">\"time\"</span><span class=\"p\">)</span><span class=\"k\">func</span> <span class=\"n\">worker</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"k\">for</span> <span class=\"p\">{</span>        <span class=\"k\">select</span> <span class=\"p\">{</span>        <span class=\"k\">case</span> <span class=\"o\">&lt;-</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span><span class=\"o\">:</span>            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Goroutine cancelada.\"</span><span class=\"p\">)</span>            <span class=\"k\">return</span>        <span class=\"k\">default</span><span class=\"o\">:</span>            <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Trabalhando...\"</span><span class=\"p\">)</span>            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>    <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">cancel</span> <span class=\"o\">:=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WithCancel</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Background</span><span class=\"p\">())</span>    <span class=\"k\">go</span> <span class=\"n\">worker</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>    <span class=\"c\">// Aguarde por algum tempo e então cancele a operação</span>    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span> <span class=\"o\">*</span> <span class=\"m\">3</span><span class=\"p\">)</span>    <span class=\"n\">cancel</span><span class=\"p\">()</span>    <span class=\"c\">// Aguarde um pouco para ver a saída</span>    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Sleep</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Second</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><h3 id=\"3-comunicação-de-valores-entre-goroutines\">3. Comunicação de Valores entre Goroutines:</h3><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>    <span class=\"s\">\"context\"</span>    <span class=\"s\">\"fmt\"</span>    <span class=\"s\">\"sync\"</span><span class=\"p\">)</span><span class=\"k\">type</span> <span class=\"n\">key</span> <span class=\"kt\">string</span><span class=\"k\">func</span> <span class=\"n\">worker</span><span class=\"p\">(</span><span class=\"n\">ctx</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">wg</span> <span class=\"o\">*</span><span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"k\">defer</span> <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Done</span><span class=\"p\">()</span>    <span class=\"c\">// Recupera o valor associado à chave do contexto</span>    <span class=\"n\">userID</span> <span class=\"o\">:=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s\">\"userID\"</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">)</span>    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Goroutine recebeu UserID:\"</span><span class=\"p\">,</span> <span class=\"n\">userID</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>    <span class=\"c\">// Crie um contexto com um valor associado à chave \"userID\"</span>    <span class=\"n\">ctx</span> <span class=\"o\">:=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">WithValue</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">Background</span><span class=\"p\">(),</span> <span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s\">\"userID\"</span><span class=\"p\">),</span> <span class=\"s\">\"12345\"</span><span class=\"p\">)</span>    <span class=\"k\">var</span> <span class=\"n\">wg</span> <span class=\"n\">sync</span><span class=\"o\">.</span><span class=\"n\">WaitGroup</span>    <span class=\"c\">// Inicie duas goroutines que compartilham o mesmo contexto</span>    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"m\">2</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>        <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span>        <span class=\"k\">go</span> <span class=\"n\">worker</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">wg</span><span class=\"p\">)</span>    <span class=\"p\">}</span>    <span class=\"c\">// Aguarde até que todas as goroutines terminem</span>    <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">Wait</span><span class=\"p\">()</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/context.html",
            
            
            
            "tags": ["go","golang","dev"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/factory.html",
            "title": "dev/padroes-de-projeto/factory",
            "summary": "Entendendo padrão de projeto Factory",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/factory.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/filas.html",
            "title": "dev/estrutura-de-dados/filas",
            "summary": "Entendendo estrutura de dados Fila",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/filas.html",
            
            
            
            "tags": ["fila","queue"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/dominando-o-iam.html",
            "title": "aws/dominando-o-iam",
            "summary": "Dominando de uma vez por todas o AWS IAM",
            "content_text": "A IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:UsuáriosUm usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:aws iam create-user --user-name myuserGruposUm grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuserPolíticasAs políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}FunçõesAs funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.jsonAssume Role Policy DocumentO documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}",
            "content_html": "<p>A IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:</p><h4 id=\"usuários\">Usuários</h4><p>Um usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-user --user-name myuser</code></pre></div></div><h4 id=\"grupos\">Grupos</h4><p>Um grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuser</code></pre></div></div><h4 id=\"políticas\">Políticas</h4><p>As políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}</code></pre></div></div><h4 id=\"funções\">Funções</h4><p>As funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.json</code></pre></div></div><h4 id=\"assume-role-policy-document\">Assume Role Policy Document</h4><p>O documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}</code></pre></div></div>",
            "url": "/2024/12/01/dominando-o-iam.html",
            
            
            
            "tags": ["iam","aws","security"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/ufw.html",
            "title": "cheatsheet/ufw",
            "summary": "Cheatsheet ufw",
            "content_text": "# Habilitar o Firewallsudo ufw enable# Desabilitar o Firewallsudo ufw disable# Verificar o Status do Firewallsudo ufw status# Adicionar uma Regra de Permissão de Porta (por exemplo, porta 80/tcp)sudo ufw allow 80/tcp# Adicionar uma Regra de Permissão para um Range de Portas (por exemplo, portas de 8000 a 8010/tcp)sudo ufw allow 8000:8010/tcp# Adicionar uma Regra de Permissão para um Aplicativo Específico (por exemplo, OpenSSH)sudo ufw allow OpenSSH# Negar uma Porta (por exemplo, porta 22/tcp)sudo ufw deny 22/tcp# Excluir uma Regra (por exemplo, excluir a regra que permite o tráfego na porta 80/tcp)sudo ufw delete allow 80/tcp# Habilitar ou Desabilitar o Loggingsudo ufw logging onsudo ufw logging off# Regras de IPv6 (substitua allow ou deny por allow6 ou deny6 para IPv6)sudo ufw allow6 80/tcpsudo ufw deny6 22/tcp",
            "content_html": "<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Habilitar o Firewallsudo ufw enable# Desabilitar o Firewallsudo ufw disable# Verificar o Status do Firewallsudo ufw status# Adicionar uma Regra de Permissão de Porta (por exemplo, porta 80/tcp)sudo ufw allow 80/tcp# Adicionar uma Regra de Permissão para um Range de Portas (por exemplo, portas de 8000 a 8010/tcp)sudo ufw allow 8000:8010/tcp# Adicionar uma Regra de Permissão para um Aplicativo Específico (por exemplo, OpenSSH)sudo ufw allow OpenSSH# Negar uma Porta (por exemplo, porta 22/tcp)sudo ufw deny 22/tcp# Excluir uma Regra (por exemplo, excluir a regra que permite o tráfego na porta 80/tcp)sudo ufw delete allow 80/tcp# Habilitar ou Desabilitar o Loggingsudo ufw logging onsudo ufw logging off# Regras de IPv6 (substitua allow ou deny por allow6 ou deny6 para IPv6)sudo ufw allow6 80/tcpsudo ufw deny6 22/tcp</code></pre></div></div>",
            "url": "/2024/12/01/ufw.html",
            
            
            
            "tags": ["ufw","ubuntu","firewall"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/kubectl.html",
            "title": "cheatsheet/kubectl",
            "summary": "Cheatsheet kubectl",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/kubectl.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/git.html",
            "title": "cheatsheet/git",
            "summary": "Cheatsheet git",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/git.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/firewalld.html",
            "title": "cheatsheet/firewalld",
            "summary": "Cheatsheet firewalld",
            "content_text": "# Habilitar o Firewalldsudo systemctl start firewalldsudo systemctl enable firewalld# Desabilitar o Firewalldsudo systemctl stop firewalldsudo systemctl disable firewalld# Verificar o Status do Firewalldsudo systemctl status firewalld# Listar as Zonas Disponíveissudo firewall-cmd --get-zones# Definir uma Zona Padrão (substitua 'public' pelo nome da zona desejada)sudo firewall-cmd --set-default-zone=public# Adicionar uma Regra de Permissão de Porta (por exemplo, porta 80/tcp)sudo firewall-cmd --add-port=80/tcp --permanent# Recarregar o Firewalld para Aplicar Alterações Permanentessudo firewall-cmd --reload# Adicionar uma Regra de Serviço (por exemplo, SSH)sudo firewall-cmd --add-service=ssh --permanent# Remover uma Regra de Serviço (por exemplo, SSH)sudo firewall-cmd --remove-service=ssh --permanent# Habilitar ou Desabilitar o Logging (substitua 'yes' ou 'no' conforme necessário)sudo firewall-cmd --set-log-denied=yes --permanentsudo firewall-cmd --set-log-denied=no --permanent# Ativar ou Desativar o Firewalldsudo systemctl start firewalldsudo systemctl stop firewalld",
            "content_html": "<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Habilitar o Firewalldsudo systemctl start firewalldsudo systemctl enable firewalld# Desabilitar o Firewalldsudo systemctl stop firewalldsudo systemctl disable firewalld# Verificar o Status do Firewalldsudo systemctl status firewalld# Listar as Zonas Disponíveissudo firewall-cmd --get-zones# Definir uma Zona Padrão (substitua 'public' pelo nome da zona desejada)sudo firewall-cmd --set-default-zone=public# Adicionar uma Regra de Permissão de Porta (por exemplo, porta 80/tcp)sudo firewall-cmd --add-port=80/tcp --permanent# Recarregar o Firewalld para Aplicar Alterações Permanentessudo firewall-cmd --reload# Adicionar uma Regra de Serviço (por exemplo, SSH)sudo firewall-cmd --add-service=ssh --permanent# Remover uma Regra de Serviço (por exemplo, SSH)sudo firewall-cmd --remove-service=ssh --permanent# Habilitar ou Desabilitar o Logging (substitua 'yes' ou 'no' conforme necessário)sudo firewall-cmd --set-log-denied=yes --permanentsudo firewall-cmd --set-log-denied=no --permanent# Ativar ou Desativar o Firewalldsudo systemctl start firewalldsudo systemctl stop firewalld</code></pre></div></div>",
            "url": "/2024/12/01/firewalld.html",
            
            
            
            "tags": ["firewalld","linux","firewall"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/10/01/asdf.html",
            "title": "cheatsheet/asdf",
            "summary": "Cheatsheet asdf",
            "content_text": "  awscli  bat  cfssl  docker-slim  dotnet-core  eksctl  fd  fzf  helm  helm-docs  java  jq  k6  kind  kubectl  kubectx  lazygit  maven  mysql  neovim  nodejs  rust  shellcheck  teller  terraform  tilt  trivy      yamllint    visidata  kind  docker  containerd  virtualbox",
            "content_html": "<ul>  <li>awscli</li>  <li>bat</li>  <li>cfssl</li>  <li>docker-slim</li>  <li>dotnet-core</li>  <li>eksctl</li>  <li>fd</li>  <li>fzf</li>  <li>helm</li>  <li>helm-docs</li>  <li>java</li>  <li>jq</li>  <li>k6</li>  <li>kind</li>  <li>kubectl</li>  <li>kubectx</li>  <li>lazygit</li>  <li>maven</li>  <li>mysql</li>  <li>neovim</li>  <li>nodejs</li>  <li>rust</li>  <li>shellcheck</li>  <li>teller</li>  <li>terraform</li>  <li>tilt</li>  <li>trivy</li>  <li>    <p>yamllint</p>  </li>  <li>visidata</li>  <li>kind</li>  <li>docker</li>  <li>containerd</li>  <li>virtualbox</li></ul>",
            "url": "/2023/10/01/asdf.html",
            
            
            
            
            
            "date_published": "2023-10-01T00:00:00+00:00",
            "date_modified": "2023-10-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/10/01/apt.html",
            "title": "cheatsheet/apt",
            "summary": "Cheatsheet apt",
            "content_text": "# Atualizar a lista de pacotes disponíveissudo apt update# Atualizar todos os pacotes instaladossudo apt upgrade# Atualizar o sistema inteiro, incluindo pacotes que exigem novas dependênciassudo apt dist-upgrade# Instalar um pacotesudo apt install nome-do-pacote# Remover um pacote (o pacote é desinstalado, mas as configurações permanecem)sudo apt remove nome-do-pacote# Remover um pacote junto com suas configuraçõessudo apt purge nome-do-pacote# Procurar um pacote pelo nome ou descriçãoapt search termo-de-busca# Exibir informações detalhadas sobre um pacoteapt show nome-do-pacote# Listar todos os pacotes instaladosdpkg --list# Listar pacotes específicosdpkg --list | grep termo-de-busca# Listar pacotes disponíveis para atualizaçãoapt list --upgradable# Mostrar as dependências de um pacoteapt depends nome-do-pacote# Verificar se um pacote específico está instaladodpkg -l | grep nome-do-pacote# Limpar o cache de pacotes baixados (libera espaço em disco)sudo apt clean# Remover pacotes órfãos (pacotes que não são mais necessários)sudo apt autoremove# Verificar a integridade dos pacotes instaladossudo apt check# Corrigir problemas de dependências quebradassudo apt --fix-broken install# Bloquear a versão de um pacote para evitar atualizações automáticassudo apt-mark hold nome-do-pacote# Desbloquear um pacote previamente bloqueadosudo apt-mark unhold nome-do-pacote# Visualizar o histórico de atualizaçõesless /var/log/apt/history.log",
            "content_html": "<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Atualizar a lista de pacotes disponíveissudo apt update# Atualizar todos os pacotes instaladossudo apt upgrade# Atualizar o sistema inteiro, incluindo pacotes que exigem novas dependênciassudo apt dist-upgrade# Instalar um pacotesudo apt install nome-do-pacote# Remover um pacote (o pacote é desinstalado, mas as configurações permanecem)sudo apt remove nome-do-pacote# Remover um pacote junto com suas configuraçõessudo apt purge nome-do-pacote# Procurar um pacote pelo nome ou descriçãoapt search termo-de-busca# Exibir informações detalhadas sobre um pacoteapt show nome-do-pacote# Listar todos os pacotes instaladosdpkg --list# Listar pacotes específicosdpkg --list | grep termo-de-busca# Listar pacotes disponíveis para atualizaçãoapt list --upgradable# Mostrar as dependências de um pacoteapt depends nome-do-pacote# Verificar se um pacote específico está instaladodpkg -l | grep nome-do-pacote# Limpar o cache de pacotes baixados (libera espaço em disco)sudo apt clean# Remover pacotes órfãos (pacotes que não são mais necessários)sudo apt autoremove# Verificar a integridade dos pacotes instaladossudo apt check# Corrigir problemas de dependências quebradassudo apt --fix-broken install# Bloquear a versão de um pacote para evitar atualizações automáticassudo apt-mark hold nome-do-pacote# Desbloquear um pacote previamente bloqueadosudo apt-mark unhold nome-do-pacote# Visualizar o histórico de atualizaçõesless /var/log/apt/history.log</code></pre></div></div>",
            "url": "/2023/10/01/apt.html",
            
            
            
            "tags": ["apt","ubuntu","package"],
            
            "date_published": "2023-10-01T00:00:00+00:00",
            "date_modified": "2023-10-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/09/02/terraform.html",
            "title": "cheatsheet/terraform",
            "summary": "Cheatsheet terraform",
            "content_text": "terraform initterraform validateterraform fmtterraform planterraform applyterraform destroyterraform workspace new devterraform workspace listterraform workspace select devterraform import aws_s3_bucket.example my-bucketterraform state listterraform output example_outputterraform graph | dot -Tpng &gt; graph.pngterraform taint aws_instance.exampleterraform untaint aws_instance.exampleterraform init: Este comando é usado para inicializar um novo diretório de configuração do Terraform. Ele baixa os provedores e módulos especificados no arquivo de configuração.terraform plan: Este comando cria um plano de execução que mostra o que o Terraform fará antes de efetivamente fazer qualquer alteração na infraestrutura. É uma boa prática executar isso antes de aplicar qualquer configuração.terraform apply: Este comando é usado para aplicar as alterações definidas em seu código do Terraform à infraestrutura. Ele criará, atualizará ou destruirá recursos conforme necessário.terraform destroy: Este comando é usado para destruir todos os recursos definidos em seu código do Terraform. Use com cuidado, pois isso pode resultar na perda de recursos.terraform validate: Este comando verifica a sintaxe do arquivo de configuração do Terraform e verifica se há erros.terraform fmt: Este comando formata seu código Terraform de acordo com as convenções de estilo do Terraform.terraform workspace: Este comando permite que você gerencie workspaces (espaços de trabalho) no Terraform, o que é útil para lidar com configurações diferentes em um único diretório.terraform import: Este comando é usado para importar um recurso existente em um provedor para o estado do Terraform. Isso é útil quando você deseja começar a gerenciar recursos que já existem.terraform state: Este comando permite manipular diretamente o estado do Terraform, que é útil em situações avançadas de gerenciamento de estado.terraform output: Este comando exibe os valores de saída definidos em seu arquivo de configuração do Terraform.terraform graph: Este comando gera uma representação visual do gráfico de recursos do Terraform, mostrando as dependências entre recursos.terraform taint: Este comando marca um recurso como “sujo” no estado, o que faz com que o Terraform o reconstrua na próxima vez que você executar o terraform apply.terraform untaint: Este comando remove a marcação de “sujeira” de um recurso no estado.",
            "content_html": "<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>terraform initterraform validateterraform fmtterraform planterraform applyterraform destroyterraform workspace new devterraform workspace listterraform workspace select devterraform import aws_s3_bucket.example my-bucketterraform state listterraform output example_outputterraform graph | dot -Tpng &gt; graph.pngterraform taint aws_instance.exampleterraform untaint aws_instance.example</code></pre></div></div><p><strong>terraform init</strong>: Este comando é usado para inicializar um novo diretório de configuração do Terraform. Ele baixa os provedores e módulos especificados no arquivo de configuração.</p><p><strong>terraform plan</strong>: Este comando cria um plano de execução que mostra o que o Terraform fará antes de efetivamente fazer qualquer alteração na infraestrutura. É uma boa prática executar isso antes de aplicar qualquer configuração.</p><p><strong>terraform apply</strong>: Este comando é usado para aplicar as alterações definidas em seu código do Terraform à infraestrutura. Ele criará, atualizará ou destruirá recursos conforme necessário.</p><p><strong>terraform destroy</strong>: Este comando é usado para destruir todos os recursos definidos em seu código do Terraform. Use com cuidado, pois isso pode resultar na perda de recursos.</p><p><strong>terraform validate</strong>: Este comando verifica a sintaxe do arquivo de configuração do Terraform e verifica se há erros.</p><p><strong>terraform fmt</strong>: Este comando formata seu código Terraform de acordo com as convenções de estilo do Terraform.</p><p><strong>terraform workspace</strong>: Este comando permite que você gerencie workspaces (espaços de trabalho) no Terraform, o que é útil para lidar com configurações diferentes em um único diretório.</p><p><strong>terraform import</strong>: Este comando é usado para importar um recurso existente em um provedor para o estado do Terraform. Isso é útil quando você deseja começar a gerenciar recursos que já existem.</p><p><strong>terraform state</strong>: Este comando permite manipular diretamente o estado do Terraform, que é útil em situações avançadas de gerenciamento de estado.</p><p><strong>terraform output</strong>: Este comando exibe os valores de saída definidos em seu arquivo de configuração do Terraform.</p><p><strong>terraform graph</strong>: Este comando gera uma representação visual do gráfico de recursos do Terraform, mostrando as dependências entre recursos.</p><p><strong>terraform taint</strong>: Este comando marca um recurso como “sujo” no estado, o que faz com que o Terraform o reconstrua na próxima vez que você executar o terraform apply.</p><p><strong>terraform untaint</strong>: Este comando remove a marcação de “sujeira” de um recurso no estado.</p>",
            "url": "/2023/09/02/terraform.html",
            
            
            
            
            
            "date_published": "2023-09-02T00:00:00+00:00",
            "date_modified": "2023-09-02T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/08/25/generics.html",
            "title": "development/golang/generics",
            "summary": "Entendendo Generics no Go",
            "content_text": "GenericsResumindo Generics.. normalmente criamos uma variável de um tipo específico e em algum momento colocamos um valor dentro dela respeitando esse tipo. Quando utilizamos generics fazemos o inverso, onde recebemos um valor sem ter um tipo pré-definido e em algum momento podemos especifica-lo(normalmente no momento de uso).Generics tem tudo haver com Constraints e Interfaces. Antes da versão 1.18(alguma coisa) para fazer o tipo Any era utilizado interface vazia, representado por interface{}.func Print(a ...interface{}) (n int, err error)Para descobrir o tipo, era utilizado o switch:package mainimport \"fmt\"func something(x interface{}) {\tswitch idk := x.(type) {\tcase int:\t\tfmt.Println(\"eh int:\", idk)\tcase string:\t\tfmt.Println(\"eh string:\", idk)\tdefault:\t\tfmt.Println(\"eh invalido\", idk)\t}}func main() {\tsomething(\"brazil\")\tsomething(1337)\tsomething(12.123)}Modelo abaixo está utilizando Genericspackage mainimport \"fmt\"type UserTest1 struct {\tname string\tage  int16}type UserTest2 struct {\tdocumentNumber string\taddress        string}func userTest[T UserTest1 | UserTest2](user T) {\tfmt.Println(user)\tfmt.Println(user)}func identity[T any](arg T) T {\treturn arg}func anyType(arg any) any {\treturn arg}func main() {\tu1 := UserTest1{\t\tname: \"Mario\",\t\tage:  29,\t}\tuserTest(u1)\t// num := 10\t// userTest(num)\tout1 := identity[string](\"test\")\tfmt.Println(out1)\tout2 := identity[int16](1234)\tfmt.Println(out2)\tout3 := anyType(1234)\tfmt.Println(out3)\tout4 := anyType(\"test\")\tfmt.Println(out4)}E para fazer comparações entre variáveis do tipo Any ?? Abaixo está um jeito feio de se fazerfunc main() {\tvar value1 interface{} = 42\tvar value2 interface{} = \"42\"\tif reflect.TypeOf(value1).Kind() == reflect.Int &amp;&amp; reflect.TypeOf(value2).Kind() == reflect.String {\t\tconvertedValue1 := value1.(int)\t\tconvertedValue2 := value2.(string)\t\tif convertedValue1 == 42 &amp;&amp; convertedValue2 == \"42\" {\t\t\tfmt.Println(\"As variáveis são iguais.\")\t\t} else {\t\t\tfmt.Println(\"As variáveis são diferentes.\")\t\t}\t} else {\t\tfmt.Println(\"Tipos incompatíveis para comparação.\")\t}}Abaixo está uma implementação mais elegante. Ele utiliza o comparable.package mainimport \"fmt\"func anyTest[T comparable](arg1 T, arg2 T) {\tfmt.Println(arg1 == arg2)}func main() {\tanyTest(1, 2)}Comparação com &lt; e &gt;. Também possível comparar tipo primitivo de tipo definido(usando ~)package mainimport \"fmt\"func test[T NumberTests](arg1 T, arg2 T) {\tfmt.Println(arg1 &gt;= arg2)}func testInt[T ~int64](arg1 T, arg2 T) {\tfmt.Println(arg1 &gt;= arg2)}type MyNum int64type NumberTests interface {\tint64 | float64 | float32}type NumberIntTests interface {\tint64}func main() {\ttest(3.2, 2.0)\tvar iNum MyNum = 44\ttestInt(iNum, 33)}É possível utilizar na declaração de um tipo também. Onde não é mais necessário definir o tipo no momento da criação. Ex:package mainimport \"fmt\"type User[T any, B any] struct {\tname T\tage  B}func main() {\tuserTest := User[string, int64]{\t\tname: \"joao\",\t\tage:  20,\t}\tfmt.Println(userTest)}Referências  https://gobyexample.com/generics  https://www.youtube.com/watch?v=nD_6L2PBfaE  https://www.youtube.com/watch?v=XcDnQvVCW78",
            "content_html": "<h2 id=\"generics\">Generics</h2><p>Resumindo Generics.. normalmente criamos uma variável de um tipo específico e em algum momento colocamos um valor dentro dela respeitando esse tipo. Quando utilizamos generics fazemos o inverso, onde recebemos um valor sem ter um tipo pré-definido e em algum momento podemos especifica-lo(normalmente no momento de uso).</p><p><strong>Generics</strong> tem tudo haver com <strong>Constraints e Interfaces</strong>. Antes da versão 1.18(alguma coisa) para fazer o tipo Any era utilizado interface vazia, representado por <em>interface{}</em>.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">func</span> <span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">...</span><span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"kt\">error</span><span class=\"p\">)</span></code></pre></div></div><p>Para descobrir o tipo, era utilizado o <strong>switch</strong>:</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">something</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"k\">interface</span><span class=\"p\">{})</span> <span class=\"p\">{</span>\t<span class=\"k\">switch</span> <span class=\"n\">idk</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"k\">type</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">case</span> <span class=\"kt\">int</span><span class=\"o\">:</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"eh int:\"</span><span class=\"p\">,</span> <span class=\"n\">idk</span><span class=\"p\">)</span>\t<span class=\"k\">case</span> <span class=\"kt\">string</span><span class=\"o\">:</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"eh string:\"</span><span class=\"p\">,</span> <span class=\"n\">idk</span><span class=\"p\">)</span>\t<span class=\"k\">default</span><span class=\"o\">:</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"eh invalido\"</span><span class=\"p\">,</span> <span class=\"n\">idk</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">something</span><span class=\"p\">(</span><span class=\"s\">\"brazil\"</span><span class=\"p\">)</span>\t<span class=\"n\">something</span><span class=\"p\">(</span><span class=\"m\">1337</span><span class=\"p\">)</span>\t<span class=\"n\">something</span><span class=\"p\">(</span><span class=\"m\">12.123</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>Modelo abaixo está utilizando Generics</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">type</span> <span class=\"n\">UserTest1</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">name</span> <span class=\"kt\">string</span>\t<span class=\"n\">age</span>  <span class=\"kt\">int16</span><span class=\"p\">}</span><span class=\"k\">type</span> <span class=\"n\">UserTest2</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">documentNumber</span> <span class=\"kt\">string</span>\t<span class=\"n\">address</span>        <span class=\"kt\">string</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">userTest</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">UserTest1</span> <span class=\"o\">|</span> <span class=\"n\">UserTest2</span><span class=\"p\">](</span><span class=\"n\">user</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">identity</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">any</span><span class=\"p\">](</span><span class=\"n\">arg</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"n\">T</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">arg</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">anyType</span><span class=\"p\">(</span><span class=\"n\">arg</span> <span class=\"n\">any</span><span class=\"p\">)</span> <span class=\"n\">any</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">arg</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">u1</span> <span class=\"o\">:=</span> <span class=\"n\">UserTest1</span><span class=\"p\">{</span>\t\t<span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"s\">\"Mario\"</span><span class=\"p\">,</span>\t\t<span class=\"n\">age</span><span class=\"o\">:</span>  <span class=\"m\">29</span><span class=\"p\">,</span>\t<span class=\"p\">}</span>\t<span class=\"n\">userTest</span><span class=\"p\">(</span><span class=\"n\">u1</span><span class=\"p\">)</span>\t<span class=\"c\">// num := 10</span>\t<span class=\"c\">// userTest(num)</span>\t<span class=\"n\">out1</span> <span class=\"o\">:=</span> <span class=\"n\">identity</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">](</span><span class=\"s\">\"test\"</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out1</span><span class=\"p\">)</span>\t<span class=\"n\">out2</span> <span class=\"o\">:=</span> <span class=\"n\">identity</span><span class=\"p\">[</span><span class=\"kt\">int16</span><span class=\"p\">](</span><span class=\"m\">1234</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out2</span><span class=\"p\">)</span>\t<span class=\"n\">out3</span> <span class=\"o\">:=</span> <span class=\"n\">anyType</span><span class=\"p\">(</span><span class=\"m\">1234</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out3</span><span class=\"p\">)</span>\t<span class=\"n\">out4</span> <span class=\"o\">:=</span> <span class=\"n\">anyType</span><span class=\"p\">(</span><span class=\"s\">\"test\"</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">out4</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>E para fazer comparações entre variáveis do tipo Any ?? Abaixo está um jeito feio de se fazer</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">value1</span> <span class=\"k\">interface</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"m\">42</span>\t<span class=\"k\">var</span> <span class=\"n\">value2</span> <span class=\"k\">interface</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"s\">\"42\"</span>\t<span class=\"k\">if</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">TypeOf</span><span class=\"p\">(</span><span class=\"n\">value1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Kind</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">Int</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">TypeOf</span><span class=\"p\">(</span><span class=\"n\">value2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Kind</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">reflect</span><span class=\"o\">.</span><span class=\"n\">String</span> <span class=\"p\">{</span>\t\t<span class=\"n\">convertedValue1</span> <span class=\"o\">:=</span> <span class=\"n\">value1</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span>\t\t<span class=\"n\">convertedValue2</span> <span class=\"o\">:=</span> <span class=\"n\">value2</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">)</span>\t\t<span class=\"k\">if</span> <span class=\"n\">convertedValue1</span> <span class=\"o\">==</span> <span class=\"m\">42</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">convertedValue2</span> <span class=\"o\">==</span> <span class=\"s\">\"42\"</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"As variáveis são iguais.\"</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"As variáveis são diferentes.\"</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span>\t<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\t\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Tipos incompatíveis para comparação.\"</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Abaixo está uma implementação mais elegante. Ele utiliza o <strong>comparable</strong>.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">anyTest</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">comparable</span><span class=\"p\">](</span><span class=\"n\">arg1</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">arg2</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">arg1</span> <span class=\"o\">==</span> <span class=\"n\">arg2</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">anyTest</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>Comparação com &lt; e &gt;. Também possível comparar tipo primitivo de tipo definido(usando <strong>~</strong>)</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">NumberTests</span><span class=\"p\">](</span><span class=\"n\">arg1</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">arg2</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">arg1</span> <span class=\"o\">&gt;=</span> <span class=\"n\">arg2</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">testInt</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"err\">~</span><span class=\"kt\">int64</span><span class=\"p\">](</span><span class=\"n\">arg1</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">arg2</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">arg1</span> <span class=\"o\">&gt;=</span> <span class=\"n\">arg2</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">type</span> <span class=\"n\">MyNum</span> <span class=\"kt\">int64</span><span class=\"k\">type</span> <span class=\"n\">NumberTests</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"kt\">int64</span> <span class=\"o\">|</span> <span class=\"kt\">float64</span> <span class=\"o\">|</span> <span class=\"kt\">float32</span><span class=\"p\">}</span><span class=\"k\">type</span> <span class=\"n\">NumberIntTests</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"kt\">int64</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">test</span><span class=\"p\">(</span><span class=\"m\">3.2</span><span class=\"p\">,</span> <span class=\"m\">2.0</span><span class=\"p\">)</span>\t<span class=\"k\">var</span> <span class=\"n\">iNum</span> <span class=\"n\">MyNum</span> <span class=\"o\">=</span> <span class=\"m\">44</span>\t<span class=\"n\">testInt</span><span class=\"p\">(</span><span class=\"n\">iNum</span><span class=\"p\">,</span> <span class=\"m\">33</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><p>É possível utilizar na declaração de um tipo também. Onde não é mais necessário definir o tipo no momento da criação. Ex:</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">type</span> <span class=\"n\">User</span><span class=\"p\">[</span><span class=\"n\">T</span> <span class=\"n\">any</span><span class=\"p\">,</span> <span class=\"n\">B</span> <span class=\"n\">any</span><span class=\"p\">]</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">name</span> <span class=\"n\">T</span>\t<span class=\"n\">age</span>  <span class=\"n\">B</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"n\">userTest</span> <span class=\"o\">:=</span> <span class=\"n\">User</span><span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"kt\">int64</span><span class=\"p\">]{</span>\t\t<span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"s\">\"joao\"</span><span class=\"p\">,</span>\t\t<span class=\"n\">age</span><span class=\"o\">:</span>  <span class=\"m\">20</span><span class=\"p\">,</span>\t<span class=\"p\">}</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">userTest</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><h2 id=\"referências\">Referências</h2><ul>  <li>https://gobyexample.com/generics</li>  <li>https://www.youtube.com/watch?v=nD_6L2PBfaE</li>  <li>https://www.youtube.com/watch?v=XcDnQvVCW78</li></ul>",
            "url": "/2023/08/25/generics.html",
            
            
            
            "tags": ["go","generics"],
            
            "date_published": "2023-08-25T00:00:00+00:00",
            "date_modified": "2023-08-25T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/08/12/docker.html",
            "title": "cheatsheet/docker",
            "summary": "Cheatsheet docker",
            "content_text": "Comandos basicos para containersdocker run -d --name meu-container nginx:latest # criacao container em backgrounddocker run --name meu-container-nginx -p 80:8080 nginx:latest # nome deve ser unicodocker container ls # listar containers em execucaodocker container ls -a # mostra os containers parados e em execucaodocker stop meu-container # para um containerdocker start meu-container # iniciar um container paradodocker logs meu-container # ver os logs do containerdocker exec -it meu-container bash # para sair usar CTRL+P CTRL+Qdocker rm meu-containerdocker exec -it -w /tmp meu-container-nginx touch xD # Executa o comando setando um Workdir(/tmp)docker rename meu-container-nginx meu-container-sagradodocker run -d -v /tmp:/tmp nginx:latest # mapeamento de volumesComandos para copiar arquivos entre host e containerdocker cp /tmp/origin meu-container-nginx:/tmp # copiar arquivo do Host para o Containerecho \"by: apolzek\" &gt;&gt; /tmp/whoami ; docker cp /tmp/whoami meu-container-nginx:/tmp; docker exec -it meu-container-nginx sh -c \"cat /tmp/whoami\"docker cp meu-container-nginx:/tmp/whoami # Copiar do Container para HostComandos para visualisar e limitar recursosdocker statsdocker run --cpus=2 --memory=1g nome-da-imagemdocker run -d --cpus=2 --memory=6MB nginx:latestdocker run -d --name nginx-do-bem --cpus=2 --memory=6MB nginx:latest # cria container com limite de CPU e RAMdocker update --cpus 2 --memory 1024m --memory-swap 1024m nginx-do-bem # altera limitesdocker update --cpus=\".5\" nginx-do-bem # altera apenas liomite de CPURemover todas as imagens, containers ou volumesdocker system prune -a --volumes # limpeza dos containers e volumes associadosdocker rmi $(docker images -q) -f # remove todas as imagensdocker rm -f $(docker ps -aq) # remove todos os containersdocker container rm -f $(docker container ls -qa); for i in $(docker volume ls | awk '{print $2}' | sed 1d); do docker volume rm -f $i; doneComandos basicos para builddocker build -t minha-imagem:latest /caminho/do/Dockerfiledocker rmi minha-imagem:latest # Remove a imagem criadadocker build -f Dockerfile.debug . # Especifica o arquivo de DockerfileComandos basicos para imagensdocker image builddocker image historydocker image importdocker image inspectdocker image loaddocker image lsdocker image prunedocker image pulldocker image pushdocker image rmdocker image savedocker image tagdocker search debian # procurar uma imagem do registrydocker search --filter=stars=3 --no-trunc busyboxdocker search --filter is-official=true --filter stars=3 busyboxConverter imagem para arquivo e depois importar novamentedocker save -o nome_da_imagem.tar nome_da_imagemdocker load -i nome_da_imagem.tarPrincipais arquivos docker dentro da maquina/usr/bin/docker /etc/docker /usr/libexec/docker /usr/share/man/man1/docker.1.gz/etc/docker/daemon.json{  \"log-level\": \"info\",  \"storage-driver\": \"overlay2\",  \"data-root\": \"/var/lib/docker\",  \"exec-opts\": [\"native.cgroupdriver=systemd\"]}/lib/systemd/system/docker.service[Unit]Description=Docker Application Container EngineDocumentation=https://docs.docker.comAfter=network-online.target firewalld.service containerd.serviceWants=network-online.target[Service]Type=notifyExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sockExecReload=/bin/kill -s HUP $MAINPIDTimeoutSec=0RestartSec=2Restart=always[Install]WantedBy=multi-user.targettshootsystemctl status docker.servicejournalctl -u docker.servicejournalctl -u docker.service | lessdocker port container-name # test portsdocker inspect container-name # inspect containerdocker inspect --format='' container-name # get ipdocker inspect --format='' container-name # get image",
            "content_html": "<h2 id=\"comandos-basicos-para-containers\">Comandos basicos para containers</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker run -d --name meu-container nginx:latest # criacao container em backgrounddocker run --name meu-container-nginx -p 80:8080 nginx:latest # nome deve ser unicodocker container ls # listar containers em execucaodocker container ls -a # mostra os containers parados e em execucaodocker stop meu-container # para um containerdocker start meu-container # iniciar um container paradodocker logs meu-container # ver os logs do containerdocker exec -it meu-container bash # para sair usar CTRL+P CTRL+Qdocker rm meu-containerdocker exec -it -w /tmp meu-container-nginx touch xD # Executa o comando setando um Workdir(/tmp)docker rename meu-container-nginx meu-container-sagradodocker run -d -v /tmp:/tmp nginx:latest # mapeamento de volumes</code></pre></div></div><h2 id=\"comandos-para-copiar-arquivos-entre-host-e-container\">Comandos para copiar arquivos entre host e container</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker cp /tmp/origin meu-container-nginx:/tmp # copiar arquivo do Host para o Containerecho \"by: apolzek\" &gt;&gt; /tmp/whoami ; docker cp /tmp/whoami meu-container-nginx:/tmp; docker exec -it meu-container-nginx sh -c \"cat /tmp/whoami\"docker cp meu-container-nginx:/tmp/whoami # Copiar do Container para Host</code></pre></div></div><h2 id=\"comandos-para-visualisar-e-limitar-recursos\">Comandos para visualisar e limitar recursos</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker statsdocker run --cpus=2 --memory=1g nome-da-imagemdocker run -d --cpus=2 --memory=6MB nginx:latestdocker run -d --name nginx-do-bem --cpus=2 --memory=6MB nginx:latest # cria container com limite de CPU e RAMdocker update --cpus 2 --memory 1024m --memory-swap 1024m nginx-do-bem # altera limitesdocker update --cpus=\".5\" nginx-do-bem # altera apenas liomite de CPU</code></pre></div></div><h2 id=\"remover-todas-as-imagens-containers-ou-volumes\">Remover todas as imagens, containers ou volumes</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker system prune -a --volumes # limpeza dos containers e volumes associadosdocker rmi $(docker images -q) -f # remove todas as imagensdocker rm -f $(docker ps -aq) # remove todos os containersdocker container rm -f $(docker container ls -qa); for i in $(docker volume ls | awk '{print $2}' | sed 1d); do docker volume rm -f $i; done</code></pre></div></div><h2 id=\"comandos-basicos-para-build\">Comandos basicos para build</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker build -t minha-imagem:latest /caminho/do/Dockerfiledocker rmi minha-imagem:latest # Remove a imagem criadadocker build -f Dockerfile.debug . # Especifica o arquivo de Dockerfile</code></pre></div></div><h2 id=\"comandos-basicos-para-imagens\">Comandos basicos para imagens</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker image builddocker image historydocker image importdocker image inspectdocker image loaddocker image lsdocker image prunedocker image pulldocker image pushdocker image rmdocker image savedocker image tagdocker search debian # procurar uma imagem do registrydocker search --filter=stars=3 --no-trunc busyboxdocker search --filter is-official=true --filter stars=3 busybox</code></pre></div></div><h2 id=\"converter-imagem-para-arquivo-e-depois-importar-novamente\">Converter imagem para arquivo e depois importar novamente</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>docker save -o nome_da_imagem.tar nome_da_imagemdocker load -i nome_da_imagem.tar</code></pre></div></div><h2 id=\"principais-arquivos-docker-dentro-da-maquina\">Principais arquivos docker dentro da maquina</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/usr/bin/docker /etc/docker /usr/libexec/docker /usr/share/man/man1/docker.1.gz</code></pre></div></div><p><em>/etc/docker/daemon.json</em></p><div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">  </span><span class=\"nl\">\"log-level\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"info\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"storage-driver\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"overlay2\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"data-root\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"/var/lib/docker\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"exec-opts\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"native.cgroupdriver=systemd\"</span><span class=\"p\">]</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span></code></pre></div></div><p><em>/lib/systemd/system/docker.service</em></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[Unit]Description=Docker Application Container EngineDocumentation=https://docs.docker.comAfter=network-online.target firewalld.service containerd.serviceWants=network-online.target[Service]Type=notifyExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sockExecReload=/bin/kill -s HUP $MAINPIDTimeoutSec=0RestartSec=2Restart=always[Install]WantedBy=multi-user.target</code></pre></div></div><h2 id=\"tshoot\">tshoot</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>systemctl status docker.servicejournalctl -u docker.servicejournalctl -u docker.service | lessdocker port container-name # test portsdocker inspect container-name # inspect containerdocker inspect --format='' container-name # get ipdocker inspect --format='' container-name # get image</code></pre></div></div>",
            "url": "/2023/08/12/docker.html",
            
            
            
            
            
            "date_published": "2023-08-12T00:00:00+00:00",
            "date_modified": "2023-08-12T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/07/28/deletar-historico-commits-github.html",
            "title": "tools/git/deletar-historico-commits-github",
            "summary": "Deletar todo histórico de commits no Github",
            "content_text": "Deleting the .git folder may cause problems in your git repository. If you want to delete all your commit history but keep the code in its current state, it is very safe to do it as in the following:1 - Checkoutgit checkout --orphan latest_branch2 - Add all the filesgit add -A3 - Commit the changesgit commit -am \"commit message\"4 - Delete the branchgit branch -D main5 - Rename the current branch to maingit branch -m main6 - Finally, force update your repositorygit push -f origin mainPS: this will not keep your old commit history aroundReference",
            "content_html": "<p>Deleting the .git folder may cause problems in your git repository. If you want to delete all your commit history but keep the code in its current state, it is very safe to do it as in the following:</p><p>1 - Checkout</p><p><code class=\"language-plaintext highlighter-rouge\">git checkout --orphan latest_branch</code></p><p>2 - Add all the files</p><p><code class=\"language-plaintext highlighter-rouge\">git add -A</code></p><p>3 - Commit the changes</p><p><code class=\"language-plaintext highlighter-rouge\">git commit -am \"commit message\"</code></p><p>4 - Delete the branch</p><p><code class=\"language-plaintext highlighter-rouge\">git branch -D main</code></p><p>5 - Rename the current branch to main</p><p><code class=\"language-plaintext highlighter-rouge\">git branch -m main</code></p><p>6 - Finally, force update your repository</p><p><code class=\"language-plaintext highlighter-rouge\">git push -f origin main</code></p><p><em>PS: this will not keep your old commit history around</em></p><p><a href=\"https://stackoverflow.com/questions/13716658/how-to-delete-all-commit-history-in-github\">Reference</a></p>",
            "url": "/2023/07/28/deletar-historico-commits-github.html",
            
            
            
            "tags": ["git","history","github"],
            
            "date_published": "2023-07-28T00:00:00+00:00",
            "date_modified": "2023-07-28T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2023/07/27/vim.html",
            "title": "cheatsheet/vim",
            "summary": "Cheatsheet vim",
            "content_text": "            Comando      Descrição                  gg      Ir para o inicio do arquivo              G      Ir para o fim do arquivo              vim file.txt      Criar ou abrir um arquivo(caso exista)              i      Modo de inserção              Insert      Modo de inserção              ESQ      Sair do modo inserção              a      Modo inserção um caractere a frente              I      Modo inserção no inicio da linha              A      Modo inserção no final da linha              o      Modo inserção na próxima linha              O      Modo inserção na linha acima              S      Apagar linha completa e entrar no modo inserção              u      Desfaz ultima alteração(igual crtl + z)              crtl + r      Refaz ultima alteração              :w      Salvar o arquivo              :wq      Salvar e sair do arquivo              :q!      Sair sem salvar              :x      Salvar e sair do arquivo              ZZ      Salvar e sair do arquivo              yy      Copiar a linha toda              p      Colar a linha copiada              y5y      Copiar 5 linhas              dd      Recortar a linha              d3d      Recortar 3 linhas              ESQ + v      Modo visual horizontal              ESQ + V      Modo visual vertical              y + w      Copia uma palavra              y + 3 + w      Copia 3 palavras a frente              x      delete              X      backspace              :w file-new.txt      Salvar arquivo com outro nome(salvar como)              :split another-file.txt      Divide a tela em duas              crtl + w + w      Alternar entre as divisões de tela              :r /etc/hosts      Copiar conteúdo de hosts para arquivo atual              /linux      Procurar a palavra “linux” dentro do arquivo              n      Procura próxima ocorrência da palavra              ?  linux      Buscar palavra “linux” de baixo pra cima              :%s/windows/linux      Troca todas as ocorrências de windows por linux              :%s/windows/linux/g      Troca todas as ocorrências de windows por linux(mais de uma por linha)              e! /etc/hosts      Mudar para outro arquivo descartando alterações atuais              ESQ + :syntax on      Habilita o Highlight(arquivo deve ter extenção)              ESQ + :set nu      Habilitar a numeração das linhas              ESQ + :set nonu      Desabilitar a numeração das linhas              :ab google google.com.br      Criar uma abreviação              :set ai      Auto identação              :set noai      Desabilitar auto identação              :set visualbell      Trocar notificação de som para modo visual              :set ic      Buscar no modo ignore case sensitive              :set bg=light      Background claro              :set tabstop=4      Tamanho do tab em 4 espaços              :set showmatch      Mostrar fechamento de parenteses              :.,$!sort      Ordenação alfabética              :.,$!sort | pr -2t      Ordenação alfabética em duas colunas      ",
            "content_html": "<table>  <thead>    <tr>      <th style=\"text-align: center\">Comando</th>      <th style=\"text-align: center\">Descrição</th>    </tr>  </thead>  <tbody>    <tr>      <td style=\"text-align: center\">gg</td>      <td style=\"text-align: center\">Ir para o inicio do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">G</td>      <td style=\"text-align: center\">Ir para o fim do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">vim file.txt</td>      <td style=\"text-align: center\">Criar ou abrir um arquivo(caso exista)</td>    </tr>    <tr>      <td style=\"text-align: center\">i</td>      <td style=\"text-align: center\">Modo de inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">Insert</td>      <td style=\"text-align: center\">Modo de inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ</td>      <td style=\"text-align: center\">Sair do modo inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">a</td>      <td style=\"text-align: center\">Modo inserção um caractere a frente</td>    </tr>    <tr>      <td style=\"text-align: center\">I</td>      <td style=\"text-align: center\">Modo inserção no inicio da linha</td>    </tr>    <tr>      <td style=\"text-align: center\">A</td>      <td style=\"text-align: center\">Modo inserção no final da linha</td>    </tr>    <tr>      <td style=\"text-align: center\">o</td>      <td style=\"text-align: center\">Modo inserção na próxima linha</td>    </tr>    <tr>      <td style=\"text-align: center\">O</td>      <td style=\"text-align: center\">Modo inserção na linha acima</td>    </tr>    <tr>      <td style=\"text-align: center\">S</td>      <td style=\"text-align: center\">Apagar linha completa e entrar no modo inserção</td>    </tr>    <tr>      <td style=\"text-align: center\">u</td>      <td style=\"text-align: center\">Desfaz ultima alteração(igual crtl + z)</td>    </tr>    <tr>      <td style=\"text-align: center\">crtl + r</td>      <td style=\"text-align: center\">Refaz ultima alteração</td>    </tr>    <tr>      <td style=\"text-align: center\">:w</td>      <td style=\"text-align: center\">Salvar o arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">:wq</td>      <td style=\"text-align: center\">Salvar e sair do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">:q!</td>      <td style=\"text-align: center\">Sair sem salvar</td>    </tr>    <tr>      <td style=\"text-align: center\">:x</td>      <td style=\"text-align: center\">Salvar e sair do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">ZZ</td>      <td style=\"text-align: center\">Salvar e sair do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">yy</td>      <td style=\"text-align: center\">Copiar a linha toda</td>    </tr>    <tr>      <td style=\"text-align: center\">p</td>      <td style=\"text-align: center\">Colar a linha copiada</td>    </tr>    <tr>      <td style=\"text-align: center\">y5y</td>      <td style=\"text-align: center\">Copiar 5 linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">dd</td>      <td style=\"text-align: center\">Recortar a linha</td>    </tr>    <tr>      <td style=\"text-align: center\">d3d</td>      <td style=\"text-align: center\">Recortar 3 linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + v</td>      <td style=\"text-align: center\">Modo visual horizontal</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + V</td>      <td style=\"text-align: center\">Modo visual vertical</td>    </tr>    <tr>      <td style=\"text-align: center\">y + w</td>      <td style=\"text-align: center\">Copia uma palavra</td>    </tr>    <tr>      <td style=\"text-align: center\">y + 3 + w</td>      <td style=\"text-align: center\">Copia 3 palavras a frente</td>    </tr>    <tr>      <td style=\"text-align: center\">x</td>      <td style=\"text-align: center\">delete</td>    </tr>    <tr>      <td style=\"text-align: center\">X</td>      <td style=\"text-align: center\">backspace</td>    </tr>    <tr>      <td style=\"text-align: center\">:w file-new.txt</td>      <td style=\"text-align: center\">Salvar arquivo com outro nome(salvar como)</td>    </tr>    <tr>      <td style=\"text-align: center\">:split another-file.txt</td>      <td style=\"text-align: center\">Divide a tela em duas</td>    </tr>    <tr>      <td style=\"text-align: center\">crtl + w + w</td>      <td style=\"text-align: center\">Alternar entre as divisões de tela</td>    </tr>    <tr>      <td style=\"text-align: center\">:r /etc/hosts</td>      <td style=\"text-align: center\">Copiar conteúdo de hosts para arquivo atual</td>    </tr>    <tr>      <td style=\"text-align: center\">/linux</td>      <td style=\"text-align: center\">Procurar a palavra “linux” dentro do arquivo</td>    </tr>    <tr>      <td style=\"text-align: center\">n</td>      <td style=\"text-align: center\">Procura próxima ocorrência da palavra</td>    </tr>    <tr>      <td style=\"text-align: center\">?  linux</td>      <td style=\"text-align: center\">Buscar palavra “linux” de baixo pra cima</td>    </tr>    <tr>      <td style=\"text-align: center\">:%s/windows/linux</td>      <td style=\"text-align: center\">Troca todas as ocorrências de windows por linux</td>    </tr>    <tr>      <td style=\"text-align: center\">:%s/windows/linux/g</td>      <td style=\"text-align: center\">Troca todas as ocorrências de windows por linux(mais de uma por linha)</td>    </tr>    <tr>      <td style=\"text-align: center\">e! /etc/hosts</td>      <td style=\"text-align: center\">Mudar para outro arquivo descartando alterações atuais</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + :syntax on</td>      <td style=\"text-align: center\">Habilita o Highlight(arquivo deve ter extenção)</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + :set nu</td>      <td style=\"text-align: center\">Habilitar a numeração das linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">ESQ + :set nonu</td>      <td style=\"text-align: center\">Desabilitar a numeração das linhas</td>    </tr>    <tr>      <td style=\"text-align: center\">:ab google google.com.br</td>      <td style=\"text-align: center\">Criar uma abreviação</td>    </tr>    <tr>      <td style=\"text-align: center\">:set ai</td>      <td style=\"text-align: center\">Auto identação</td>    </tr>    <tr>      <td style=\"text-align: center\">:set noai</td>      <td style=\"text-align: center\">Desabilitar auto identação</td>    </tr>    <tr>      <td style=\"text-align: center\">:set visualbell</td>      <td style=\"text-align: center\">Trocar notificação de som para modo visual</td>    </tr>    <tr>      <td style=\"text-align: center\">:set ic</td>      <td style=\"text-align: center\">Buscar no modo ignore case sensitive</td>    </tr>    <tr>      <td style=\"text-align: center\">:set bg=light</td>      <td style=\"text-align: center\">Background claro</td>    </tr>    <tr>      <td style=\"text-align: center\">:set tabstop=4</td>      <td style=\"text-align: center\">Tamanho do tab em 4 espaços</td>    </tr>    <tr>      <td style=\"text-align: center\">:set showmatch</td>      <td style=\"text-align: center\">Mostrar fechamento de parenteses</td>    </tr>    <tr>      <td style=\"text-align: center\">:.,$!sort</td>      <td style=\"text-align: center\">Ordenação alfabética</td>    </tr>    <tr>      <td style=\"text-align: center\">:.,$!sort | pr -2t</td>      <td style=\"text-align: center\">Ordenação alfabética em duas colunas</td>    </tr>  </tbody></table>",
            "url": "/2023/07/27/vim.html",
            
            
            
            "tags": ["vim","vi","editor","1991"],
            
            "date_published": "2023-07-27T00:00:00+00:00",
            "date_modified": "2023-07-27T00:00:00+00:00",
            
                "author": 
                ""
                
            
        }
    
    ]
}