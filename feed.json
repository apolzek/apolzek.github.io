{
    "version": "https://jsonfeed.org/version/1",
    "title": "apolzek",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "description": "blog",
    "icon": "/apple-touch-icon.png",
    "favicon": "/favicon.ico",
    "expired": false,
    
"items": [
    
        {
            "id": "/2024/12/01/it-acronym.html",
            "title": "opinions/it-acronyms",
            "summary": "IT Acronyms",
            "content_text": "IT Acronyms“Por favor, note que neste artigo, evitarei fazer comparações entre os itens mencionados, concentrando-me em analisá-los individualmente.”SOLID:Sigla:S: Single Responsibility PrincipleO: Open/Closed PrincipleL: Liskov Substitution PrincipleI: Interface Segregation PrincipleD: Dependency Inversion PrincipleEstes são princípios de design de software que visam criar código mais fácil de entender, manter e estender.YAGNI:Sigla:Y: You Ain’t Gonna Need ItPrincípio que sugere que você não deve adicionar funcionalidades ou complexidades ao seu código até que realmente precise delas. Evita o excesso de engenharia.BDD:B: Behavior-Driven DevelopmentD: DevelopmentMetodologia de desenvolvimento que se concentra no comportamento esperado do software, envolvendo colaboração entre desenvolvedores, testadores e partes interessadas.OOD:Sigla:O: Object-Oriented DesignD: DevelopmentRefere-se ao processo de usar princípios de design orientado a objetos durante o desenvolvimento de software para criar sistemas mais flexíveis e reutilizáveis.ACID:Sigla:A: AtomicityC: ConsistencyI: IsolationD: DurabilityPrincípios de transação em banco de dados que garantem a integridade dos dados mesmo em face de falhas.ORM:Sigla:O: Object-Relational MappingTécnica de programação que converte dados entre tipos de sistemas incompatíveis em linguagens de programação orientadas a objetos.MVC:Sigla:M: ModelV: ViewC: ControllerPadrão de arquitetura de software que separa a lógica de apresentação dos dados de um aplicativo.KISS:TDD:",
            "content_html": "<h2 id=\"it-acronyms\">IT Acronyms</h2><p>“Por favor, note que neste artigo, evitarei fazer comparações entre os itens mencionados, concentrando-me em analisá-los individualmente.”</p><h4 id=\"solid\">SOLID:</h4><p><strong>Sigla</strong>:</p><p>S: Single Responsibility PrincipleO: Open/Closed PrincipleL: Liskov Substitution PrincipleI: Interface Segregation PrincipleD: Dependency Inversion Principle</p><p>Estes são princípios de design de software que visam criar código mais fácil de entender, manter e estender.</p><h4 id=\"yagni\">YAGNI:</h4><p><strong>Sigla</strong>:</p><p>Y: You Ain’t Gonna Need ItPrincípio que sugere que você não deve adicionar funcionalidades ou complexidades ao seu código até que realmente precise delas. Evita o excesso de engenharia.BDD:B: Behavior-Driven DevelopmentD: Development</p><p>Metodologia de desenvolvimento que se concentra no comportamento esperado do software, envolvendo colaboração entre desenvolvedores, testadores e partes interessadas.</p><h4 id=\"ood\">OOD:</h4><p><strong>Sigla</strong>:</p><p>O: Object-Oriented DesignD: Development</p><p>Refere-se ao processo de usar princípios de design orientado a objetos durante o desenvolvimento de software para criar sistemas mais flexíveis e reutilizáveis.</p><h4 id=\"acid\">ACID:</h4><p><strong>Sigla</strong>:</p><p>A: AtomicityC: ConsistencyI: IsolationD: Durability</p><p>Princípios de transação em banco de dados que garantem a integridade dos dados mesmo em face de falhas.</p><h4 id=\"orm\">ORM:</h4><p><strong>Sigla</strong>:</p><p>O: Object-Relational Mapping</p><p>Técnica de programação que converte dados entre tipos de sistemas incompatíveis em linguagens de programação orientadas a objetos.</p><h4 id=\"mvc\">MVC:</h4><p><strong>Sigla</strong>:</p><p>M: ModelV: ViewC: Controller</p><p>Padrão de arquitetura de software que separa a lógica de apresentação dos dados de um aplicativo.</p><h4 id=\"kiss\">KISS:</h4><h4 id=\"tdd\">TDD:</h4>",
            "url": "/2024/12/01/it-acronym.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/linux-processes.html",
            "title": "operating-system/processes",
            "summary": "Processes",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/linux-processes.html",
            
            
            
            "tags": ["linux","processes"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/linux-network.html",
            "title": "operating-system/linux-network",
            "summary": "Linux Network",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/linux-network.html",
            
            
            
            "tags": ["linux","processes"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/rust/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/basicao.html",
            "title": "development/ruby/basicao",
            "summary": "Overview",
            "content_text": "",
            "content_html": "",
            "url": "/2024/12/01/basicao.html",
            
            
            
            "tags": ["ruby","overview"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/python/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/lua/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/javascript/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/overview.html",
            "title": "development/java/overview",
            "summary": "Overview",
            "content_text": "Overview",
            "content_html": "<h2 id=\"overview\">Overview</h2>",
            "url": "/2024/12/01/overview.html",
            
            
            
            "tags": ["java","overview"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/slices.html",
            "title": "development/golang/slices",
            "summary": "Slices",
            "content_text": "Slicespackage mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(s)\tfmt.Println(s)}func modifySlice(i []int) {\ti[0] = 3\ti = append(i, 4)\ti[2] = 4}O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.package mainimport \"fmt\"func main() {\tvar s = []int{1, 2, 3}\tmodifySlice(&amp;s)\tfmt.Println(s)}func modifySlice(i *[]int) {\t// Corrija o slice usando o ponteiro\t(*i)[0] = 3\t*i = append(*i, 4)\t(*i)[2] = 4}",
            "content_html": "<h2 id=\"slices\">Slices</h2><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"n\">i</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div><p>O motivo é que o na verdade isso é um ponteiro, quando você deu append o ponteiro antigo foi descartado e um novo foi gerado contendo todo que havia no antigo i mais o novo elemento. Como s ainda aponta para o ponteiro antigo print vai imprimir o conteúdo antigo que teve apenas o primeiro elemento alterado.</p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">var</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">}</span>\t<span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">s</span><span class=\"p\">)</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">modifySlice</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span><span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"c\">// Corrija o slice usando o ponteiro</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">3</span>\t<span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">)</span>\t<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">)[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"m\">4</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/slices.html",
            
            
            
            "tags": ["go","slices"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/grpc.html",
            "title": "development/golang/grpc",
            "summary": "gRPC",
            "content_text": "gRPCgRPC, which stands for Google Remote Procedure Call, is a type of communication protocol. It utilizes HTTP/2 and can be viewed as an RPC framework.gRPC uses Protocol Buffers (protobuf), a data serialization format developed by Google. It serves as the message format for communication between clients and servers in gRPC. Protocol Buffers offer an efficient and compact way to represent structured data, which can be easily serialized and deserialized across various programming languages.gRPC Communication Types      Unary: More akin to REST. The client sends a single request, and the server responds with a single response.        Server Streaming: The client sends a request, and the server can send back multiple responses.        Client Streaming: The client sends multiple requests to the server, and the server responds only once (e.g., for uploading).        Bidirectional Streaming: Both client and server continuously send requests and responses back and forth.  Referenceshttps://github.com/grpc/grpc-go/tree/master/examples/route_guidehttps://google.github.io/proto-lens/installing-protoc.html",
            "content_html": "<h2 id=\"grpc\">gRPC</h2><p>gRPC, which stands for Google Remote Procedure Call, is a type of communication protocol. It utilizes HTTP/2 and can be viewed as an RPC framework.</p><p>gRPC uses Protocol Buffers (protobuf), a data serialization format developed by Google. It serves as the message format for communication between clients and servers in gRPC. Protocol Buffers offer an efficient and compact way to represent structured data, which can be easily serialized and deserialized across various programming languages.</p><h3 id=\"grpc-communication-types\">gRPC Communication Types</h3><ul>  <li>    <p><strong>Unary:</strong> More akin to REST. The client sends a single request, and the server responds with a single response.</p>  </li>  <li>    <p><strong>Server Streaming:</strong> The client sends a request, and the server can send back multiple responses.</p>  </li>  <li>    <p><strong>Client Streaming:</strong> The client sends multiple requests to the server, and the server responds only once (e.g., for uploading).</p>  </li>  <li>    <p><strong>Bidirectional Streaming:</strong> Both client and server continuously send requests and responses back and forth.</p>  </li></ul><h3 id=\"references\">References</h3><p>https://github.com/grpc/grpc-go/tree/master/examples/route_guidehttps://google.github.io/proto-lens/installing-protoc.html</p>",
            "url": "/2024/12/01/grpc.html",
            
            
            
            "tags": ["go","gRPC"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/frameworks.html",
            "title": "development/golang/frameworks",
            "summary": "Frameworks",
            "content_text": "FrameworksGoFrGinhttps://medium.com/@chaithra.shetty/introducing-gofr-the-go-framework-541252fabc42",
            "content_html": "<h2 id=\"frameworks\">Frameworks</h2><p>GoFrGin</p><p>https://medium.com/@chaithra.shetty/introducing-gofr-the-go-framework-541252fabc42</p>",
            "url": "/2024/12/01/frameworks.html",
            
            
            
            "tags": ["go","frameworks"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/observer.html",
            "title": "development/padroes-de-projeto/observer",
            "summary": "Observer",
            "content_text": "Observerpackage mainimport (\t\"fmt\")// Observer define a interface para os observadorestype Observer interface {\tUpdate(temp float64)}// Subject define a interface para o objeto observáveltype Subject interface {\tRegisterObserver(o Observer)\tRemoveObserver(o Observer)\tNotifyObservers()}// WeatherStation é o objeto observáveltype WeatherStation struct {\ttemperature float64\tobservers   []Observer}// NewWeatherStation cria uma nova instância de WeatherStationfunc NewWeatherStation() *WeatherStation {\treturn &amp;WeatherStation{}}// RegisterObserver registra um novo observadorfunc (w *WeatherStation) RegisterObserver(o Observer) {\tw.observers = append(w.observers, o)}// RemoveObserver remove um observador existentefunc (w *WeatherStation) RemoveObserver(o Observer) {\tfor i, observer := range w.observers {\t\tif observer == o {\t\t\tw.observers = append(w.observers[:i], w.observers[i+1:]...)\t\t\tbreak\t\t}\t}}// NotifyObservers notifica todos os observadores sobre a mudança na temperaturafunc (w *WeatherStation) NotifyObservers() {\tfor _, observer := range w.observers {\t\tobserver.Update(w.temperature)\t}}// SetTemperature define a temperatura e notifica os observadores sobre a mudançafunc (w *WeatherStation) SetTemperature(temp float64) {\tw.temperature = temp\tw.NotifyObservers()}// PhoneDisplay é um exemplo de observador que exibe a temperatura em um telefonetype PhoneDisplay struct{}// Update atualiza a temperatura exibida no telefonefunc (p *PhoneDisplay) Update(temp float64) {\tfmt.Printf(\"Temperatura atualizada no telefone: %.2f°C\\n\", temp)}// TabletDisplay é um exemplo de observador que exibe a temperatura em um tablettype TabletDisplay struct{}// Update atualiza a temperatura exibida no tabletfunc (t *TabletDisplay) Update(temp float64) {\tfmt.Printf(\"Temperatura atualizada no tablet: %.2f°C\\n\", temp)}func main() {\t// Criação de uma estação meteorológica e um visor de telefone\tweatherStation := NewWeatherStation()\tphoneDisplay := &amp;PhoneDisplay{}\ttabletDisplay := &amp;TabletDisplay{}\tweatherStation.RegisterObserver(phoneDisplay)\tweatherStation.RegisterObserver(tabletDisplay)\tweatherStation.SetTemperature(25.5)\tweatherStation.SetTemperature(30.0)\t// Remova o visor do telefone da lista de observadores\tweatherStation.RemoveObserver(phoneDisplay)\t// Agora, mesmo que a temperatura mude, o visor do telefone não será mais atualizado\tweatherStation.SetTemperature(28.0)}",
            "content_html": "<h2 id=\"observer\">Observer</h2><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>\t<span class=\"s\">\"fmt\"</span><span class=\"p\">)</span><span class=\"c\">// Observer define a interface para os observadores</span><span class=\"k\">type</span> <span class=\"n\">Observer</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// Subject define a interface para o objeto observável</span><span class=\"k\">type</span> <span class=\"n\">Subject</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span>\t<span class=\"n\">RemoveObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span>\t<span class=\"n\">NotifyObservers</span><span class=\"p\">()</span><span class=\"p\">}</span><span class=\"c\">// WeatherStation é o objeto observável</span><span class=\"k\">type</span> <span class=\"n\">WeatherStation</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">temperature</span> <span class=\"kt\">float64</span>\t<span class=\"n\">observers</span>   <span class=\"p\">[]</span><span class=\"n\">Observer</span><span class=\"p\">}</span><span class=\"c\">// NewWeatherStation cria uma nova instância de WeatherStation</span><span class=\"k\">func</span> <span class=\"n\">NewWeatherStation</span><span class=\"p\">()</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">WeatherStation</span><span class=\"p\">{}</span><span class=\"p\">}</span><span class=\"c\">// RegisterObserver registra um novo observador</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// RemoveObserver remove um observador existente</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">RemoveObserver</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"n\">Observer</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">observer</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"p\">{</span>\t\t<span class=\"k\">if</span> <span class=\"n\">observer</span> <span class=\"o\">==</span> <span class=\"n\">o</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"o\">=</span> <span class=\"nb\">append</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"p\">]</span><span class=\"o\">...</span><span class=\"p\">)</span>\t\t\t<span class=\"k\">break</span>\t\t<span class=\"p\">}</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"c\">// NotifyObservers notifica todos os observadores sobre a mudança na temperatura</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">NotifyObservers</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">observer</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">observers</span> <span class=\"p\">{</span>\t\t<span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">temperature</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"c\">// SetTemperature define a temperatura e notifica os observadores sobre a mudança</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">*</span><span class=\"n\">WeatherStation</span><span class=\"p\">)</span> <span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">temperature</span> <span class=\"o\">=</span> <span class=\"n\">temp</span>\t<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">NotifyObservers</span><span class=\"p\">()</span><span class=\"p\">}</span><span class=\"c\">// PhoneDisplay é um exemplo de observador que exibe a temperatura em um telefone</span><span class=\"k\">type</span> <span class=\"n\">PhoneDisplay</span> <span class=\"k\">struct</span><span class=\"p\">{}</span><span class=\"c\">// Update atualiza a temperatura exibida no telefone</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span><span class=\"n\">PhoneDisplay</span><span class=\"p\">)</span> <span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Temperatura atualizada no telefone: %.2f°C</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// TabletDisplay é um exemplo de observador que exibe a temperatura em um tablet</span><span class=\"k\">type</span> <span class=\"n\">TabletDisplay</span> <span class=\"k\">struct</span><span class=\"p\">{}</span><span class=\"c\">// Update atualiza a temperatura exibida no tablet</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span><span class=\"n\">TabletDisplay</span><span class=\"p\">)</span> <span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">temp</span> <span class=\"kt\">float64</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Temperatura atualizada no tablet: %.2f°C</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"c\">// Criação de uma estação meteorológica e um visor de telefone</span>\t<span class=\"n\">weatherStation</span> <span class=\"o\">:=</span> <span class=\"n\">NewWeatherStation</span><span class=\"p\">()</span>\t<span class=\"n\">phoneDisplay</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">PhoneDisplay</span><span class=\"p\">{}</span>\t<span class=\"n\">tabletDisplay</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">TabletDisplay</span><span class=\"p\">{}</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">phoneDisplay</span><span class=\"p\">)</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">RegisterObserver</span><span class=\"p\">(</span><span class=\"n\">tabletDisplay</span><span class=\"p\">)</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"m\">25.5</span><span class=\"p\">)</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"m\">30.0</span><span class=\"p\">)</span>\t<span class=\"c\">// Remova o visor do telefone da lista de observadores</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">RemoveObserver</span><span class=\"p\">(</span><span class=\"n\">phoneDisplay</span><span class=\"p\">)</span>\t<span class=\"c\">// Agora, mesmo que a temperatura mude, o visor do telefone não será mais atualizado</span>\t<span class=\"n\">weatherStation</span><span class=\"o\">.</span><span class=\"n\">SetTemperature</span><span class=\"p\">(</span><span class=\"m\">28.0</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/observer.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/factory.html",
            "title": "development/padroes-de-projeto/factory",
            "summary": "Factory",
            "content_text": "Factorypackage mainimport \"fmt\"// Product é a interface que define o comportamento dos produtostype Product interface {\tUse()}// ConcreteProductA é uma implementação de Producttype ConcreteProductA struct{}// Use implementa o método Use de Productfunc (p *ConcreteProductA) Use() {\tfmt.Println(\"Usando o produto A\")}// ConcreteProductB é outra implementação de Producttype ConcreteProductB struct{}// Use implementa o método Use de Productfunc (p *ConcreteProductB) Use() {\tfmt.Println(\"Usando o produto B\")}// Factory é a interface que define o método de criação de produtostype Factory interface {\tCreateProduct() Product}// ConcreteFactoryA é uma implementação de Factory que cria ConcreteProductAtype ConcreteFactoryA struct{}// CreateProduct implementa o método CreateProduct de Factoryfunc (f *ConcreteFactoryA) CreateProduct() Product {\treturn &amp;ConcreteProductA{}}// ConcreteFactoryB é outra implementação de Factory que cria ConcreteProductBtype ConcreteFactoryB struct{}// CreateProduct implementa o método CreateProduct de Factoryfunc (f *ConcreteFactoryB) CreateProduct() Product {\treturn &amp;ConcreteProductB{}}func main() {\t// Cria uma fábrica para criar produtos do tipo A\tfactoryA := &amp;ConcreteFactoryA{}\t// Usa a fábrica para criar um produto do tipo A\tproductA := factoryA.CreateProduct()\t// Usa o produto do tipo A\tproductA.Use()\t// Cria uma fábrica para criar produtos do tipo B\tfactoryB := &amp;ConcreteFactoryB{}\t// Usa a fábrica para criar um produto do tipo B\tproductB := factoryB.CreateProduct()\t// Usa o produto do tipo B\tproductB.Use()}package mainimport (\t\"database/sql\"\t\"fmt\"\t\"log\"\t_ \"github.com/go-sql-driver/mysql\" // Driver MySQL\t_ \"github.com/lib/pq\"              // Driver PostgreSQL)// Database é a interface que define o comportamento dos diferentes tipos de conexões de banco de dadostype Database interface {\tConnect() (*sql.DB, error)}// MySQLDatabase é uma implementação de Database para MySQLtype MySQLDatabase struct {\tConnectionString string}// Connect implementa o método Connect de Database para MySQLfunc (db *MySQLDatabase) Connect() (*sql.DB, error) {\treturn sql.Open(\"mysql\", db.ConnectionString)}// PostgreSQLDatabase é uma implementação de Database para PostgreSQLtype PostgreSQLDatabase struct {\tConnectionString string}// Connect implementa o método Connect de Database para PostgreSQLfunc (db *PostgreSQLDatabase) Connect() (*sql.DB, error) {\treturn sql.Open(\"postgres\", db.ConnectionString)}// DatabaseFactory é uma fábrica para criar diferentes tipos de conexões de banco de dadostype DatabaseFactory struct{}// CreateDatabase cria uma conexão de banco de dados com base no tipo especificadofunc (f *DatabaseFactory) CreateDatabase(databaseType string, connectionString string) (Database, error) {\tswitch databaseType {\tcase \"mysql\":\t\treturn &amp;MySQLDatabase{ConnectionString: connectionString}, nil\tcase \"postgres\":\t\treturn &amp;PostgreSQLDatabase{ConnectionString: connectionString}, nil\tdefault:\t\treturn nil, fmt.Errorf(\"tipo de banco de dados não suportado: %s\", databaseType)\t}}func main() {\t// Cria uma fábrica de banco de dados\tfactory := &amp;DatabaseFactory{}\t// Cria uma conexão de banco de dados MySQL\tmysqlDB, err := factory.CreateDatabase(\"mysql\", \"user:password@tcp(localhost:3306)/database\")\tif err != nil {\t\tlog.Fatalf(\"Erro ao criar conexão MySQL: %v\", err)\t}\tdefer mysqlDB.Close()\tfmt.Println(\"Conexão MySQL estabelecida com sucesso\")\t// Cria uma conexão de banco de dados PostgreSQL\tpostgresDB, err := factory.CreateDatabase(\"postgres\", \"user=postgres password=password dbname=database sslmode=disable\")\tif err != nil {\t\tlog.Fatalf(\"Erro ao criar conexão PostgreSQL: %v\", err)\t}\tdefer postgresDB.Close()\tfmt.Println(\"Conexão PostgreSQL estabelecida com sucesso\")}",
            "content_html": "<h2 id=\"factory\">Factory</h2><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>package mainimport <span class=\"s2\">\"fmt\"</span>// Product é a interface que define o comportamento dos produtos<span class=\"nb\">type </span>Product interface <span class=\"o\">{</span>\tUse<span class=\"o\">()</span><span class=\"o\">}</span>// ConcreteProductA é uma implementação de Product<span class=\"nb\">type </span>ConcreteProductA struct<span class=\"o\">{}</span>// Use implementa o método Use de Productfunc <span class=\"o\">(</span>p <span class=\"k\">*</span>ConcreteProductA<span class=\"o\">)</span> Use<span class=\"o\">()</span> <span class=\"o\">{</span>\tfmt.Println<span class=\"o\">(</span><span class=\"s2\">\"Usando o produto A\"</span><span class=\"o\">)</span><span class=\"o\">}</span>// ConcreteProductB é outra implementação de Product<span class=\"nb\">type </span>ConcreteProductB struct<span class=\"o\">{}</span>// Use implementa o método Use de Productfunc <span class=\"o\">(</span>p <span class=\"k\">*</span>ConcreteProductB<span class=\"o\">)</span> Use<span class=\"o\">()</span> <span class=\"o\">{</span>\tfmt.Println<span class=\"o\">(</span><span class=\"s2\">\"Usando o produto B\"</span><span class=\"o\">)</span><span class=\"o\">}</span>// Factory é a interface que define o método de criação de produtos<span class=\"nb\">type </span>Factory interface <span class=\"o\">{</span>\tCreateProduct<span class=\"o\">()</span> Product<span class=\"o\">}</span>// ConcreteFactoryA é uma implementação de Factory que cria ConcreteProductA<span class=\"nb\">type </span>ConcreteFactoryA struct<span class=\"o\">{}</span>// CreateProduct implementa o método CreateProduct de Factoryfunc <span class=\"o\">(</span>f <span class=\"k\">*</span>ConcreteFactoryA<span class=\"o\">)</span> CreateProduct<span class=\"o\">()</span> Product <span class=\"o\">{</span>\t<span class=\"k\">return</span> &amp;ConcreteProductA<span class=\"o\">{}</span><span class=\"o\">}</span>// ConcreteFactoryB é outra implementação de Factory que cria ConcreteProductB<span class=\"nb\">type </span>ConcreteFactoryB struct<span class=\"o\">{}</span>// CreateProduct implementa o método CreateProduct de Factoryfunc <span class=\"o\">(</span>f <span class=\"k\">*</span>ConcreteFactoryB<span class=\"o\">)</span> CreateProduct<span class=\"o\">()</span> Product <span class=\"o\">{</span>\t<span class=\"k\">return</span> &amp;ConcreteProductB<span class=\"o\">{}</span><span class=\"o\">}</span>func main<span class=\"o\">()</span> <span class=\"o\">{</span>\t// Cria uma fábrica para criar produtos <span class=\"k\">do </span>tipo A\tfactoryA :<span class=\"o\">=</span> &amp;ConcreteFactoryA<span class=\"o\">{}</span>\t// Usa a fábrica para criar um produto <span class=\"k\">do </span>tipo A\tproductA :<span class=\"o\">=</span> factoryA.CreateProduct<span class=\"o\">()</span>\t// Usa o produto <span class=\"k\">do </span>tipo A\tproductA.Use<span class=\"o\">()</span>\t// Cria uma fábrica para criar produtos <span class=\"k\">do </span>tipo B\tfactoryB :<span class=\"o\">=</span> &amp;ConcreteFactoryB<span class=\"o\">{}</span>\t// Usa a fábrica para criar um produto <span class=\"k\">do </span>tipo B\tproductB :<span class=\"o\">=</span> factoryB.CreateProduct<span class=\"o\">()</span>\t// Usa o produto <span class=\"k\">do </span>tipo B\tproductB.Use<span class=\"o\">()</span><span class=\"o\">}</span></code></pre></div></div><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>\t<span class=\"s\">\"database/sql\"</span>\t<span class=\"s\">\"fmt\"</span>\t<span class=\"s\">\"log\"</span>\t<span class=\"n\">_</span> <span class=\"s\">\"github.com/go-sql-driver/mysql\"</span> <span class=\"c\">// Driver MySQL</span>\t<span class=\"n\">_</span> <span class=\"s\">\"github.com/lib/pq\"</span>              <span class=\"c\">// Driver PostgreSQL</span><span class=\"p\">)</span><span class=\"c\">// Database é a interface que define o comportamento dos diferentes tipos de conexões de banco de dados</span><span class=\"k\">type</span> <span class=\"n\">Database</span> <span class=\"k\">interface</span> <span class=\"p\">{</span>\t<span class=\"n\">Connect</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// MySQLDatabase é uma implementação de Database para MySQL</span><span class=\"k\">type</span> <span class=\"n\">MySQLDatabase</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">ConnectionString</span> <span class=\"kt\">string</span><span class=\"p\">}</span><span class=\"c\">// Connect implementa o método Connect de Database para MySQL</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">db</span> <span class=\"o\">*</span><span class=\"n\">MySQLDatabase</span><span class=\"p\">)</span> <span class=\"n\">Connect</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"s\">\"mysql\"</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ConnectionString</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// PostgreSQLDatabase é uma implementação de Database para PostgreSQL</span><span class=\"k\">type</span> <span class=\"n\">PostgreSQLDatabase</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">ConnectionString</span> <span class=\"kt\">string</span><span class=\"p\">}</span><span class=\"c\">// Connect implementa o método Connect de Database para PostgreSQL</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">db</span> <span class=\"o\">*</span><span class=\"n\">PostgreSQLDatabase</span><span class=\"p\">)</span> <span class=\"n\">Connect</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DB</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"s\">\"postgres\"</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ConnectionString</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// DatabaseFactory é uma fábrica para criar diferentes tipos de conexões de banco de dados</span><span class=\"k\">type</span> <span class=\"n\">DatabaseFactory</span> <span class=\"k\">struct</span><span class=\"p\">{}</span><span class=\"c\">// CreateDatabase cria uma conexão de banco de dados com base no tipo especificado</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">f</span> <span class=\"o\">*</span><span class=\"n\">DatabaseFactory</span><span class=\"p\">)</span> <span class=\"n\">CreateDatabase</span><span class=\"p\">(</span><span class=\"n\">databaseType</span> <span class=\"kt\">string</span><span class=\"p\">,</span> <span class=\"n\">connectionString</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">,</span> <span class=\"kt\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">switch</span> <span class=\"n\">databaseType</span> <span class=\"p\">{</span>\t<span class=\"k\">case</span> <span class=\"s\">\"mysql\"</span><span class=\"o\">:</span>\t\t<span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">MySQLDatabase</span><span class=\"p\">{</span><span class=\"n\">ConnectionString</span><span class=\"o\">:</span> <span class=\"n\">connectionString</span><span class=\"p\">},</span> <span class=\"no\">nil</span>\t<span class=\"k\">case</span> <span class=\"s\">\"postgres\"</span><span class=\"o\">:</span>\t\t<span class=\"k\">return</span> <span class=\"o\">&amp;</span><span class=\"n\">PostgreSQLDatabase</span><span class=\"p\">{</span><span class=\"n\">ConnectionString</span><span class=\"o\">:</span> <span class=\"n\">connectionString</span><span class=\"p\">},</span> <span class=\"no\">nil</span>\t<span class=\"k\">default</span><span class=\"o\">:</span>\t\t<span class=\"k\">return</span> <span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Errorf</span><span class=\"p\">(</span><span class=\"s\">\"tipo de banco de dados não suportado: %s\"</span><span class=\"p\">,</span> <span class=\"n\">databaseType</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"c\">// Cria uma fábrica de banco de dados</span>\t<span class=\"n\">factory</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">DatabaseFactory</span><span class=\"p\">{}</span>\t<span class=\"c\">// Cria uma conexão de banco de dados MySQL</span>\t<span class=\"n\">mysqlDB</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">CreateDatabase</span><span class=\"p\">(</span><span class=\"s\">\"mysql\"</span><span class=\"p\">,</span> <span class=\"s\">\"user:password@tcp(localhost:3306)/database\"</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalf</span><span class=\"p\">(</span><span class=\"s\">\"Erro ao criar conexão MySQL: %v\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\t<span class=\"p\">}</span>\t<span class=\"k\">defer</span> <span class=\"n\">mysqlDB</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Conexão MySQL estabelecida com sucesso\"</span><span class=\"p\">)</span>\t<span class=\"c\">// Cria uma conexão de banco de dados PostgreSQL</span>\t<span class=\"n\">postgresDB</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">CreateDatabase</span><span class=\"p\">(</span><span class=\"s\">\"postgres\"</span><span class=\"p\">,</span> <span class=\"s\">\"user=postgres password=password dbname=database sslmode=disable\"</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalf</span><span class=\"p\">(</span><span class=\"s\">\"Erro ao criar conexão PostgreSQL: %v\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\t<span class=\"p\">}</span>\t<span class=\"k\">defer</span> <span class=\"n\">postgresDB</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Conexão PostgreSQL estabelecida com sucesso\"</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/factory.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/pilha.html",
            "title": "development/estrutura-de-dados/pilha",
            "summary": "Pilha",
            "content_text": "Pilha",
            "content_html": "<h2 id=\"pilha\">Pilha</h2>",
            "url": "/2024/12/01/pilha.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/fila.html",
            "title": "development/estrutura-de-dados/fila",
            "summary": "Fila",
            "content_text": "Fila",
            "content_html": "<h2 id=\"fila\">Fila</h2>",
            "url": "/2024/12/01/fila.html",
            
            
            
            "tags": ["fila","queue"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/redis.html",
            "title": "data/redis",
            "summary": "Redis",
            "content_text": "Redis",
            "content_html": "<h2 id=\"redis\">Redis</h2>",
            "url": "/2024/12/01/redis.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/rabbitmq.html",
            "title": "data/rabbitmq",
            "summary": "RabbitMQ",
            "content_text": "RabbitMQ",
            "content_html": "<h2 id=\"rabbitmq\">RabbitMQ</h2>",
            "url": "/2024/12/01/rabbitmq.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/postgres.html",
            "title": "data/postgres",
            "summary": "Postgres",
            "content_text": "Postgres",
            "content_html": "<h2 id=\"postgres\">Postgres</h2>",
            "url": "/2024/12/01/postgres.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/kafka.html",
            "title": "data/kafka",
            "summary": "Kafka",
            "content_text": "Kafka",
            "content_html": "<h2 id=\"kafka\">Kafka</h2>",
            "url": "/2024/12/01/kafka.html",
            
            
            
            
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/kafka-connect.html",
            "title": "data/kafka-connect",
            "summary": "Kafka Connect",
            "content_text": "Kafka Connect",
            "content_html": "<h2 id=\"kafka-connect\">Kafka Connect</h2>",
            "url": "/2024/12/01/kafka-connect.html",
            
            
            
            "tags": ["kafka","kafka-connect"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/linux.html",
            "title": "cheatsheet/ufw",
            "summary": "Cheatsheet ufw",
            "content_text": "Cheatsheet ufwhttps://medium.com/@sdbutalla/the-6-terminal-utilities-that-save-me-serious-time-and-simplify-my-workflow-1c44b46a4ec9",
            "content_html": "<h2 id=\"cheatsheet-ufw\">Cheatsheet ufw</h2><p>https://medium.com/@sdbutalla/the-6-terminal-utilities-that-save-me-serious-time-and-simplify-my-workflow-1c44b46a4ec9</p>",
            "url": "/2024/12/01/linux.html",
            
            
            
            "tags": ["ufw","ubuntu","firewall"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/12/01/groovy.html",
            "title": "cheatsheet/groovy",
            "summary": "Cheatsheet groovy",
            "content_text": "Cheatsheet groovy// Definir parâmetros de pipelineparameters {    string(name: 'PARAM1', defaultValue: 'valor_padrao', description: 'Descrição do parâmetro')    booleanParam(name: 'PARAM2', defaultValue: true, description: 'Descrição do parâmetro')    choice(name: 'PARAM3', choices: ['opcao1', 'opcao2', 'opcao3'], description: 'Descrição do parâmetro')}// Definir variáveis globaisdef VARIAVEL_GLOBAL = 'valor'// Stage para construir e testar o códigostage('Construir e Testar') {    // Checkout do repositório    git branch: 'master', url: 'https://exemplo.com/repo.git'    // Executar comandos de construção e teste    sh 'mvn clean package'    sh 'npm install'    sh 'npm test'}// Stage para implantar em ambiente de testestage('Implantar em Teste') {    // Executar implantação    sh 'kubectl apply -f teste.yaml'}// Stage para implantar em ambiente de produçãostage('Implantar em Produção') {    // Executar implantação    sh 'kubectl apply -f producao.yaml'}// Post-condiçõespost {    // Notificar por email em caso de falha    failure {        emailext(            subject: \"Pipeline Jenkins - Falha\",            body: \"Houve uma falha na execução da pipeline.\",            to: \"exemplo@email.com\"        )    }    // Enviar artefatos para armazenamento permanente    always {        archiveArtifacts 'target/*.jar'    }}// Função para executar um passo de limpezadef limpar() {    echo 'Executando passo de limpeza...'    // Implemente aqui as etapas de limpeza necessárias}",
            "content_html": "<h2 id=\"cheatsheet-groovy\">Cheatsheet groovy</h2><div class=\"language-groovy highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Definir parâmetros de pipeline</span><span class=\"n\">parameters</span> <span class=\"o\">{</span>    <span class=\"n\">string</span><span class=\"o\">(</span><span class=\"nl\">name:</span> <span class=\"s1\">'PARAM1'</span><span class=\"o\">,</span> <span class=\"nl\">defaultValue:</span> <span class=\"s1\">'valor_padrao'</span><span class=\"o\">,</span> <span class=\"nl\">description:</span> <span class=\"s1\">'Descrição do parâmetro'</span><span class=\"o\">)</span>    <span class=\"n\">booleanParam</span><span class=\"o\">(</span><span class=\"nl\">name:</span> <span class=\"s1\">'PARAM2'</span><span class=\"o\">,</span> <span class=\"nl\">defaultValue:</span> <span class=\"kc\">true</span><span class=\"o\">,</span> <span class=\"nl\">description:</span> <span class=\"s1\">'Descrição do parâmetro'</span><span class=\"o\">)</span>    <span class=\"n\">choice</span><span class=\"o\">(</span><span class=\"nl\">name:</span> <span class=\"s1\">'PARAM3'</span><span class=\"o\">,</span> <span class=\"nl\">choices:</span> <span class=\"o\">[</span><span class=\"s1\">'opcao1'</span><span class=\"o\">,</span> <span class=\"s1\">'opcao2'</span><span class=\"o\">,</span> <span class=\"s1\">'opcao3'</span><span class=\"o\">],</span> <span class=\"nl\">description:</span> <span class=\"s1\">'Descrição do parâmetro'</span><span class=\"o\">)</span><span class=\"o\">}</span><span class=\"c1\">// Definir variáveis globais</span><span class=\"kt\">def</span> <span class=\"n\">VARIAVEL_GLOBAL</span> <span class=\"o\">=</span> <span class=\"s1\">'valor'</span><span class=\"c1\">// Stage para construir e testar o código</span><span class=\"n\">stage</span><span class=\"o\">(</span><span class=\"s1\">'Construir e Testar'</span><span class=\"o\">)</span> <span class=\"o\">{</span>    <span class=\"c1\">// Checkout do repositório</span>    <span class=\"n\">git</span> <span class=\"nl\">branch:</span> <span class=\"s1\">'master'</span><span class=\"o\">,</span> <span class=\"nl\">url:</span> <span class=\"s1\">'https://exemplo.com/repo.git'</span>    <span class=\"c1\">// Executar comandos de construção e teste</span>    <span class=\"n\">sh</span> <span class=\"s1\">'mvn clean package'</span>    <span class=\"n\">sh</span> <span class=\"s1\">'npm install'</span>    <span class=\"n\">sh</span> <span class=\"s1\">'npm test'</span><span class=\"o\">}</span><span class=\"c1\">// Stage para implantar em ambiente de teste</span><span class=\"n\">stage</span><span class=\"o\">(</span><span class=\"s1\">'Implantar em Teste'</span><span class=\"o\">)</span> <span class=\"o\">{</span>    <span class=\"c1\">// Executar implantação</span>    <span class=\"n\">sh</span> <span class=\"s1\">'kubectl apply -f teste.yaml'</span><span class=\"o\">}</span><span class=\"c1\">// Stage para implantar em ambiente de produção</span><span class=\"n\">stage</span><span class=\"o\">(</span><span class=\"s1\">'Implantar em Produção'</span><span class=\"o\">)</span> <span class=\"o\">{</span>    <span class=\"c1\">// Executar implantação</span>    <span class=\"n\">sh</span> <span class=\"s1\">'kubectl apply -f producao.yaml'</span><span class=\"o\">}</span><span class=\"c1\">// Post-condições</span><span class=\"n\">post</span> <span class=\"o\">{</span>    <span class=\"c1\">// Notificar por email em caso de falha</span>    <span class=\"n\">failure</span> <span class=\"o\">{</span>        <span class=\"n\">emailext</span><span class=\"o\">(</span>            <span class=\"nl\">subject:</span> <span class=\"s2\">\"Pipeline Jenkins - Falha\"</span><span class=\"o\">,</span>            <span class=\"nl\">body:</span> <span class=\"s2\">\"Houve uma falha na execução da pipeline.\"</span><span class=\"o\">,</span>            <span class=\"nl\">to:</span> <span class=\"s2\">\"exemplo@email.com\"</span>        <span class=\"o\">)</span>    <span class=\"o\">}</span>    <span class=\"c1\">// Enviar artefatos para armazenamento permanente</span>    <span class=\"n\">always</span> <span class=\"o\">{</span>        <span class=\"n\">archiveArtifacts</span> <span class=\"s1\">'target/*.jar'</span>    <span class=\"o\">}</span><span class=\"o\">}</span><span class=\"c1\">// Função para executar um passo de limpeza</span><span class=\"kt\">def</span> <span class=\"nf\">limpar</span><span class=\"o\">()</span> <span class=\"o\">{</span>    <span class=\"n\">echo</span> <span class=\"s1\">'Executando passo de limpeza...'</span>    <span class=\"c1\">// Implemente aqui as etapas de limpeza necessárias</span><span class=\"o\">}</span></code></pre></div></div>",
            "url": "/2024/12/01/groovy.html",
            
            
            
            "tags": ["groovy","linux"],
            
            "date_published": "2024-12-01T00:00:00+00:00",
            "date_modified": "2024-12-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/11/24/reverse-ssh-tunneling.html",
            "title": "development/golang/reverse-ssh-tunneling",
            "summary": "Reverse SSH Tunneling",
            "content_text": "Reverse SSH Tunnelingpackage mainimport (\t\"fmt\"\t\"io\"\t\"io/ioutil\"\t\"log\"\t\"net\"\t\"golang.org/x/crypto/ssh\")type Endpoint struct {\tHost string\tPort int}func (endpoint *Endpoint) String() string {\treturn fmt.Sprintf(\"%s:%d\", endpoint.Host, endpoint.Port)}func handleClient(client net.Conn, remote net.Conn) {\tdefer client.Close()\tchDone := make(chan bool)\t// Start remote -&gt; local data transfer\tgo func() {\t\t_, err := io.Copy(client, remote)\t\tif err != nil {\t\t\tlog.Printf(\"error while copy remote-&gt;local: %s\", err)\t\t}\t\tchDone &lt;- true\t}()\t// Start local -&gt; remote data transfer\tgo func() {\t\t_, err := io.Copy(remote, client)\t\tif err != nil {\t\t\tlog.Println(fmt.Sprintf(\"error while copy local-&gt;remote: %s\", err))\t\t}\t\tchDone &lt;- true\t}()\t&lt;-chDone}func publicKeyFile(file string) ssh.AuthMethod {\tbuffer, err := ioutil.ReadFile(file)\tif err != nil {\t\tlog.Fatalln(fmt.Sprintf(\"Cannot read SSH public key file %s\", file))\t\treturn nil\t}\tkey, err := ssh.ParsePrivateKey(buffer)\tif err != nil {\t\tlog.Fatalln(fmt.Sprintf(\"Cannot parse SSH public key file %s\", file))\t\treturn nil\t}\treturn ssh.PublicKeys(key)}// local service to be forwardedvar localEndpoint = Endpoint{\tHost: \"localhost\",\tPort: 8000,}// remote SSH servervar serverEndpoint = Endpoint{\tHost: \"192.168.100.19\",\tPort: 22,}// remote forwarding port (on remote SSH server network)var remoteEndpoint = Endpoint{\tHost: \"localhost\",\tPort: 9000,}func main() {\t// refer to https://godoc.org/golang.org/x/crypto/ssh for other authentication types\tsshConfig := &amp;ssh.ClientConfig{\t\t// SSH connection username\t\tUser: \"&lt;your-user&gt;\",\t\tAuth: []ssh.AuthMethod{\t\t\t// put here your private key path\t\t\t//publicKeyFile(\"/home/apolzek/.ssh/id_ed25519\"),\t\t\tssh.Password(\"&lt;your-password&gt;\"),\t\t},\t\tHostKeyCallback: ssh.InsecureIgnoreHostKey(),\t}\t// Connect to SSH remote server using serverEndpoint\tserverConn, err := ssh.Dial(\"tcp\", serverEndpoint.String(), sshConfig)\tif err != nil {\t\tlog.Fatalln(fmt.Printf(\"Dial INTO remote server error: %s\", err))\t}\t// Listen on remote server port\tlistener, err := serverConn.Listen(\"tcp\", remoteEndpoint.String())\tif err != nil {\t\tlog.Fatalln(fmt.Printf(\"Listen open port ON remote server error: %s\", err))\t}\tdefer listener.Close()\t// handle incoming connections on reverse forwarded tunnel\tfor {\t\t// Open a (local) connection to localEndpoint whose content will be forwarded so serverEndpoint\t\tlocal, err := net.Dial(\"tcp\", localEndpoint.String())\t\tif err != nil {\t\t\tlog.Fatalln(fmt.Printf(\"Dial INTO local service error: %s\", err))\t\t}\t\tclient, err := listener.Accept()\t\tif err != nil {\t\t\tlog.Fatalln(err)\t\t}\t\thandleClient(client, local)\t}}",
            "content_html": "<h2 id=\"reverse-ssh-tunneling\">Reverse SSH Tunneling</h2><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"p\">(</span>\t<span class=\"s\">\"fmt\"</span>\t<span class=\"s\">\"io\"</span>\t<span class=\"s\">\"io/ioutil\"</span>\t<span class=\"s\">\"log\"</span>\t<span class=\"s\">\"net\"</span>\t<span class=\"s\">\"golang.org/x/crypto/ssh\"</span><span class=\"p\">)</span><span class=\"k\">type</span> <span class=\"n\">Endpoint</span> <span class=\"k\">struct</span> <span class=\"p\">{</span>\t<span class=\"n\">Host</span> <span class=\"kt\">string</span>\t<span class=\"n\">Port</span> <span class=\"kt\">int</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">endpoint</span> <span class=\"o\">*</span><span class=\"n\">Endpoint</span><span class=\"p\">)</span> <span class=\"n\">String</span><span class=\"p\">()</span> <span class=\"kt\">string</span> <span class=\"p\">{</span>\t<span class=\"k\">return</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"%s:%d\"</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">.</span><span class=\"n\">Host</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">handleClient</span><span class=\"p\">(</span><span class=\"n\">client</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">,</span> <span class=\"n\">remote</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"k\">defer</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"n\">chDone</span> <span class=\"o\">:=</span> <span class=\"nb\">make</span><span class=\"p\">(</span><span class=\"k\">chan</span> <span class=\"kt\">bool</span><span class=\"p\">)</span>\t<span class=\"c\">// Start remote -&gt; local data transfer</span>\t<span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t\t<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">remote</span><span class=\"p\">)</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"error while copy remote-&gt;local: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">chDone</span> <span class=\"o\">&lt;-</span> <span class=\"no\">true</span>\t<span class=\"p\">}()</span>\t<span class=\"c\">// Start local -&gt; remote data transfer</span>\t<span class=\"k\">go</span> <span class=\"k\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t\t<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">(</span><span class=\"n\">remote</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">)</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"error while copy local-&gt;remote: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">chDone</span> <span class=\"o\">&lt;-</span> <span class=\"no\">true</span>\t<span class=\"p\">}()</span>\t<span class=\"o\">&lt;-</span><span class=\"n\">chDone</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">publicKeyFile</span><span class=\"p\">(</span><span class=\"n\">file</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">AuthMethod</span> <span class=\"p\">{</span>\t<span class=\"n\">buffer</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ioutil</span><span class=\"o\">.</span><span class=\"n\">ReadFile</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"Cannot read SSH public key file %s\"</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">))</span>\t\t<span class=\"k\">return</span> <span class=\"no\">nil</span>\t<span class=\"p\">}</span>\t<span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">ParsePrivateKey</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Sprintf</span><span class=\"p\">(</span><span class=\"s\">\"Cannot parse SSH public key file %s\"</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">))</span>\t\t<span class=\"k\">return</span> <span class=\"no\">nil</span>\t<span class=\"p\">}</span>\t<span class=\"k\">return</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">PublicKeys</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"c\">// local service to be forwarded</span><span class=\"k\">var</span> <span class=\"n\">localEndpoint</span> <span class=\"o\">=</span> <span class=\"n\">Endpoint</span><span class=\"p\">{</span>\t<span class=\"n\">Host</span><span class=\"o\">:</span> <span class=\"s\">\"localhost\"</span><span class=\"p\">,</span>\t<span class=\"n\">Port</span><span class=\"o\">:</span> <span class=\"m\">8000</span><span class=\"p\">,</span><span class=\"p\">}</span><span class=\"c\">// remote SSH server</span><span class=\"k\">var</span> <span class=\"n\">serverEndpoint</span> <span class=\"o\">=</span> <span class=\"n\">Endpoint</span><span class=\"p\">{</span>\t<span class=\"n\">Host</span><span class=\"o\">:</span> <span class=\"s\">\"192.168.100.19\"</span><span class=\"p\">,</span>\t<span class=\"n\">Port</span><span class=\"o\">:</span> <span class=\"m\">22</span><span class=\"p\">,</span><span class=\"p\">}</span><span class=\"c\">// remote forwarding port (on remote SSH server network)</span><span class=\"k\">var</span> <span class=\"n\">remoteEndpoint</span> <span class=\"o\">=</span> <span class=\"n\">Endpoint</span><span class=\"p\">{</span>\t<span class=\"n\">Host</span><span class=\"o\">:</span> <span class=\"s\">\"localhost\"</span><span class=\"p\">,</span>\t<span class=\"n\">Port</span><span class=\"o\">:</span> <span class=\"m\">9000</span><span class=\"p\">,</span><span class=\"p\">}</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\t<span class=\"c\">// refer to https://godoc.org/golang.org/x/crypto/ssh for other authentication types</span>\t<span class=\"n\">sshConfig</span> <span class=\"o\">:=</span> <span class=\"o\">&amp;</span><span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">ClientConfig</span><span class=\"p\">{</span>\t\t<span class=\"c\">// SSH connection username</span>\t\t<span class=\"n\">User</span><span class=\"o\">:</span> <span class=\"s\">\"&lt;your-user&gt;\"</span><span class=\"p\">,</span>\t\t<span class=\"n\">Auth</span><span class=\"o\">:</span> <span class=\"p\">[]</span><span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">AuthMethod</span><span class=\"p\">{</span>\t\t\t<span class=\"c\">// put here your private key path</span>\t\t\t<span class=\"c\">//publicKeyFile(\"/home/apolzek/.ssh/id_ed25519\"),</span>\t\t\t<span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">Password</span><span class=\"p\">(</span><span class=\"s\">\"&lt;your-password&gt;\"</span><span class=\"p\">),</span>\t\t<span class=\"p\">},</span>\t\t<span class=\"n\">HostKeyCallback</span><span class=\"o\">:</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">InsecureIgnoreHostKey</span><span class=\"p\">(),</span>\t<span class=\"p\">}</span>\t<span class=\"c\">// Connect to SSH remote server using serverEndpoint</span>\t<span class=\"n\">serverConn</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">Dial</span><span class=\"p\">(</span><span class=\"s\">\"tcp\"</span><span class=\"p\">,</span> <span class=\"n\">serverEndpoint</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(),</span> <span class=\"n\">sshConfig</span><span class=\"p\">)</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Dial INTO remote server error: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t<span class=\"p\">}</span>\t<span class=\"c\">// Listen on remote server port</span>\t<span class=\"n\">listener</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">serverConn</span><span class=\"o\">.</span><span class=\"n\">Listen</span><span class=\"p\">(</span><span class=\"s\">\"tcp\"</span><span class=\"p\">,</span> <span class=\"n\">remoteEndpoint</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Listen open port ON remote server error: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t<span class=\"p\">}</span>\t<span class=\"k\">defer</span> <span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\t<span class=\"c\">// handle incoming connections on reverse forwarded tunnel</span>\t<span class=\"k\">for</span> <span class=\"p\">{</span>\t\t<span class=\"c\">// Open a (local) connection to localEndpoint whose content will be forwarded so serverEndpoint</span>\t\t<span class=\"n\">local</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">Dial</span><span class=\"p\">(</span><span class=\"s\">\"tcp\"</span><span class=\"p\">,</span> <span class=\"n\">localEndpoint</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">())</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s\">\"Dial INTO local service error: %s\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">))</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">Accept</span><span class=\"p\">()</span>\t\t<span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"no\">nil</span> <span class=\"p\">{</span>\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Fatalln</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\t\t<span class=\"p\">}</span>\t\t<span class=\"n\">handleClient</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">local</span><span class=\"p\">)</span>\t<span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "/2024/11/24/reverse-ssh-tunneling.html",
            
            
            
            "tags": ["go","golang"],
            
            "date_published": "2024-11-24T00:00:00+00:00",
            "date_modified": "2024-11-24T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/10/25/iam.html",
            "title": "aws/iam",
            "summary": "IAM",
            "content_text": "IAMA IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:UsuáriosUm usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:aws iam create-user --user-name myuserGruposUm grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuserPolíticasAs políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}FunçõesAs funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.jsonAssume Role Policy DocumentO documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}",
            "content_html": "<h2 id=\"iam\">IAM</h2><p>A IAM (Identity and Access Management) é um serviço fundamental da AWS (Amazon Web Services) que permite gerenciar de forma segura o acesso aos recursos da AWS. Com a IAM, você pode criar e gerenciar usuários, grupos e funções, além de definir permissões detalhadas para controlar quem tem acesso a quais recursos e ações dentro da sua conta da AWS. Aqui estão alguns conceitos importantes e exemplos práticos de uso da IAM:</p><h4 id=\"usuários\">Usuários</h4><p>Um usuário é uma identidade que você cria para alguém ou algo (como uma aplicação) que precisa acessar sua conta da AWS. Cada usuário possui um nome de usuário exclusivo e credenciais de login. Aqui está um exemplo de criação de um usuário na IAM:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-user --user-name myuser</code></pre></div></div><h4 id=\"grupos\">Grupos</h4><p>Um grupo é um conjunto de permissões que você pode aplicar a vários usuários. Você atribui políticas (conjuntos de permissões) aos grupos, e os usuários que pertencem ao grupo herdam essas permissões. Aqui está um exemplo de criação de um grupo na IAM e associação de um usuário a ele:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-group --group-name mygroupaws iam add-user-to-group --group-name mygroup --user-name myuser</code></pre></div></div><h4 id=\"políticas\">Políticas</h4><p>As políticas definem as permissões de acesso em formato JSON. Elas especificam o que um usuário, grupo ou função pode fazer com recursos específicos. Aqui está um exemplo de criação de uma política que permite a leitura de um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"s3:GetObject\",            \"Resource\": \"arn:aws:s3:::my-bucket/*\"        }    ]}</code></pre></div></div><h4 id=\"funções\">Funções</h4><p>As funções permitem conceder permissões temporárias a serviços da AWS ou entidades confiáveis. Isso é útil para permitir que serviços acessem outros recursos em seu nome, sem a necessidade de compartilhar credenciais de acesso direto. Aqui está um exemplo de criação de uma função que permite que uma instância EC2 acesse um bucket S3:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>aws iam create-role --role-name myrole --assume-role-policy-document file://trust-policy.json</code></pre></div></div><h4 id=\"assume-role-policy-document\">Assume Role Policy Document</h4><p>O documento de política de confiança é um JSON que define quais entidades ou serviços podem assumir uma função. Aqui está um exemplo simplificado:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Principal\": {                \"Service\": \"ec2.amazonaws.com\"            },            \"Action\": \"sts:AssumeRole\"        }    ]}</code></pre></div></div>",
            "url": "/2024/10/25/iam.html",
            
            
            
            "tags": ["iam","aws","security"],
            
            "date_published": "2024-10-25T00:00:00+00:00",
            "date_modified": "2024-10-25T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/10/25/eks.html",
            "title": "cloud/aws/eks",
            "summary": "EKS",
            "content_text": "EKS",
            "content_html": "<h1 id=\"eks\">EKS</h1>",
            "url": "/2024/10/25/eks.html",
            
            
            
            "tags": ["eks","aws","kubernetes"],
            
            "date_published": "2024-10-25T00:00:00+00:00",
            "date_modified": "2024-10-25T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/08/01/self-assessment-1.html",
            "title": "opinions/self-assessment-1",
            "summary": "self-assessment-1",
            "content_text": "",
            "content_html": "",
            "url": "/2024/08/01/self-assessment-1.html",
            
            
            
            
            
            "date_published": "2024-08-01T00:00:00+00:00",
            "date_modified": "2024-08-01T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/powershell.html",
            "title": "cheatsheet/powershell",
            "summary": "Cheatsheet powershell",
            "content_text": "Cheatsheet powershell# Imprimir uma mensagem na telaWrite-Output \"Hello, World!\"# Declarar variáveis$idade = 30$nome = \"João\"$salario = 2500.50$ativo = $true# Comentários de linha única&lt;#Comentáriosde váriaslinhas#&gt;# Operadores aritméticos$soma = 5 + 3$subtracao = 10 - 4$multiplicacao = 2 * 6$divisao = 15 / 3$exponenciacao = 2 ** 3$resto_divisao = 10 % 3# Estruturas condicionaisif ($idade -ge 18) {    Write-Output \"Você é maior de idade\"} else {    Write-Output \"Você é menor de idade\"}# Estruturas de repetição - Loop forfor ($i = 0; $i -lt 5; $i++) {    Write-Output $i}# Estruturas de repetição - Loop while$contador = 0while ($contador -lt 5) {    Write-Output $contador    $contador++}# Listas$cores = @('vermelho', 'verde', 'azul')$primeira_cor = $cores[0]$cores += 'amarelo'$tamanho_lista = $cores.Count# Dicionários$pessoa = @{    'nome' = 'Maria'    'idade' = 25}$idade_da_pessoa = $pessoa['idade']$pessoa['profissao'] = 'engenheira'# Funçõesfunction Saudacao {    param (        [string]$nome    )    Write-Output \"Olá, $nome\"}Saudacao \"Ana\"# Trabalhar com arquivos$conteudo = Get-Content arquivo.txt# Manipulação de strings$mensagem = \"Olá, Mundo!\"$tamanho = $mensagem.Length$maiusculas = $mensagem.ToUpper()$minusculas = $mensagem.ToLower()$palavras = $mensagem -split ','# Tratamento de exceçõestry {    $resultado = 10 / 0} catch {    Write-Output \"Não é possível dividir por zero\"}# Trabalhar com datas e horas$agora = Get-Date$ano_atual = $agora.Year$mes_atual = $agora.Month# Compreensão de lista$numeros = @(1, 2, 3, 4, 5)$dobro = $numeros | ForEach-Object { $_ * 2 }# Definir uma classeclass Pessoa {    [string]$nome    [int]$idade    Pessoa([string]$nome, [int]$idade) {        $this.nome = $nome        $this.idade = $idade    }    [void] Saudacao() {        Write-Output \"Olá, $($this.nome)\"    }}# Instanciar um objeto da classe Pessoa$p1 = [Pessoa]::new(\"Carlos\", 30)$p1.Saudacao()HTTP Server",
            "content_html": "<h2 id=\"cheatsheet-powershell\">Cheatsheet powershell</h2><div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Imprimir uma mensagem na tela</span><span class=\"w\"></span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Hello, World!\"</span><span class=\"w\"></span><span class=\"c\"># Declarar variáveis</span><span class=\"w\"></span><span class=\"nv\">$idade</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"w\"></span><span class=\"nv\">$nome</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"João\"</span><span class=\"w\"></span><span class=\"nv\">$salario</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2500.50</span><span class=\"w\"></span><span class=\"nv\">$ativo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">$true</span><span class=\"w\"></span><span class=\"c\"># Comentários de linha única</span><span class=\"w\"></span><span class=\"cm\">&lt;#Comentáriosde váriaslinhas#&gt;</span><span class=\"w\"></span><span class=\"c\"># Operadores aritméticos</span><span class=\"w\"></span><span class=\"nv\">$soma</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span><span class=\"nv\">$subtracao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"></span><span class=\"nv\">$multiplicacao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"></span><span class=\"nv\">$divisao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"n\">/</span><span class=\"w\"> </span><span class=\"nx\">3</span><span class=\"w\"></span><span class=\"nv\">$exponenciacao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">**</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span><span class=\"nv\">$resto_divisao</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span><span class=\"c\"># Estruturas condicionais</span><span class=\"w\"></span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$idade</span><span class=\"w\"> </span><span class=\"o\">-ge</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Você é maior de idade\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"kr\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Você é menor de idade\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Estruturas de repetição - Loop for</span><span class=\"w\"></span><span class=\"kr\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nv\">$i</span><span class=\"w\"> </span><span class=\"o\">-lt</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nv\">$i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"nv\">$i</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Estruturas de repetição - Loop while</span><span class=\"w\"></span><span class=\"nv\">$contador</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span><span class=\"kr\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$contador</span><span class=\"w\"> </span><span class=\"o\">-lt</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"nv\">$contador</span><span class=\"w\">    </span><span class=\"nv\">$contador</span><span class=\"o\">++</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Listas</span><span class=\"w\"></span><span class=\"nv\">$cores</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">@(</span><span class=\"s1\">'vermelho'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">'verde'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">'azul'</span><span class=\"p\">)</span><span class=\"w\"></span><span class=\"nv\">$primeira_cor</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$cores</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span><span class=\"nv\">$cores</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"s1\">'amarelo'</span><span class=\"w\"></span><span class=\"nv\">$tamanho_lista</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$cores</span><span class=\"o\">.</span><span class=\"nf\">Count</span><span class=\"w\"></span><span class=\"c\"># Dicionários</span><span class=\"w\"></span><span class=\"nv\">$pessoa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">@{</span><span class=\"w\">    </span><span class=\"s1\">'nome'</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'Maria'</span><span class=\"w\">    </span><span class=\"s1\">'idade'</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"nv\">$idade_da_pessoa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$pessoa</span><span class=\"p\">[</span><span class=\"s1\">'idade'</span><span class=\"p\">]</span><span class=\"w\"></span><span class=\"nv\">$pessoa</span><span class=\"p\">[</span><span class=\"s1\">'profissao'</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'engenheira'</span><span class=\"w\"></span><span class=\"c\"># Funções</span><span class=\"w\"></span><span class=\"kr\">function</span><span class=\"w\"> </span><span class=\"nf\">Saudacao</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"kr\">param</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"w\">        </span><span class=\"p\">[</span><span class=\"n\">string</span><span class=\"p\">]</span><span class=\"nv\">$nome</span><span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Olá, </span><span class=\"nv\">$nome</span><span class=\"s2\">\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"n\">Saudacao</span><span class=\"w\"> </span><span class=\"s2\">\"Ana\"</span><span class=\"w\"></span><span class=\"c\"># Trabalhar com arquivos</span><span class=\"w\"></span><span class=\"nv\">$conteudo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Get-Content</span><span class=\"w\"> </span><span class=\"nx\">arquivo.txt</span><span class=\"w\"></span><span class=\"c\"># Manipulação de strings</span><span class=\"w\"></span><span class=\"nv\">$mensagem</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"Olá, Mundo!\"</span><span class=\"w\"></span><span class=\"nv\">$tamanho</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"o\">.</span><span class=\"nf\">Length</span><span class=\"w\"></span><span class=\"nv\">$maiusculas</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"o\">.</span><span class=\"nf\">ToUpper</span><span class=\"p\">()</span><span class=\"w\"></span><span class=\"nv\">$minusculas</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"o\">.</span><span class=\"nf\">ToLower</span><span class=\"p\">()</span><span class=\"w\"></span><span class=\"nv\">$palavras</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$mensagem</span><span class=\"w\"> </span><span class=\"o\">-split</span><span class=\"w\"> </span><span class=\"s1\">','</span><span class=\"w\"></span><span class=\"c\"># Tratamento de exceções</span><span class=\"w\"></span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nv\">$resultado</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"n\">/</span><span class=\"w\"> </span><span class=\"nx\">0</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"kr\">catch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Não é possível dividir por zero\"</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Trabalhar com datas e horas</span><span class=\"w\"></span><span class=\"nv\">$agora</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Get-Date</span><span class=\"w\"></span><span class=\"nv\">$ano_atual</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$agora</span><span class=\"o\">.</span><span class=\"nf\">Year</span><span class=\"w\"></span><span class=\"nv\">$mes_atual</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$agora</span><span class=\"o\">.</span><span class=\"nf\">Month</span><span class=\"w\"></span><span class=\"c\"># Compreensão de lista</span><span class=\"w\"></span><span class=\"nv\">$numeros</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">@(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\"></span><span class=\"nv\">$dobro</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$numeros</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">ForEach-Object</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"bp\">$_</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Definir uma classe</span><span class=\"w\"></span><span class=\"kr\">class</span><span class=\"w\"> </span><span class=\"nc\">Pessoa</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">string</span><span class=\"p\">]</span><span class=\"nv\">$nome</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">int</span><span class=\"p\">]</span><span class=\"nv\">$idade</span><span class=\"w\">    </span><span class=\"n\">Pessoa</span><span class=\"p\">([</span><span class=\"n\">string</span><span class=\"p\">]</span><span class=\"nv\">$nome</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">int</span><span class=\"p\">]</span><span class=\"nv\">$idade</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"bp\">$this</span><span class=\"o\">.</span><span class=\"nf\">nome</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$nome</span><span class=\"w\">        </span><span class=\"bp\">$this</span><span class=\"o\">.</span><span class=\"nf\">idade</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nv\">$idade</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">void</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">Saudacao</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Olá, </span><span class=\"si\">$(</span><span class=\"bp\">$this</span><span class=\"o\">.</span><span class=\"nf\">nome</span><span class=\"si\">)</span><span class=\"s2\">\"</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"c\"># Instanciar um objeto da classe Pessoa</span><span class=\"w\"></span><span class=\"nv\">$p1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Pessoa</span><span class=\"p\">]::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s2\">\"Carlos\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"p\">)</span><span class=\"w\"></span><span class=\"nv\">$p1</span><span class=\"o\">.</span><span class=\"nf\">Saudacao</span><span class=\"p\">()</span><span class=\"w\"></span></code></pre></div></div><h3 id=\"http-server\">HTTP Server</h3>",
            "url": "/2024/02/19/powershell.html",
            
            
            
            "tags": ["powershell","linux"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/lpi2.html",
            "title": "cheatsheet/git",
            "summary": "Cheatsheet git",
            "content_text": "Cheatsheet git",
            "content_html": "<h2 id=\"cheatsheet-git\">Cheatsheet git</h2>",
            "url": "/2024/02/19/lpi2.html",
            
            
            
            "tags": ["git","linux"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/lpi1.html",
            "title": "cheatsheet/lpi1",
            "summary": "Cheatsheet lpi1",
            "content_text": "Cheatsheet lpi1",
            "content_html": "<h2 id=\"cheatsheet-lpi1\">Cheatsheet lpi1</h2>",
            "url": "/2024/02/19/lpi1.html",
            
            
            
            "tags": ["lpi1","linux"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/19/cka.html",
            "title": "tools/k8s/cka",
            "summary": "CKA",
            "content_text": "CKA",
            "content_html": "<h2 id=\"cka\">CKA</h2>",
            "url": "/2024/02/19/cka.html",
            
            
            
            "tags": ["cka","certification"],
            
            "date_published": "2024-02-19T00:00:00+00:00",
            "date_modified": "2024-02-19T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/11/ufw.html",
            "title": "cheatsheet/ufw",
            "summary": "Cheatsheet ufw",
            "content_text": "Cheatsheet ufw# Habilitar o Firewallsudo ufw enable# Desabilitar o Firewallsudo ufw disable# Verificar o Status do Firewallsudo ufw status# Adicionar uma Regra de Permissão de Porta (por exemplo, porta 80/tcp)sudo ufw allow 80/tcp# Adicionar uma Regra de Permissão para um Range de Portas (por exemplo, portas de 8000 a 8010/tcp)sudo ufw allow 8000:8010/tcp# Adicionar uma Regra de Permissão para um Aplicativo Específico (por exemplo, OpenSSH)sudo ufw allow OpenSSH# Negar uma Porta (por exemplo, porta 22/tcp)sudo ufw deny 22/tcp# Limitar a taxa de conexões para um determinado serviço (por exemplo, SSH)sudo ufw limit ssh# Excluir uma Regra (por exemplo, excluir a regra que permite o tráfego na porta 80/tcp)sudo ufw delete allow 80/tcp# Habilitar ou Desabilitar o Loggingsudo ufw logging onsudo ufw logging off# Regras de IPv6 (substitua allow ou deny por allow6 ou deny6 para IPv6)sudo ufw allow6 80/tcpsudo ufw deny6 22/tcp# Permitir tráfego de uma porta UDP específicasudo ufw allow 53/udp",
            "content_html": "<h2 id=\"cheatsheet-ufw\">Cheatsheet ufw</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Habilitar o Firewallsudo ufw enable# Desabilitar o Firewallsudo ufw disable# Verificar o Status do Firewallsudo ufw status# Adicionar uma Regra de Permissão de Porta (por exemplo, porta 80/tcp)sudo ufw allow 80/tcp# Adicionar uma Regra de Permissão para um Range de Portas (por exemplo, portas de 8000 a 8010/tcp)sudo ufw allow 8000:8010/tcp# Adicionar uma Regra de Permissão para um Aplicativo Específico (por exemplo, OpenSSH)sudo ufw allow OpenSSH# Negar uma Porta (por exemplo, porta 22/tcp)sudo ufw deny 22/tcp# Limitar a taxa de conexões para um determinado serviço (por exemplo, SSH)sudo ufw limit ssh# Excluir uma Regra (por exemplo, excluir a regra que permite o tráfego na porta 80/tcp)sudo ufw delete allow 80/tcp# Habilitar ou Desabilitar o Loggingsudo ufw logging onsudo ufw logging off# Regras de IPv6 (substitua allow ou deny por allow6 ou deny6 para IPv6)sudo ufw allow6 80/tcpsudo ufw deny6 22/tcp# Permitir tráfego de uma porta UDP específicasudo ufw allow 53/udp</code></pre></div></div>",
            "url": "/2024/02/11/ufw.html",
            
            
            
            "tags": ["ufw","ubuntu","firewall"],
            
            "date_published": "2024-02-11T00:00:00+00:00",
            "date_modified": "2024-02-11T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/11/tshoot.html",
            "title": "cheatsheet/tshoot",
            "summary": "Cheatsheet tshoot",
            "content_text": "Cheatsheet tshootImportant Commands# Listar todas as conexões de rede TCP que estão sendo ouvidas(listening)ss -nltp# Verificar o status de uma interface de redeifconfig# Mostrar informações detalhadas sobre interfaces de redeip addr show# Verificar se um host está acessível na redeping endereço_do_host# Verificar a rota padrãoip route show# Verificar as rotas específicas para um determinado destinoip route show destino# Exibir informações sobre a tabela de roteamentoroute -n# Verificar as portas TCP e UDP abertasnetstat -tuln# Verificar o status de um serviço específicosystemctl status nome_do_serviço# Reiniciar um serviço específicosystemctl restart nome_do_serviço# Verificar os logs do sistemajournalctl# Verificar logs específicos de um serviçojournalctl -u nome_do_serviço# Verificar os últimos logs do sistemadmesg# Exibir informações sobre o espaço em discodf -h# Exibir informações detalhadas sobre as partiçõesfdisk -l# Exibir informações sobre o uso de disco por diretóriodu -h /diretório# Listar os processos em execuçãops aux# Procurar um processo específicops aux | grep nome_do_processo# Matar um processo pelo IDkill ID_do_processo# Matar todos os processos de um determinado nomepkill nome_do_processo# Monitorar o uso da CPU em tempo realtop# Monitorar o uso da memória em tempo realhtop# Exibir informações sobre uso da memóriafree -m# Monitorar o tráfego de redeiftop# Monitorar as atividades da redetcpdump -i interface_de_rede# Verificar as conexões de rede ativasnetstat -antup# Exibir as estatísticas do sistemavmstat# Verificar a carga média do sistemauptime# Verificar a versão do sistema operacionalcat /etc/os-release# Verificar as informações do kerneluname -a# Verificar a utilização do processadormpstat# Verificar os recursos da CPUlscpu# Verificar as informações do BIOSdmidecode -t bios# Verificar informações da memóriadmidecode -t memory# Verificar os dispositivos PCIlspci# Verificar os dispositivos USBlsusb# Verificar as informações do discolsscsi# Verificar a temperatura do sistemasensors# Verificar os serviços em execução na inicializaçãosystemctl list-unit-files | grep enabled# Verificar os arquivos abertos por um processolsof -p ID_do_processo# Verificar o status de uma porta específicanc -zv host porta# Verificar a resolução de nomes de hostnslookup nome_do_host# Verificar o cache de DNSsystemd-resolve --status# Limpar o cache de DNSsystemd-resolve --flush-caches# Verificar a tabela de roteamento ARParp -a# Renovar o endereço IP de uma interface de rededhclient -v interface_de_rede# Reiniciar uma interface de redeifdown interface_de_rede &amp;&amp; ifup interface_de_rede# Verificar as configurações de redecat /etc/network/interfaces# Verificar as rotas do sistemaip route show# Testar a conectividade SSHssh -v usuário@host# Verificar os arquivos de configuração do SSHcat /etc/ssh/sshd_config# Verificar as conexões SSH ativasnetstat -antup | grep ssh# Exibir as chaves SSH autorizadascat ~/.ssh/authorized_keys# Verificar os logs do SSHcat /var/log/auth.log# Testar a conectividade HTTPcurl -I http://exemplo.com# Verificar as configurações do Apacheapachectl configtest# Verificar os logs do Apachetail -f /var/log/apache2/access.log# Verificar os logs de erro do Apachetail -f /var/log/apache2/error.log# Testar a conectividade HTTPSopenssl s_client -connect host:443# Verificar as configurações do Nginxnginx -t# Verificar os logs do Nginxtail -f /var/log/nginx/access.log# Verificar os logs de erro do Nginxtail -f /var/log/nginx/error.log# Exibir as configurações do firewalliptables -L# Exibir as regras de encaminhamento de portaiptables -t nat -L# Limpar todas as regras do firewalliptables -F# Verificar as conexões de entrada bloqueadas pelo firewalldmesg | grep DROP# Verificar o status do SELinuxsestatus# Desativar temporariamente o SELinuxsetenforce 0# Verificar o status do firewallsystemctl status firewalld# Parar o serviço do firewallsystemctl stop firewalld# Iniciar o serviço do firewallsystemctl start firewalld# Verificar as configurações de proxy do sistemaenv | grep -i proxy# Verificar as configurações de proxy do navegadorcat ~/.mozilla/firefox/profiles.ini | grep Path# Limpar o cache do navegadorrm -rf ~/.cache/mozilla/firefox/*default*/cache2# Exibir o status do serviço de redesystemctl status network# Reiniciar o serviço de redesystemctl restart network# Verificar os arquivos de configuração do Sambacat /etc/samba/smb.conf# Reiniciar o serviço do Sambasystemctl restart smbd# Verificar o status do serviço de DHCPsystemctl status dhcpd# Reiniciar o serviço de DHCPsystemctl restart dhcpd# Verificar o status do serviço de FTPsystemctl status vsftpd# Reiniciar o serviço de FTPsystemctl restart vsftpd# Verificar o status do serviço de DNSsystemctl status named# Reiniciar o serviço de DNSsystemctl restart named# Verificar o status do serviço de NTPsystemctl status ntpdImportant files# Verificar os logs do DNStail -f /var/log/named.log# Verificar os logs do FTPtail -f /var/log/vsftpd.log# Verificar os logs do DHCPtail -f /var/log/dhcpd.log# Verificar os logs do Sambatail -f /var/log/samba/log.smbd# Verificar as configurações de proxycat /etc/environment# Verificar o DNS utilizado pelo sistemacat /etc/resolv.conf",
            "content_html": "<h2 id=\"cheatsheet-tshoot\">Cheatsheet tshoot</h2><h3 id=\"important-commands\">Important Commands</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Listar todas as conexões de rede TCP que estão sendo ouvidas(listening)ss -nltp# Verificar o status de uma interface de redeifconfig# Mostrar informações detalhadas sobre interfaces de redeip addr show# Verificar se um host está acessível na redeping endereço_do_host# Verificar a rota padrãoip route show# Verificar as rotas específicas para um determinado destinoip route show destino# Exibir informações sobre a tabela de roteamentoroute -n# Verificar as portas TCP e UDP abertasnetstat -tuln# Verificar o status de um serviço específicosystemctl status nome_do_serviço# Reiniciar um serviço específicosystemctl restart nome_do_serviço# Verificar os logs do sistemajournalctl# Verificar logs específicos de um serviçojournalctl -u nome_do_serviço# Verificar os últimos logs do sistemadmesg# Exibir informações sobre o espaço em discodf -h# Exibir informações detalhadas sobre as partiçõesfdisk -l# Exibir informações sobre o uso de disco por diretóriodu -h /diretório# Listar os processos em execuçãops aux# Procurar um processo específicops aux | grep nome_do_processo# Matar um processo pelo IDkill ID_do_processo# Matar todos os processos de um determinado nomepkill nome_do_processo# Monitorar o uso da CPU em tempo realtop# Monitorar o uso da memória em tempo realhtop# Exibir informações sobre uso da memóriafree -m# Monitorar o tráfego de redeiftop# Monitorar as atividades da redetcpdump -i interface_de_rede# Verificar as conexões de rede ativasnetstat -antup# Exibir as estatísticas do sistemavmstat# Verificar a carga média do sistemauptime# Verificar a versão do sistema operacionalcat /etc/os-release# Verificar as informações do kerneluname -a# Verificar a utilização do processadormpstat# Verificar os recursos da CPUlscpu# Verificar as informações do BIOSdmidecode -t bios# Verificar informações da memóriadmidecode -t memory# Verificar os dispositivos PCIlspci# Verificar os dispositivos USBlsusb# Verificar as informações do discolsscsi# Verificar a temperatura do sistemasensors# Verificar os serviços em execução na inicializaçãosystemctl list-unit-files | grep enabled# Verificar os arquivos abertos por um processolsof -p ID_do_processo# Verificar o status de uma porta específicanc -zv host porta# Verificar a resolução de nomes de hostnslookup nome_do_host# Verificar o cache de DNSsystemd-resolve --status# Limpar o cache de DNSsystemd-resolve --flush-caches# Verificar a tabela de roteamento ARParp -a# Renovar o endereço IP de uma interface de rededhclient -v interface_de_rede# Reiniciar uma interface de redeifdown interface_de_rede &amp;&amp; ifup interface_de_rede# Verificar as configurações de redecat /etc/network/interfaces# Verificar as rotas do sistemaip route show# Testar a conectividade SSHssh -v usuário@host# Verificar os arquivos de configuração do SSHcat /etc/ssh/sshd_config# Verificar as conexões SSH ativasnetstat -antup | grep ssh# Exibir as chaves SSH autorizadascat ~/.ssh/authorized_keys# Verificar os logs do SSHcat /var/log/auth.log# Testar a conectividade HTTPcurl -I http://exemplo.com# Verificar as configurações do Apacheapachectl configtest# Verificar os logs do Apachetail -f /var/log/apache2/access.log# Verificar os logs de erro do Apachetail -f /var/log/apache2/error.log# Testar a conectividade HTTPSopenssl s_client -connect host:443# Verificar as configurações do Nginxnginx -t# Verificar os logs do Nginxtail -f /var/log/nginx/access.log# Verificar os logs de erro do Nginxtail -f /var/log/nginx/error.log# Exibir as configurações do firewalliptables -L# Exibir as regras de encaminhamento de portaiptables -t nat -L# Limpar todas as regras do firewalliptables -F# Verificar as conexões de entrada bloqueadas pelo firewalldmesg | grep DROP# Verificar o status do SELinuxsestatus# Desativar temporariamente o SELinuxsetenforce 0# Verificar o status do firewallsystemctl status firewalld# Parar o serviço do firewallsystemctl stop firewalld# Iniciar o serviço do firewallsystemctl start firewalld# Verificar as configurações de proxy do sistemaenv | grep -i proxy# Verificar as configurações de proxy do navegadorcat ~/.mozilla/firefox/profiles.ini | grep Path# Limpar o cache do navegadorrm -rf ~/.cache/mozilla/firefox/*default*/cache2# Exibir o status do serviço de redesystemctl status network# Reiniciar o serviço de redesystemctl restart network# Verificar os arquivos de configuração do Sambacat /etc/samba/smb.conf# Reiniciar o serviço do Sambasystemctl restart smbd# Verificar o status do serviço de DHCPsystemctl status dhcpd# Reiniciar o serviço de DHCPsystemctl restart dhcpd# Verificar o status do serviço de FTPsystemctl status vsftpd# Reiniciar o serviço de FTPsystemctl restart vsftpd# Verificar o status do serviço de DNSsystemctl status named# Reiniciar o serviço de DNSsystemctl restart named# Verificar o status do serviço de NTPsystemctl status ntpd</code></pre></div></div><h3 id=\"important-files\">Important files</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Verificar os logs do DNStail -f /var/log/named.log# Verificar os logs do FTPtail -f /var/log/vsftpd.log# Verificar os logs do DHCPtail -f /var/log/dhcpd.log# Verificar os logs do Sambatail -f /var/log/samba/log.smbd# Verificar as configurações de proxycat /etc/environment# Verificar o DNS utilizado pelo sistemacat /etc/resolv.conf</code></pre></div></div>",
            "url": "/2024/02/11/tshoot.html",
            
            
            
            
            
            "date_published": "2024-02-11T00:00:00+00:00",
            "date_modified": "2024-02-11T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/11/terraform.html",
            "title": "cheatsheet/terraform",
            "summary": "Cheatsheet terraform",
            "content_text": "Cheatsheet terraform# Inicializa o diretório do Terraform, baixando os plugins necessários para o provedor configurado.terraform init# Valida a configuração do arquivo do Terraform, verificando se há erros de sintaxe ou referências inválidas.terraform validate# Formata os arquivos de configuração do Terraform para seguir um estilo consistente.terraform fmt# Gera um plano de execução do Terraform, mostrando as mudanças que serão aplicadas na infraestrutura.terraform plan# Aplica as alterações planejadas no plano de execução do Terraform, modificando a infraestrutura de acordo.terraform apply# Destrói a infraestrutura provisionada pelo Terraform, removendo todos os recursos gerenciados.terraform destroy# Cria um novo workspace no Terraform, permitindo gerenciar diferentes estados de infraestrutura.terraform workspace new dev# Lista todos os workspaces disponíveis no Terraform.terraform workspace list# Seleciona um workspace específico no Terraform para ser utilizado nas operações subsequentes.terraform workspace select dev# Importa um recurso existente de um provedor para o estado do Terraform.terraform import aws_s3_bucket.example my-bucket# Lista todos os recursos gerenciados pelo Terraform no estado atual.terraform state list# Exibe o valor de uma saída (output) específica definida no arquivo de configuração do Terraform.terraform output example_output# Gera um gráfico da infraestrutura gerenciada pelo Terraform e exporta como uma imagem PNG.terraform graph | dot -Tpng &gt; graph.png# Marca um recurso como \"sujado\", forçando o Terraform a recreá-lo na próxima aplicação.terraform taint aws_instance.example# Remove a marca de \"sujado\" de um recurso, permitindo que o Terraform continue gerenciando-o normalmente.terraform untaint aws_instance.example# Inicializa o diretório do Terraform, usando um arquivo de configuração alternativo.terraform init -backend-config=config.tfbackend# Aplica as alterações com aprovação automática, sem exigir interação do usuário.terraform apply -auto-approve# Aplica as alterações em um workspace específico.terraform apply -var-file=dev.tfvars# Destrói a infraestrutura provisionada pelo Terraform em um workspace específico.terraform destroy -var-file=dev.tfvarsterraform init: Este comando é usado para inicializar um novo diretório de configuração do Terraform. Ele baixa os provedores e módulos especificados no arquivo de configuração.terraform plan: Este comando cria um plano de execução que mostra o que o Terraform fará antes de efetivamente fazer qualquer alteração na infraestrutura. É uma boa prática executar isso antes de aplicar qualquer configuração.terraform apply: Este comando é usado para aplicar as alterações definidas em seu código do Terraform à infraestrutura. Ele criará, atualizará ou destruirá recursos conforme necessário.terraform destroy: Este comando é usado para destruir todos os recursos definidos em seu código do Terraform. Use com cuidado, pois isso pode resultar na perda de recursos.terraform validate: Este comando verifica a sintaxe do arquivo de configuração do Terraform e verifica se há erros.terraform fmt: Este comando formata seu código Terraform de acordo com as convenções de estilo do Terraform.terraform workspace: Este comando permite que você gerencie workspaces (espaços de trabalho) no Terraform, o que é útil para lidar com configurações diferentes em um único diretório.terraform import: Este comando é usado para importar um recurso existente em um provedor para o estado do Terraform. Isso é útil quando você deseja começar a gerenciar recursos que já existem.terraform state: Este comando permite manipular diretamente o estado do Terraform, que é útil em situações avançadas de gerenciamento de estado.terraform output: Este comando exibe os valores de saída definidos em seu arquivo de configuração do Terraform.terraform graph: Este comando gera uma representação visual do gráfico de recursos do Terraform, mostrando as dependências entre recursos.terraform taint: Este comando marca um recurso como “sujo” no estado, o que faz com que o Terraform o reconstrua na próxima vez que você executar o terraform apply.terraform untaint: Este comando remove a marcação de “sujeira” de um recurso no estado.Variable precedenceVariáveis Explicitamente DefinidasArquivos de Variáveis (.tfvars)Flags de Linha de ComandoVariáveis de AmbienteArquivo de Configuração do Terraform (.tf)",
            "content_html": "<h2 id=\"cheatsheet-terraform\">Cheatsheet terraform</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Inicializa o diretório do Terraform, baixando os plugins necessários para o provedor configurado.terraform init# Valida a configuração do arquivo do Terraform, verificando se há erros de sintaxe ou referências inválidas.terraform validate# Formata os arquivos de configuração do Terraform para seguir um estilo consistente.terraform fmt# Gera um plano de execução do Terraform, mostrando as mudanças que serão aplicadas na infraestrutura.terraform plan# Aplica as alterações planejadas no plano de execução do Terraform, modificando a infraestrutura de acordo.terraform apply# Destrói a infraestrutura provisionada pelo Terraform, removendo todos os recursos gerenciados.terraform destroy# Cria um novo workspace no Terraform, permitindo gerenciar diferentes estados de infraestrutura.terraform workspace new dev# Lista todos os workspaces disponíveis no Terraform.terraform workspace list# Seleciona um workspace específico no Terraform para ser utilizado nas operações subsequentes.terraform workspace select dev# Importa um recurso existente de um provedor para o estado do Terraform.terraform import aws_s3_bucket.example my-bucket# Lista todos os recursos gerenciados pelo Terraform no estado atual.terraform state list# Exibe o valor de uma saída (output) específica definida no arquivo de configuração do Terraform.terraform output example_output# Gera um gráfico da infraestrutura gerenciada pelo Terraform e exporta como uma imagem PNG.terraform graph | dot -Tpng &gt; graph.png# Marca um recurso como \"sujado\", forçando o Terraform a recreá-lo na próxima aplicação.terraform taint aws_instance.example# Remove a marca de \"sujado\" de um recurso, permitindo que o Terraform continue gerenciando-o normalmente.terraform untaint aws_instance.example# Inicializa o diretório do Terraform, usando um arquivo de configuração alternativo.terraform init -backend-config=config.tfbackend# Aplica as alterações com aprovação automática, sem exigir interação do usuário.terraform apply -auto-approve# Aplica as alterações em um workspace específico.terraform apply -var-file=dev.tfvars# Destrói a infraestrutura provisionada pelo Terraform em um workspace específico.terraform destroy -var-file=dev.tfvars</code></pre></div></div><p><strong>terraform init</strong>: Este comando é usado para inicializar um novo diretório de configuração do Terraform. Ele baixa os provedores e módulos especificados no arquivo de configuração.</p><p><strong>terraform plan</strong>: Este comando cria um plano de execução que mostra o que o Terraform fará antes de efetivamente fazer qualquer alteração na infraestrutura. É uma boa prática executar isso antes de aplicar qualquer configuração.</p><p><strong>terraform apply</strong>: Este comando é usado para aplicar as alterações definidas em seu código do Terraform à infraestrutura. Ele criará, atualizará ou destruirá recursos conforme necessário.</p><p><strong>terraform destroy</strong>: Este comando é usado para destruir todos os recursos definidos em seu código do Terraform. Use com cuidado, pois isso pode resultar na perda de recursos.</p><p><strong>terraform validate</strong>: Este comando verifica a sintaxe do arquivo de configuração do Terraform e verifica se há erros.</p><p><strong>terraform fmt</strong>: Este comando formata seu código Terraform de acordo com as convenções de estilo do Terraform.</p><p><strong>terraform workspace</strong>: Este comando permite que você gerencie workspaces (espaços de trabalho) no Terraform, o que é útil para lidar com configurações diferentes em um único diretório.</p><p><strong>terraform import</strong>: Este comando é usado para importar um recurso existente em um provedor para o estado do Terraform. Isso é útil quando você deseja começar a gerenciar recursos que já existem.</p><p><strong>terraform state</strong>: Este comando permite manipular diretamente o estado do Terraform, que é útil em situações avançadas de gerenciamento de estado.</p><p><strong>terraform output</strong>: Este comando exibe os valores de saída definidos em seu arquivo de configuração do Terraform.</p><p><strong>terraform graph</strong>: Este comando gera uma representação visual do gráfico de recursos do Terraform, mostrando as dependências entre recursos.</p><p><strong>terraform taint</strong>: Este comando marca um recurso como “sujo” no estado, o que faz com que o Terraform o reconstrua na próxima vez que você executar o terraform apply.</p><p><strong>terraform untaint</strong>: Este comando remove a marcação de “sujeira” de um recurso no estado.</p><h3 id=\"variable-precedence\">Variable precedence</h3><p>Variáveis Explicitamente DefinidasArquivos de Variáveis (.tfvars)Flags de Linha de ComandoVariáveis de AmbienteArquivo de Configuração do Terraform (.tf)</p>",
            "url": "/2024/02/11/terraform.html",
            
            
            
            
            
            "date_published": "2024-02-11T00:00:00+00:00",
            "date_modified": "2024-02-11T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/11/python.html",
            "title": "cheatsheet/python",
            "summary": "Cheatsheet python",
            "content_text": "Cheatsheet pythonpython3 -m venv venvsource venv/bin/activatedeactivate",
            "content_html": "<h2 id=\"cheatsheet-python\">Cheatsheet python</h2><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>python3 <span class=\"nt\">-m</span> venv venv<span class=\"nb\">source </span>venv/bin/activatedeactivate</code></pre></div></div>",
            "url": "/2024/02/11/python.html",
            
            
            
            
            
            "date_published": "2024-02-11T00:00:00+00:00",
            "date_modified": "2024-02-11T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2024/02/11/kubectl.html",
            "title": "cheatsheet/kubectl",
            "summary": "Cheatsheet kubectl",
            "content_text": "Cheatsheet kubectl# Lista todos os pods em todos os namespaces.kubectl get pods --all-namespaces# Lista todos os serviços em todos os namespaces.kubectl get services --all-namespaces# Lista todos os deployments em todos os namespaces.kubectl get deployments --all-namespaces# Lista todos os namespaces.kubectl get namespaces# Descreve um pod específico.kubectl describe pod nome_do_pod# Descreve um serviço específico.kubectl describe service nome_do_servico# Descreve um deployment específico.kubectl describe deployment nome_do_deployment# Exibe o registro de eventos de um pod específico.kubectl get events --field-selector involvedObject.name=nome_do_pod# Exibe os logs de um pod específico.kubectl logs nome_do_pod# Executa um comando dentro de um pod específico.kubectl exec -it nome_do_pod -- comando_a_executar# Copia arquivos de/para um pod específico.kubectl cp arquivo.txt nome_do_pod:/caminho/destino# Cria um novo namespace.kubectl create namespace nome_do_namespace# Exclui um pod específico.kubectl delete pod nome_do_pod# Escala um deployment para um número específico de réplicas.kubectl scale deployment nome_do_deployment --replicas=5# Atualiza uma imagem de container em um deployment.kubectl set image deployment/nome_do_deployment nome_do_container=nova_imagem:tag# Aplica as alterações definidas em um arquivo de manifesto YAML.kubectl apply -f arquivo.yaml# Executa um job de cron dentro do cluster.kubectl create job nome_do_job --image=imagem_do_job --schedule='*/1 * * * *'# Exibe métricas de recursos do cluster.kubectl top nodeskubectl top pods# Exporta recursos do cluster para um arquivo YAML.kubectl get deployment nome_do_deployment -o yaml &gt; deployment.yaml# Aplica atualizações em recursos do cluster com base em um arquivo YAML.kubectl apply -f deployment.yaml# Cria um tunnel seguro para um serviço dentro do cluster.kubectl port-forward nome_do_pod 8080:80# Habilita o encaminhamento de portas para um pod específico.kubectl port-forward nome_do_pod 8080:80# Cria uma proxy de API para o cluster Kubernetes.kubectl proxy# Gera um diagrama de dependências de recursos do cluster.kubectl get service nome_do_servico -o json | kubectl-viz visualize# Exibe informações detalhadas sobre a configuração de rede de um pod específico.kubectl get pod nome_do_pod -o=jsonpath='{.spec.podIP}'",
            "content_html": "<h2 id=\"cheatsheet-kubectl\">Cheatsheet kubectl</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Lista todos os pods em todos os namespaces.kubectl get pods --all-namespaces# Lista todos os serviços em todos os namespaces.kubectl get services --all-namespaces# Lista todos os deployments em todos os namespaces.kubectl get deployments --all-namespaces# Lista todos os namespaces.kubectl get namespaces# Descreve um pod específico.kubectl describe pod nome_do_pod# Descreve um serviço específico.kubectl describe service nome_do_servico# Descreve um deployment específico.kubectl describe deployment nome_do_deployment# Exibe o registro de eventos de um pod específico.kubectl get events --field-selector involvedObject.name=nome_do_pod# Exibe os logs de um pod específico.kubectl logs nome_do_pod# Executa um comando dentro de um pod específico.kubectl exec -it nome_do_pod -- comando_a_executar# Copia arquivos de/para um pod específico.kubectl cp arquivo.txt nome_do_pod:/caminho/destino# Cria um novo namespace.kubectl create namespace nome_do_namespace# Exclui um pod específico.kubectl delete pod nome_do_pod# Escala um deployment para um número específico de réplicas.kubectl scale deployment nome_do_deployment --replicas=5# Atualiza uma imagem de container em um deployment.kubectl set image deployment/nome_do_deployment nome_do_container=nova_imagem:tag# Aplica as alterações definidas em um arquivo de manifesto YAML.kubectl apply -f arquivo.yaml# Executa um job de cron dentro do cluster.kubectl create job nome_do_job --image=imagem_do_job --schedule='*/1 * * * *'# Exibe métricas de recursos do cluster.kubectl top nodeskubectl top pods# Exporta recursos do cluster para um arquivo YAML.kubectl get deployment nome_do_deployment -o yaml &gt; deployment.yaml# Aplica atualizações em recursos do cluster com base em um arquivo YAML.kubectl apply -f deployment.yaml# Cria um tunnel seguro para um serviço dentro do cluster.kubectl port-forward nome_do_pod 8080:80# Habilita o encaminhamento de portas para um pod específico.kubectl port-forward nome_do_pod 8080:80# Cria uma proxy de API para o cluster Kubernetes.kubectl proxy# Gera um diagrama de dependências de recursos do cluster.kubectl get service nome_do_servico -o json | kubectl-viz visualize# Exibe informações detalhadas sobre a configuração de rede de um pod específico.kubectl get pod nome_do_pod -o=jsonpath='{.spec.podIP}'</code></pre></div></div>",
            "url": "/2024/02/11/kubectl.html",
            
            
            
            
            
            "date_published": "2024-02-11T00:00:00+00:00",
            "date_modified": "2024-02-11T00:00:00+00:00",
            
                "author": 
                ""
                
            
        }
    
    ]
}